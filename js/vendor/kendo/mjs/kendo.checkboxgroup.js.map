{"version":3,"file":"kendo.checkboxgroup.js","names":["__meta__","id","name","category","description","depends","$","undefined$1","kendo","window","ui","InputGroupBase","CHECKED","CheckBoxGroup","extend","options","inputName","inputRounded","inputSize","enabled","labelPosition","layout","items","ITEM_TEMPLATE","NS","COMPONENT","groupStyles","item","input","label","list","vertical","horizontal","disabled","checkAll","shouldCheck","that","this","inputs","element","find","prop","_value","each","i","push","value","values","currentInput","selectedElements","updatedSelectedElements","selectedValues","length","add","_changeHandler","e","target","val","_targetForPreventedChange","is","filter","trigger","_dataValRequired","validationAttributes","wrapper","attr","cssProperties","registerPrefix","registerValues","roundedValues","concat","plugin","jQuery","kendo$1"],"sources":["kendo.checkboxgroup.js"],"mappings":"MAAO,wBACA,kCACA,sBAEP,IAAIA,SAAW,CACXC,GAAI,gBACJC,KAAM,gBACNC,SAAU,MACVC,YAAa,+BACbC,QAAS,CAAE,OAAQ,iBAAkB,cAGzC,SAAUC,EAAGC,GACT,IAAIC,EAAQC,OAAOD,MACfE,EAAKF,EAAME,GACXC,EAAiBD,EAAGC,eAGpBC,EAAU,UAIVC,EAAgBF,EAAeG,OAAO,CACtCC,QAAS,CACLb,KAAM,gBACNc,UAAW,GACXC,aAAc,SACdC,UAAW,SACXC,SAAS,EACTC,cATI,QAUJC,OAXO,WAYPC,MAAO,IAGXC,cAAe,+EAIfC,GAAI,sBAEJC,UAAW,gBAEXC,YAAa,CACTC,KAAM,kBACNC,MAAO,aACPC,MAAO,mBACPC,KAAM,kBACNC,SAAU,kBACVC,WAAY,oBACZC,SAAU,cAGdC,SAAU,SAASC,GACf,IAAIC,EAAOC,KACPC,EAASF,EAAKG,QAAQC,KAAK,UAKX,IAAhBL,GACAG,EAAOG,KAAK7B,GAAS,GACrBwB,EAAKM,OAAS,GACdJ,EAAOK,MAPK,SAASC,EAAGhB,GACpBQ,EAAKM,OAAOG,KAAKjB,EAAMkB,YAOJ,IAAhBX,IACPG,EAAOG,KAAK7B,GAAS,GACrBwB,EAAKM,OAAS,KAItBI,MAAO,SAASC,GACZ,IACIC,EAEAC,EAAkBC,EAAyBN,EAH3CR,EAAOC,KAEPc,EAAiB,GAGrB,GA/DZ,YA+DgBJ,EAIA,OAHKX,EAAKM,SACNN,EAAKM,OAAS,IAEXN,EAAKM,OACT,GAAe,OAAXK,GAAqC,IAAlBA,EAAOK,OAGjC,OAFAhB,EAAKM,OAAS,QACdN,EAAKG,QAAQC,KAjEf,IAiE0BJ,EAAKV,YAAYE,OAAOa,KAAK7B,GAAS,GAE3D,GAAKmC,KAAUA,EAAOK,OAAS,GAA/B,CAUP,KANAH,EAAmBb,EAAKG,QAAQC,KAAK,gBAAkBO,EAAO,GAAK,OAE9CK,QACjBD,EAAeN,KAAKE,EAAO,IAG1BH,EAAI,EAAGA,EAAIG,EAAOK,OAAQR,IAC3BI,EAAeZ,EAAKG,QAAQC,KAAK,gBAAkBO,EAAOH,GAAK,OAC/DM,EAA0BD,EAAiBI,IAAIL,IAEnBI,OAASH,EAAiBG,SAClDH,EAAmBC,EACnBC,EAAeN,KAAKE,EAAOH,KAInCR,EAAKM,OAASS,EACdf,EAAKG,QAAQC,KAxFX,IAwFsBJ,EAAKV,YAAYE,OAAOa,KAAK7B,GAAS,GAC9DqC,EAAiBR,KAAK7B,GAAS,KAGnC0C,eAAgB,SAASC,GACrB,IAAIC,EAASlD,EAAEiD,EAAEC,QACbV,EAAQU,EAAOC,MAKfpB,KAAKqB,4BAA8BH,EAAEC,QAKpCnB,KAAKK,SACNL,KAAKK,OAAS,IAGdc,EAAOG,GAAG,YACVtB,KAAKK,OAAOG,KAAKC,GAEjBT,KAAKK,OAASL,KAAKK,OAAOkB,QAhBd,SAASjC,GACjB,OAAOA,IAASmB,KAkBxBT,KAAKwB,QAnHA,SAmHgB,CACjBL,OAAQA,KAfRnB,KAAKqB,0BAA4B,MAmBzCI,iBAAkB,SAASC,GACvBA,EAAqB,qBAAuB1B,KAAK2B,QAAQC,KAAK,qBAC9DF,EAAqB,sBAAwB,UAIrDvD,EAAM0D,cAAcC,eAAe,gBAAiB,eAEpD3D,EAAM0D,cAAcE,eAAe,gBAAiB,CAAC,CACjD3B,KAAM,UACNM,OAAQvC,EAAM0D,cAAcG,cAAcC,OAAO,CAAC,CAAC,OAAQ,aAG/D5D,EAAG6D,OAAO1D,GAzId,CA0IGJ,OAAOD,MAAMgE,QAChB,IAAIC,QAAUjE,aAELiE","sourcesContent":["import './kendo.core.js';\nimport './kendo.inputgroupbase.js';\nimport './kendo.checkbox.js';\n\nvar __meta__ = {\n    id: \"checkboxgroup\",\n    name: \"CheckBoxGroup\",\n    category: \"web\",\n    description: \"The CheckBoxGroup component.\",\n    depends: [ \"core\", \"inputgroupbase\", \"checkbox\" ]\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        ui = kendo.ui,\n        InputGroupBase = ui.InputGroupBase,\n        CHANGE = \"change\",\n        DOT = \".\",\n        CHECKED = \"checked\",\n        VERTICAL = \"vertical\",\n        AFTER = \"after\";\n\n    var CheckBoxGroup = InputGroupBase.extend({\n        options: {\n            name: \"CheckBoxGroup\",\n            inputName: \"\",\n            inputRounded: \"medium\",\n            inputSize: \"medium\",\n            enabled: true,\n            labelPosition: AFTER,\n            layout: VERTICAL,\n            items: []\n        },\n\n        ITEM_TEMPLATE: '<li class=\"k-checkbox-item\">' +\n            '<input type=\"checkbox\" class=\"k-checkbox\" >' +\n        '</li>',\n\n        NS: \".kendoCheckBoxGroup\",\n\n        COMPONENT: \"kendoCheckBox\",\n\n        groupStyles: {\n            item: \"k-checkbox-item\",\n            input: \"k-checkbox\",\n            label: \"k-checkbox-label\",\n            list: \"k-checkbox-list\",\n            vertical: \"k-list-vertical\",\n            horizontal: \"k-list-horizontal\",\n            disabled: \"k-disabled\"\n        },\n\n        checkAll: function(shouldCheck) {\n            var that = this,\n                inputs = that.element.find(\"input\"),\n                getValues = function(i, input) {\n                    that._value.push(input.value);\n                };\n\n            if (shouldCheck === true) {\n                inputs.prop(CHECKED, true);\n                that._value = [];\n                inputs.each(getValues);\n            } else if (shouldCheck === false) {\n                inputs.prop(CHECKED, false);\n                that._value = [];\n            }\n        },\n\n        value: function(values) {\n            var that = this,\n                currentInput,\n                selectedValues = [],\n                selectedElements, updatedSelectedElements, i;\n\n            if (values === undefined$1) {\n                if (!that._value) {\n                    that._value = [];\n                }\n                return that._value;\n            } else if (values === null || values.length === 0) {\n                that._value = [];\n                that.element.find(DOT + that.groupStyles.input).prop(CHECKED, false);\n                return;\n            } else if (!values || values.length < 1) {\n                return;\n            }\n\n            selectedElements = that.element.find(\"input[value='\" + values[0] + \"']\");\n\n            if (selectedElements.length) {\n                selectedValues.push(values[0]);\n            }\n\n            for (i = 1; i < values.length; i++) {\n                currentInput = that.element.find(\"input[value='\" + values[i] + \"']\");\n                updatedSelectedElements = selectedElements.add(currentInput);\n\n                if (updatedSelectedElements.length > selectedElements.length) {\n                    selectedElements = updatedSelectedElements;\n                    selectedValues.push(values[i]);\n                }\n            }\n\n            that._value = selectedValues;\n            that.element.find(DOT + that.groupStyles.input).prop(CHECKED, false);\n            selectedElements.prop(CHECKED, true);\n        },\n\n        _changeHandler: function(e) {\n            var target = $(e.target),\n                value = target.val(),\n                filterOut = function(item) {\n                    return item !== value;\n                };\n\n            if (this._targetForPreventedChange === e.target) {\n                this._targetForPreventedChange = null;\n                return;\n            }\n\n            if (!this._value) {\n                this._value = [];\n            }\n\n            if (target.is(\":checked\")) {\n                this._value.push(value);\n            } else {\n                this._value = this._value.filter(filterOut);\n            }\n\n            this.trigger(CHANGE, {\n                target: target\n            });\n        },\n\n        _dataValRequired: function(validationAttributes) {\n            validationAttributes[\"data-msg-required\"] = this.wrapper.attr(\"data-val-required\");\n            validationAttributes[\"data-rule-required\"] = \"true\";\n        }\n    });\n\n    kendo.cssProperties.registerPrefix(\"CheckBoxGroup\", \"k-checkbox-\");\n\n    kendo.cssProperties.registerValues(\"CheckBoxGroup\", [{\n        prop: \"rounded\",\n        values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n    }]);\n\n    ui.plugin(CheckBoxGroup);\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}