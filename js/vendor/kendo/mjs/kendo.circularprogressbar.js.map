{"version":3,"file":"kendo.circularprogressbar.js","names":["__meta__","id","name","category","description","depends","$","undefined$1","window","kendo","dataviz","interpolateValue","drawing","ui","Widget","Surface","geometry","Animation","Arc","limitValue","round","DrawingGroup","Group","PointerAnimation","extend","init","element","options","fn","call","this","animationOptions","color","endColor","startColor","duration","Math","abs","newAngle","oldAngle","Color","step","pos","that","angle","setEndAngle","r","g","b","stroke","toHex","CircularProgressBar","userOptions","theme","themes","themeName","lowerName","toLowerCase","SASS_THEMES","indexOf","autoTheme","gauge","themeOptions","_value","value","addClass","redraw","_centerTemplate","_aria","ariaRole","centerTemplate","colors","transitions","pointerWidth","indeterminate","label","labelId","events","_restrictValue","_centerSvgElements","_pointerChange","_updateProgress","_initSurface","_buildVisual","_draw","resize","destroy","announce","remove","wrapper","attr","role","appendTo","text","center","_getCenter","circle","_geometry","x","y","arc","geometryChange","position","template","centerElement","_getCenterElement","html","_getColor","_centerTemplatePosition","width","height","css","_centerElement","append","oldValue","newValue","_slotAngle","play","surface","clear","draw","_visuals","find","innerHTML","format","visuals","pointer","radius","min","circleGeometry","Circle","fill","scale","rangePlaceholderColor","_createArc","currentValue","isNumber","idx","length","range","rangeColor","from","to","endAngle","rangeRadius","rangeSize","rangeGeom","radiusX","radiusY","startAngle","opacity","right","bottom","size","_getSize","left","top","max","Point","defaultSize","offsetWidth","offsetHeight","_surfaceElement","surfaceElement","document","createElement","appendChild","elementSize","create","type","renderAs","plugin","jQuery","kendo$1"],"sources":["kendo.circularprogressbar.js"],"mappings":"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","sourcesContent":["import './kendo.dataviz.themes.js';\n\nvar __meta__ = {\n    id: \"circularprogressBar\",\n    name: \"CircularProgressBar\",\n    category: \"web\",\n    description: \"The Circular ProgressBar component represents an SVG loader\",\n    depends: [ \"core\", \"dataviz.themes\" ]\n};\n\n(function($, undefined$1) {\n\n    window.kendo.dataviz = window.kendo.dataviz || {};\n    var dataviz = kendo.dataviz;\n    var interpolateValue = dataviz.interpolateValue;\n    var drawing = kendo.drawing;\n    var ui = kendo.ui;\n    var Widget = ui.Widget;\n    var Surface = drawing.Surface;\n    var geometry = kendo.geometry;\n    var Animation = drawing.Animation;\n    var Arc = drawing.Arc;\n    var limitValue = dataviz.limitValue;\n    var round = dataviz.round;\n    var DrawingGroup = drawing.Group;\n    var DEFAULT_HEIGHT = 200;\n    var GEO_ARC_ADJUST_ANGLE = 180;\n    var MINVALUE = 0;\n    var MAXVALUE = 100;\n    var DEFAULT_MARGIN = 5;\n    var ANGULAR_SPEED = 150;\n    var DEFAULT_WIDTH = 200;\n    var MAX_DURATION = 800;\n    var announceElement = '<span aria-live=\"polite\" class=\"k-sr-only k-progress-announce\"></span>';\n\n    var PointerAnimation = Animation.extend({\n        init: function(element, options) {\n            Animation.fn.init.call(this, element, options);\n\n            var animationOptions = this.options;\n            var color = options.endColor;\n            var startColor = options.startColor;\n            var duration = (Math.abs(animationOptions.newAngle - animationOptions.oldAngle) / animationOptions.duration) * 1000;\n            animationOptions.duration = limitValue(duration, ANGULAR_SPEED, MAX_DURATION);\n\n            this.element = element;\n\n            if (startColor !== color) {\n                this.startColor = new kendo.Color(startColor);\n                this.color = new kendo.Color(color);\n            }\n        },\n\n        step: function(pos) {\n            var that = this;\n            var options = that.options;\n            var startColor = that.startColor;\n            var color = that.color;\n            var angle = interpolateValue(options.oldAngle, options.newAngle, pos);\n\n            this.element.geometry().setEndAngle(angle);\n\n            if (color) {\n                var r = round(interpolateValue(startColor.r, color.r, pos));\n                var g = round(interpolateValue(startColor.g, color.g, pos));\n                var b = round(interpolateValue(startColor.b, color.b, pos));\n\n                this.element.stroke(new kendo.Color(r, g, b).toHex());\n            }\n        },\n    });\n\n    var CircularProgressBar = Widget.extend({\n        init: function(element, userOptions) {\n\n            var that = this;\n            Widget.fn.init.call(that, element, userOptions);\n            this.theme = themeOptions(this.options);\n            this._value = this.options.value;\n            this.element.addClass(\"k-gauge\");\n\n            this.redraw();\n            this._centerTemplate();\n            this._aria();\n        },\n\n        options: {\n            name: \"CircularProgressBar\",\n            ariaRole: false,\n            theme: \"default\",\n            centerTemplate: '',\n            color: \"\",\n            colors: [],\n            transitions: true,\n            pointerWidth: 5,\n            indeterminate: false,\n            label: null,\n            labelId: null\n        },\n\n        events: [ ],\n\n        value: function(value) {\n            var that = this;\n\n            if (value === undefined$1) {\n                return that._value;\n            }\n\n            value = that._restrictValue(value);\n\n            that._centerSvgElements();\n            that._pointerChange(that._value, value);\n            that._value = value;\n            that._centerTemplate();\n            that._updateProgress();\n        },\n\n        redraw: function() {\n            this._initSurface();\n            this._buildVisual();\n            this._draw();\n        },\n\n        resize: function() {\n            var transitions = this.options.transitions;\n\n            this.options.transitions = false;\n            this._initSurface();\n            this._buildVisual();\n            this._draw();\n            this._centerTemplate();\n            this.options.transitions = transitions;\n        },\n\n        destroy: function() {\n            var that = this;\n\n            if (that.announce) {\n                that.announce.remove();\n            }\n\n            Widget.fn.destroy.call(that);\n        },\n\n        _aria: function() {\n            var that = this,\n                options = that.options,\n                value = that.value() || 0,\n                wrapper = that.element;\n\n            if (!options.ariaRole) {\n                return;\n            }\n\n            wrapper.attr({\n                \"role\": \"progressbar\"\n            });\n\n            if (!options.indeterminate) {\n                wrapper.attr({\n                    \"aria-valuemin\": 0,\n                    \"aria-valuemax\": 100\n                });\n            }\n\n            if (!!options.labelId) {\n                wrapper.attr(\"aria-labelledby\", options.labelId);\n            } else if (!!options.label) {\n                wrapper.attr(\"aria-label\", options.label);\n            }\n\n            that.announce = $(announceElement);\n            that.announce.appendTo($(\"body\"));\n\n            if (!options.indeterminate) {\n                wrapper.attr(\"aria-valuenow\", value);\n\n                that.announce.text(value + \"%\");\n            } else {\n                that.announce.text(\"Loading...\");\n            }\n        },\n\n        _restrictValue: function(value) {\n\n            if (value < MINVALUE) {\n                return MINVALUE;\n            }\n\n            if (value > MAXVALUE) {\n                return MAXVALUE;\n            }\n\n            return value;\n        },\n\n        _updateProgress: function() {\n            var that = this;\n            var options = that.options;\n            var value = that.value() || 0;\n\n            if (options.ariaRole && !options.indeterminate) {\n                that.element.attr(\"aria-valuenow\", value);\n\n                if (that.announce) {\n                    that.announce.text(value + \"%\");\n                }\n            }\n        },\n\n        _centerSvgElements: function() {\n            var center = this._getCenter();\n\n            if (this.circle._geometry.center.x !== center.x ||\n                this.circle._geometry.center.y !== center.y) {\n\n                    this.circle._geometry.center.x = center.x;\n                    this.circle._geometry.center.y = center.y;\n                    this.arc._geometry.center.x = center.x;\n                    this.arc._geometry.center.y = center.y;\n                    this.circle.geometryChange();\n                    this.arc.geometryChange();\n            }\n        },\n\n        _centerTemplate: function() {\n            var position;\n            var template;\n            var centerElement;\n\n            if (this.options.centerTemplate) {\n                template = kendo.template(this.options.centerTemplate);\n\n                centerElement = this._getCenterElement();\n\n                centerElement.html(template({ color: this._getColor(this.value()), value: this.value() }));\n\n                position = this._centerTemplatePosition(centerElement.width(), centerElement.height());\n\n                centerElement.css(position);\n            } else if (this._centerElement) {\n                this._centerElement.remove();\n                this._centerElement = null;\n            }\n        },\n\n        _getCenterElement: function() {\n            var centerElement = this._centerElement;\n            if (!centerElement) {\n                centerElement = this._centerElement = $('<div></div>').addClass('k-arcgauge-label');\n                this.element.append(centerElement);\n            }\n\n            return centerElement;\n        },\n\n        _pointerChange: function(oldValue, newValue) {\n            var animation;\n\n            if (this.options.transitions) {\n                animation = new PointerAnimation(this.arc, {\n                    oldAngle: this._slotAngle(oldValue),\n                    startColor: this._getColor(oldValue),\n                    newAngle: this._slotAngle(newValue),\n                    endColor: this._getColor(newValue)\n                });\n                animation.play();\n            } else {\n                this.arc.stroke(this._getColor(newValue));\n                this.arc.geometry().setEndAngle(this._slotAngle(newValue));\n            }\n        },\n\n        _draw: function() {\n            var arc;\n            var center;\n            var animation;\n            var surface = this.surface;\n\n            surface.clear();\n            surface.draw(this._visuals);\n\n            if (this.options.indeterminate) {\n                arc = surface.element.find(\"path\");\n                center = this._getCenter();\n                arc[0].innerHTML = kendo.format('<animateTransform attributeName=\"transform\" type=\"rotate\" from=\"0 {0} {1}\" to=\"360 {0} {1}\" dur=\"1s\" repeatCount=\"indefinite\" />', center.x, center.y);\n            } else if (this.options.transitions) {\n                animation = new PointerAnimation(this.arc, {\n                    oldAngle: this._slotAngle(0),\n                    startColor: this._getColor(0),\n                    newAngle: this._slotAngle(this.value()),\n                    endColor: this._getColor(this.value()),\n                });\n                animation.play();\n            }\n        },\n\n\n        _buildVisual: function() {\n            var visuals = this._visuals = new DrawingGroup();\n            var center = this._getCenter();\n            var color = this._getColor(this.value()) || this.theme.pointer.color;\n            var radius = Math.min(center.x, center.y) - DEFAULT_MARGIN - this.options.pointerWidth;\n\n            var circleGeometry = new geometry.Circle([center.x, center.y], radius + (this.options.pointerWidth / 2));\n            var circle = this.circle = new drawing.Circle(circleGeometry, {\n                fill: { color: \"none\" },\n                stroke: { color: this.theme.scale.rangePlaceholderColor, width: this.options.pointerWidth }\n            });\n\n            visuals.append(circle);\n\n            if (this.options.indeterminate) {\n                this.arc = this._createArc(360, radius, center, color);\n            } else {\n                this.arc = this._createArc(this._slotAngle(this.value()), radius, center, color);\n            }\n\n            visuals.append(this.arc);\n        },\n\n        _slotAngle: function(value) {\n            var result;\n\n            result = ((value - MINVALUE) / (MAXVALUE) * 360) + 90;\n\n            return result + GEO_ARC_ADJUST_ANGLE;\n        },\n\n        _getColor: function(value) {\n            var options = this.options;\n            var colors = options.colors;\n            var color = options.color;\n            var currentValue = dataviz.isNumber(value) ? value : 0;\n\n            if (colors) {\n                for (var idx = 0; idx < colors.length; idx++) {\n                    var range = colors[idx];\n                    var rangeColor = range.color;\n                    var from = range.from; if (from === void 0) { from = 0; }\n                    var to = range.to; if (to === void 0) { to = 100; }\n\n                    if (from <= currentValue && currentValue <= to) {\n                        return rangeColor;\n                    }\n                }\n            }\n\n            return color;\n        },\n\n        _createArc: function(endAngle, rangeRadius, center, color) {\n            var rangeSize = this.options.pointerWidth;\n            var rangeGeom = new geometry.Arc([center.x, center.y], {\n                radiusX: rangeRadius + (rangeSize / 2),\n                radiusY: rangeRadius + (rangeSize / 2),\n                startAngle: 270,\n                endAngle: endAngle\n            });\n\n            return new Arc(rangeGeom, {\n                stroke: {\n                    width: rangeSize,\n                    color: this.options.color || color,\n                    opacity: this.options.opacity\n                }\n            });\n        },\n\n        _centerTemplatePosition: function(width, height) {\n            var size = this._getSize();\n            var center = this._getCenter();\n\n            var left = center.x - width / 2;\n            var top = center.y - height / 2;\n            var right;\n            var bottom;\n\n            if (width < size.width) {\n                right = left + width;\n\n                left = Math.max(left, 0);\n\n                if (right > size.width) {\n                    left -= right - size.width;\n                }\n            }\n\n            if (height < size.height) {\n                bottom = top + height;\n\n                if (bottom > size.height) {\n                    top -= bottom - size.height;\n                }\n            }\n\n            return {\n                left: left,\n                top: top\n            };\n        },\n\n        _getCenter: function() {\n            var size = this._getSize();\n            return new dataviz.Point(size.width / 2, size.height / 2);\n        },\n\n        _getSize: function() {\n            var element = this.element;\n            var defaultSize = {\n                width: DEFAULT_WIDTH,\n                height: DEFAULT_HEIGHT\n            };\n            var width = element[0].offsetWidth;\n            var height = element[0].offsetHeight;\n\n            if (!width) {\n                width = defaultSize.width;\n            }\n\n            if (!height) {\n                height = defaultSize.height;\n            }\n\n            return { width: width, height: height };\n        },\n\n        _surfaceElement: function() {\n            if (!this.surfaceElement) {\n                this.surfaceElement = document.createElement('div');\n                this.element[0].appendChild(this.surfaceElement);\n            }\n\n            return this.surfaceElement;\n        },\n\n        _initSurface: function() {\n            var that = this;\n            var options = that.options;\n            var surface = that.surface;\n            var element = this._surfaceElement();\n            var size = this._getSize();\n\n            dataviz.elementSize(element, size);\n\n            if (!surface) {\n                this.surface = Surface.create(element, {\n                    type: options.renderAs\n                });\n            } else {\n                this.surface.clear();\n                this.surface.resize();\n            }\n        }\n\n    });\n\n    function themeOptions(options) {\n        var themes = dataviz.ui.themes || {};\n        var themeName = options.theme || \"\";\n        var lowerName = themeName.toLowerCase();\n\n        if (dataviz.SASS_THEMES.indexOf(lowerName) != -1) {\n            return dataviz.autoTheme().gauge;\n        }\n\n        return (themes[themeName] || themes[lowerName] || {}).gauge;\n    }\n\n    ui.plugin(CircularProgressBar);\n\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}