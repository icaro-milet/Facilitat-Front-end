{"version":3,"file":"kendo.data.js","names":["logic","or","concat","acc","fn","a","identity","and","operatorsMap","isnullorempty","kendo","isBlank","isnotnullorempty","isPresent","contains","b","indexOf","doesnotcontain","doesnotendwith","length","doesnotstartwith","lastIndexOf","endswith","eq","gt","gte","isempty","isnotempty","isnotnull","isnull","lt","lte","neq","startswith","dateRegExp","convertValue","value","ignoreCase","accentFoldingFiltering","isString","date","exec","Date","getTime","toLocaleLowerCase","toLowerCase","isDate","typedGetter","prop","x","isNumeric","transformFilter","field","operator","itemProp","isFunction","getter","op","isCompositeFilterDescriptor","source","filters","transformCompositeFilter","filter","combiner","map","extendAccentFolding","reduce","Object","assign","filterExprNoEval","expr","__meta__","id","name","category","description","depends","features","$","undefined$1","extend","isPlainObject","isEmptyObject","isArray","Array","grep","ajax","each","noop","window","Observable","Class","STRING","FUNCTION","CREATE","READ","UPDATE","DESTROY","CHANGE","SYNC","GET","ERROR","REQUESTSTART","PROGRESS","REQUESTEND","ITEMSLOADED","ITEMLOAD","crud","o","stringify","math","Math","push","join","pop","splice","shift","slice","unshift","toString","stableSort","support","objectKeys","ObservableArray","init","array","type","that","this","ObservableObject","call","wrapAll","_loadPromises","_loadedNodes","at","index","toJSON","serializeFunctions","idx","json","parent","target","wrap","object","Model","bind","e","isGroup","hasOwnProperty","trigger","node","items","action","promise","_loading","done","collection","nodes","loading","result","arguments","apply","omitChangeEvent","sort","howMany","item","i","len","omitCache","children","unbind","forEach","callback","thisArg","context","reduceRight","find","every","some","remove","empty","Symbol","iterator","prototype","LazyObservableArray","data","events","_events","_parent","eventHandler","prefix","key","event","_notifyChange","ownKeys","ignoreObjectKeys","keys","filteredObjectKeys","props","protoKeys","getPrototypeOf","isPrimitiveType","getOwnPropertyNames","f","member","_handlers","charAt","uid","guid","shouldSerialize","get","_set","composite","paths","split","path","obj","set","setter","isSetPrevented","current","change","isObservableArray","isDataSource","DataSource","equal","y","xtype","parsers","number","parseFloat","parseDate","boolean","string","default","defaultValues","defaults","_initializers","dirty","dirtyFields","idField","_defaultId","_parse","parse","fieldName","fields","getFieldByName","editable","accept","isNew","define","base","options","model","originalName","proto","functionFields","nullable","defaultValue","Comparer","selector","compare","localeCompare","create","dir","combine","comparers","StableComparer","asc","valueA","valueB","__position","desc","operators","quote","str","replace","JSON","textOp","impl","ignore","getMatchRegexp","pattern","rx","esc","ch","matches","substring","doesnotmatch","Query","normalizeSort","descriptor","descriptors","d","sortFields","sorts","sortObject","filterExpr","expression","noEval","expressions","fieldFunctions","operatorFunctions","match","operatorMap","equals","isequalto","equalto","ne","notequals","isnotequalto","notequalto","notequal","islessthan","lessthan","less","le","islessthanorequalto","lessthanequal","isgreaterthan","greaterthan","greater","isgreaterthanorequalto","greaterthanequal","ge","notsubstringof","normalizeOperator","normalizeFilter","compareDescriptor","f1","f2","normalizeDescriptor","fieldComparer","normalizeGroup","skipItemSorting","aggregates","normalizeGroupWithoutCompare","groupValueComparer","calculateAggregate","accumulator","state","aggr","functionName","aggregate","functions","accessor","compareFilters","expr1","expr2","filters1","filters2","toArray","range","count","skip","take","select","order","inPlace","orderBy","orderByDescending","comparer","compiled","group","allData","groupPaging","groupAllData","hasSubgroups","itemCount","subgroupCount","groupBy","currentValue","sorted","_sortForGrouping","groupValue","_sortGroups","groups","sum","isNumber","average","max","min","val","isNaN","process","groupDescriptorsWithoutSort","total","customGroupSort","groupDescriptors","anyGroupDescriptorHasCompare","query","groupDescriptorsWithoutCompare","normalizedSort","filterCallback","flatGroups","groupDescriptor","virtual","LocalTransport","read","success","update","destroy","RemoteTransport","parameterMap","url","cache","Cache","add","submit","option","setup","error","parameters","operation","_store","clear","serializeRecords","getters","modelInstance","originalFieldNames","fieldNames","record","setters","convertRecords","convertGroup","wrapDataAccess","originalFunction","converter","wrapDataAccessBase","store","inmemory","DataReader","schema","modelBase","dataFunction","_dataAccessFunction","groupsFunction","serializeFunction","serialize","serializeGetters","fromName","from","_wrapDataAccessBase","errors","fillLastGroup","originalGroup","newGroup","currOriginal","currentNew","mergeGroups","dest","indexFunction","groupsLength","indexFn","groupIndex","itemIndex","flattenGroups","wrapGroupItems","eachGroupItems","func","replaceInRanges","ranges","observable","replaceInRange","replaceWithObservable","view","serverGrouping","viewIndex","indexOfPristineModel","indexOfModel","fieldNameFromModel","convertFilterDescriptorsField","convertDescriptorsField","_map","_prefetch","_data","_pristineData","_ranges","_view","_pristineTotal","_destroyed","_pageSize","pageSize","_page","page","_sort","_sortFields","_filter","_group","_aggregate","_total","_groupPaging","_groupsState","_shouldDetachObservableParents","transport","Transport","pushCreate","_pushCreate","pushUpdate","_pushUpdate","pushDestroy","_pushDestroy","offlineStorage","_storage","getItem","localStorage","setItem","reader","readers","_detachObservableParents","_observe","_online","serverSorting","serverPaging","serverFiltering","serverAggregates","batch","inPlaceSort","clone","online","sync","Deferred","resolve","offlineData","_isGrouped","_isServerGrouped","_isServerGroupPaged","_isGroupPaged","_push","_readData","_flatData","useRanges","getByUid","_getByUid","dataItems","_storeData","_addRange","_process","_observeView","flatView","insert","_createNewModel","_wrapInEmptyGroup","_insertModelInRange","pushInsert","rangeSpan","_getCurrentRangeSpan","pushed","autoSync","pristine","last","pristineData","_updatePristineForModel","_removeItems","itemsToRemove","removePristine","shouldRemovePristine","destroyed","found","_eachItem","_removePristineForModel","pushMove","_moveItems","moved","dataItem","hasGroups","_pushInDestroyed","removeModel","_removeModelFromRanges","created","notFetched","updated","promises","_sendSubmit","_send","when","then","_accept","_syncEnd","_change","cancelChanges","_cancelModel","_changesCanceled","_markOfflineUpdatesAsDirty","__state__","hasChanges","models","response","serverGroup","_handleCustomErrors","values","_executeOnPristineForModel","deepExtend","_eachPristineItem","_pristineForModel","_modelCanceled","_submit","status","reject","deferred","_promise","method","converted","params","_params","_queueRequest","isPrevented","_dequeueRequest","args","_readAggregates","replaceSubset","_serverGroupsTotal","_aggregateResult","itemIds","_skip","endless","j","_changeHandler","updatePristine","end","start","timestamp","_timeStamp","outerStart","outerEnd","_sortRanges","_groupsFlat","_appendToGroupsFlat","_updateOuterRangesLength","_getGroupByUid","xhr","errorThrown","_requestInProgress","_pending","_shouldWrap","_updateTotalForAction","parseInt","handler","first","_calculateAggregates","_take","currentRangeStart","_clearEmptyGroups","_queryProcess","resultData","dataToAggregate","_setView","_setFilterTotal","_mergeState","_currentRangeStart","moreItemsCount","_hasExpandedSubGroups","_findGroupedRange","parents","itemsLength","groupCount","itemsToSkip","taken","_fetchGroupItems","_fetchingGroupItems","skipped","includeParents","excludeHeader","currentItems","_expandedSubGroupItemsCount","includeCurrentItems","subGroup","temp","endSpecified","groupItemsSkip","firstItem","lastItem","expandedSubGroupItemsCount","groupItemCount","getGroupItems","floor","round","subgroups","_composeItemsFilter","findSubgroups","clearTimeout","_timeout","setTimeout","_groupItemsSuccessHandler","totalField","totalCount","_updateRangePristineData","countAdded","_currentRequestTimeStamp","_skipRequestsInProgress","indexOfCurrentGroup","g","currentGroup","dataLength","indexes","rangesLength","_containsSubGroup","_cloneGroup","subgroup","currentSubGroup","filterTotal","setDefaultValue","fetch","_query","next","totalPages","prev","_pageableQueryOptions","getGroupsFlat","groupsTotal","includeExpanded","_calculateGroupsTotal","itemsField","ignoreState","_groupsTotal","countGroupRange","_emptyAggregates","ceil","inRange","_findRange","lastRange","firstItemUid","enableRequestsInProgress","pageSkip","size","_processRangeData","_originalPageSkip","_originalSize","_adjustPageSkip","_groupRangeExists","_rangeExists","prefetch","skipIdx","takeIdx","startIndex","endIndex","rangeData","rangeEnd","processed","flatData","prevRangeEnd","remote","groupMapOptions","isGroupPaged","startField","endField","_mergeGroups","_getRangesMismatch","mismatch","prevGroup","eventData","_omitPrefetch","paging","sorting","filtering","_prefetchSuccessHandler","force","_multiplePrefetch","prevRange","_getPrevRange","_getNextRange","availableItemsCount","_removeModelFromRange","_updateRangesLength","mismatchFound","mismatchLength","lengthDifference","abs","rangeLength","dataSource","transportOptions","transports","schemas","logToConsole","table","fieldIndex","cells","cell","tbody","tBodies","rows","fieldCount","nodeName","innerHTML","inferTable","optgroup","firstField","secondField","parentNode","disabled","label","text","attributes","specified","inferSelect","Node","hasChildren","childrenField","childrenOptions","hasChildrenObject","_childrenOptions","_initChildren","_loaded","HierarchicalDataSource","_updateChildrenField","append","loaded","level","_childrenLoaded","load","one","_matchFilter","dataMethod","_attachBubbleHandlers","_hierarchicalFilter","_childrenLoading","isLoading","_markHierarchicalQuery","_updateHierarchicalFilter","_find","inferList","list","textChild","className","textField","urlField","spriteCssClassField","imageUrlField","elements","tagName","firstChild","attr","nodeType","nodeValue","trim","_dataSource","Buffer","viewSize","disablePrefetch","_prefetching","buffer","_reset","_syncWithDataSource","setViewSize","_recalculate","itemPresent","dataOffset","prefetchThreshold","midPageThreshold","nextMidRange","nextPageThreshold","nextFullRange","pullBackThreshold","offset","previousMidRange","previousFullRange","_goToRange","nextRange","syncDataSource","prefetchOffset","expanding","_expanding","_syncPending","_firstItemUid","BatchBuffer","batchSize","batchBuffer","endreached","prefetching","prefetched","reset","resize","jQuery","kendo$1"],"sources":["kendo.data.js"],"mappings":"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","sourcesContent":["import './kendo.core.js';\nimport './kendo.data.odata.js';\nimport './kendo.data.xml.js';\n\n/*\nThis code is copied/inspired by the internal @progress/kendo-data-query repo:\nhttps://github.com/telerik/kendo-data-query/tree/develop/src/filtering\n\n!!!\n1. If updates are to be synced consider the accentFoldingFiltering,\n   which at the moment is not present as a feature in the data-query-package.\n\n2. Double-check available operators as well.\n\n3. Make sure objs are strings -> i.e., replace (a || \"\") to (a + '')\n!!!\n\nIn future, if we consider reusing the code directly we should revise the above omissions.\n*/\n\nconst logic = {\n    \"or\": {\n        concat: (acc, fn) => a => acc(a) || fn(a),\n        identity: () => false\n    },\n    \"and\": {\n        concat: (acc, fn) => a => acc(a) && fn(a),\n        identity: () => true\n    }\n};\n\nconst operatorsMap = {\n    isnullorempty: (a) => kendo.isBlank(a) || a === '',\n    isnotnullorempty: (a) => kendo.isPresent(a) && a !== '',\n    contains: (a, b) => (a + '').indexOf(b) >= 0,\n    doesnotcontain: (a, b) => (a + '').indexOf(b) === -1,\n    doesnotendwith: (a, b) => (a + '').indexOf(b, (a || \"\").length - (b || \"\").length) < 0,\n    doesnotstartwith: (a, b) => (a + '').lastIndexOf(b, 0) === -1,\n    endswith: (a, b) => (a + '').indexOf(b, (a || \"\").length - (b || \"\").length) >= 0,\n    eq: (a, b) => a === b,\n    gt: (a, b) => a > b,\n    gte: (a, b) => a >= b,\n    isempty: (a) => a === '',\n    isnotempty: (a) => a !== '',\n    isnotnull: (a) => kendo.isPresent(a),\n    isnull: (a) => kendo.isBlank(a),\n    lt: (a, b) => a < b,\n    lte: (a, b) => a <= b,\n    neq: (a, b) => a != b,\n    startswith: (a, b) => (a + '').lastIndexOf(b, 0) === 0\n};\n\nconst dateRegExp = /^\\/Date\\((.*?)\\)\\/$/;\n\nconst convertValue = (value, ignoreCase, accentFoldingFiltering) => {\n    if (value != null && kendo.isString(value)) {\n        const date = dateRegExp.exec(value);\n        if (date) {\n            return new Date(+date[1]).getTime();\n        } else if (ignoreCase) {\n            return accentFoldingFiltering ? value.toLocaleLowerCase(accentFoldingFiltering) : value.toLowerCase();\n        }\n    } else if (value != null && kendo.isDate(value)) {\n        return value.getTime();\n    }\n    return value;\n};\n\nconst typedGetter = (prop, value, ignoreCase, accentFoldingFiltering) => {\n    if (!kendo.isPresent(value)) {\n        return prop;\n    }\n\n    let acc = prop;\n\n    if (kendo.isString(value)) {\n        const date = dateRegExp.exec(value);\n        if (date) {\n            value = new Date(+date[1]);\n        } else {\n            acc = a => {\n                const x = prop(a);\n                if (typeof x === 'string' && ignoreCase) {\n                    return accentFoldingFiltering ? x.toLocaleLowerCase(accentFoldingFiltering) : x.toLowerCase();\n                } else {\n                    return kendo.isNumeric(x) ? x + \"\" : x;\n                }\n            };\n        }\n    }\n\n    if (kendo.isDate(value)) {\n        return a => {\n            const x = acc(a);\n            return kendo.isDate(x) ? x.getTime() : x;\n        };\n    }\n    return acc;\n};\n\nconst transformFilter = ({ field, ignoreCase, value, operator = 'eq', accentFoldingFiltering }) => {\n    field = !kendo.isPresent(field) ? a => a : field;\n\n    ignoreCase = kendo.isPresent(ignoreCase) ? ignoreCase : true;\n\n    const itemProp = typedGetter(\n        kendo.isFunction(field) ? field : kendo.getter(field, true),\n        value,\n        ignoreCase,\n        accentFoldingFiltering\n    );\n\n    value = convertValue(value, ignoreCase, accentFoldingFiltering);\n\n    const op = kendo.isFunction(operator) ? operator : operatorsMap[operator];\n\n    return a => op(itemProp(a), value, ignoreCase);\n};\n\nconst isCompositeFilterDescriptor = (source) => kendo.isPresent(source.filters);\n\nconst transformCompositeFilter = (filter) => {\n    const accentFoldingFiltering = filter.accentFoldingFiltering;\n    const combiner = logic[filter.logic || 'and'];\n    return filter.filters\n        .filter(kendo.isPresent)\n        .map(x => (isCompositeFilterDescriptor(x) ? transformCompositeFilter(extendAccentFolding(x, accentFoldingFiltering)) : transformFilter(extendAccentFolding(x, accentFoldingFiltering))))\n        .reduce(combiner.concat, combiner.identity);\n};\n\nconst extendAccentFolding = (filter, accentFoldingFiltering) => (kendo.isPresent(accentFoldingFiltering) ? Object.assign(filter, { accentFoldingFiltering }) : filter);\n\nconst filterExprNoEval = function(expr) {\n    return transformCompositeFilter(expr);\n};\n\nvar __meta__ = {\n    id: \"data\",\n    name: \"Data source\",\n    category: \"framework\",\n    description: \"Powerful component for using local and remote data.Fully supports CRUD, Sorting, Paging, Filtering, Grouping, and Aggregates.\",\n    depends: [ \"core\" ],\n    features: [ {\n        id: \"data-odata\",\n        name: \"OData\",\n        description: \"Support for accessing Open Data Protocol (OData) services.\",\n        depends: [ \"data.odata\" ]\n    }, {\n        id: \"data-signalr\",\n        name: \"SignalR\",\n        description: \"Support for binding to SignalR hubs.\",\n        depends: [ \"data.signalr\" ]\n    }, {\n        id: \"data-XML\",\n        name: \"XML\",\n        description: \"Support for binding to XML.\",\n        depends: [ \"data.xml\" ]\n    }]\n};\n\n\n(function($, undefined$1) {\n    var extend = $.extend,\n        isPlainObject = $.isPlainObject,\n        isEmptyObject = $.isEmptyObject,\n        isArray = Array.isArray,\n        grep = $.grep,\n        ajax = $.ajax,\n        map,\n        each = $.each,\n        noop = $.noop,\n        kendo = window.kendo,\n        isFunction = kendo.isFunction,\n        Observable = kendo.Observable,\n        Class = kendo.Class,\n        STRING = \"string\",\n        FUNCTION = \"function\",\n        ASCENDING = \"asc\",\n        CREATE = \"create\",\n        READ = \"read\",\n        UPDATE = \"update\",\n        DESTROY = \"destroy\",\n        CHANGE = \"change\",\n        SYNC = \"sync\",\n        GET = \"get\",\n        ERROR = \"error\",\n        REQUESTSTART = \"requestStart\",\n        PROGRESS = \"progress\",\n        REQUESTEND = \"requestEnd\",\n        ITEMSLOADED = \"itemsLoaded\",\n        ITEMLOAD = \"itemLoad\",\n        crud = [CREATE, READ, UPDATE, DESTROY],\n        identity = function(o) { return o; },\n        getter = kendo.getter,\n        stringify = kendo.stringify,\n        math = Math,\n        push = [].push,\n        join = [].join,\n        pop = [].pop,\n        splice = [].splice,\n        shift = [].shift,\n        slice = [].slice,\n        unshift = [].unshift,\n        toString = {}.toString,\n        stableSort = kendo.support.stableSort,\n        dateRegExp = /^\\/Date\\((.*?)\\)\\/$/,\n        objectKeys = [];\n\n    var ObservableArray = Observable.extend({\n        init: function(array, type) {\n            var that = this;\n\n            that.type = type || ObservableObject;\n\n            Observable.fn.init.call(that);\n\n            that.length = array.length;\n\n            that.wrapAll(array, that);\n            that._loadPromises = [];\n            that._loadedNodes = [];\n        },\n\n        at: function(index) {\n            return this[index];\n        },\n\n        toJSON: function(serializeFunctions) {\n            var idx, length = this.length, value, json = new Array(length);\n\n            for (idx = 0; idx < length; idx++) {\n                value = this[idx];\n\n                if (value instanceof ObservableObject) {\n                    value = value.toJSON(serializeFunctions);\n                }\n\n                json[idx] = value;\n            }\n\n            return json;\n        },\n\n        parent: noop,\n\n        wrapAll: function(source, target) {\n            var that = this,\n                idx,\n                length,\n                parent = function() {\n                    return that;\n                };\n\n            target = target || [];\n\n            for (idx = 0, length = source.length; idx < length; idx++) {\n                target[idx] = that.wrap(source[idx], parent);\n            }\n\n            return target;\n        },\n\n        wrap: function(object, parent) {\n            var that = this,\n                observable;\n\n            if (object !== null && toString.call(object) === \"[object Object]\") {\n                observable = object instanceof that.type || object instanceof Model;\n\n                if (!observable) {\n                    object = object instanceof ObservableObject ? object.toJSON() : object;\n                    object = new that.type(object);\n                }\n\n                object.parent = parent;\n\n                object.bind(CHANGE, function(e) {\n                    var isGroup = object.hasOwnProperty(\"hasSubgroups\");\n                    that.trigger(CHANGE, {\n                        field: e.field,\n                        node: e.node,\n                        index: e.index,\n                        items: e.items || [this],\n                        action: e.node || isGroup ? (e.action || \"itemloaded\") : \"itemchange\"\n                    });\n                });\n\n                object.bind(ITEMLOAD, function(e) {\n                    that._loadPromises.push(e.promise);\n                    that._loading = true;\n\n                    e.promise.done(function() {\n                        that._loadedNodes.push(e.node);\n                        var index = that._loadPromises.indexOf(e.promise);\n                        that._loadPromises.splice(index, 1);\n\n                        if (!that._loadPromises.length) {\n                            that._loading = false;\n                            that.trigger(ITEMSLOADED, { collection: that, nodes: that._loadedNodes });\n                            that._loadedNodes = [];\n                        }\n                    });\n                });\n            }\n\n            return object;\n        },\n\n        loading: function() {\n            return this._loading;\n        },\n\n        push: function() {\n            var index = this.length,\n                items = this.wrapAll(arguments),\n                result;\n\n            result = push.apply(this, items);\n\n            if (!this.omitChangeEvent) {\n                this.trigger(CHANGE, {\n                    action: \"add\",\n                    index: index,\n                    items: items\n                });\n            }\n\n            return result;\n        },\n\n        slice: slice,\n\n        sort: [].sort,\n\n        join: join,\n\n        pop: function() {\n            var length = this.length, result = pop.apply(this);\n\n            if (length) {\n                this.trigger(CHANGE, {\n                    action: \"remove\",\n                    index: length - 1,\n                    items: [result]\n                });\n            }\n\n            return result;\n        },\n\n        splice: function(index, howMany, item) {\n            var items = this.wrapAll(slice.call(arguments, 2)),\n                result, i, len;\n\n            result = splice.apply(this, [index, howMany].concat(items));\n\n            if (result.length) {\n                if (!this.omitChangeEvent) {\n                    this.trigger(CHANGE, {\n                        action: \"remove\",\n                        index: index,\n                        items: this.omitCache && this.omitCache.length ? result.concat(this.omitCache) : result\n                    });\n                    this.omitCache = [];\n                }\n\n                for (i = 0, len = result.length; i < len; i++) {\n                    if (result[i] && result[i].children) {\n                        result[i].unbind(CHANGE);\n                    }\n                }\n            }\n\n            if (item) {\n                if (!this.omitChangeEvent) {\n                    this.trigger(CHANGE, {\n                        action: \"add\",\n                        index: index,\n                        items: items\n                    });\n                }\n            }\n            return result;\n        },\n\n        shift: function() {\n            var length = this.length, result = shift.apply(this);\n\n            if (length) {\n                this.trigger(CHANGE, {\n                    action: \"remove\",\n                    index: 0,\n                    items: [result]\n                });\n            }\n\n            return result;\n        },\n\n        unshift: function() {\n            var items = this.wrapAll(arguments),\n                result;\n\n            result = unshift.apply(this, items);\n\n            this.trigger(CHANGE, {\n                action: \"add\",\n                index: 0,\n                items: items\n            });\n\n            return result;\n        },\n\n        indexOf: function(item) {\n            var that = this,\n                idx,\n                length;\n\n            for (idx = 0, length = that.length; idx < length; idx++) {\n                if (that[idx] === item) {\n                    return idx;\n                }\n            }\n            return -1;\n        },\n\n        forEach: function(callback, thisArg) {\n            var idx = 0;\n            var length = this.length;\n            var context = thisArg || window;\n\n            for (; idx < length; idx++) {\n                callback.call(context, this[idx], idx, this);\n            }\n        },\n\n        map: function(callback, thisArg) {\n            var idx = 0;\n            var result = [];\n            var length = this.length;\n            var context = thisArg || window;\n\n            for (; idx < length; idx++) {\n                result[idx] = callback.call(context, this[idx], idx, this);\n            }\n\n            return result;\n        },\n\n        reduce: function(callback) {\n            var idx = 0,\n                result,\n                length = this.length;\n\n            if (arguments.length == 2) {\n                result = arguments[1];\n            } else if (idx < length) {\n                result = this[idx++];\n            }\n\n            for (; idx < length; idx++) {\n                result = callback(result, this[idx], idx, this);\n            }\n\n            return result;\n        },\n\n        reduceRight: function(callback) {\n            var idx = this.length - 1,\n                result;\n\n            if (arguments.length == 2) {\n                result = arguments[1];\n            } else if (idx > 0) {\n                result = this[idx--];\n            }\n\n            for (; idx >= 0; idx--) {\n                result = callback(result, this[idx], idx, this);\n            }\n\n            return result;\n        },\n\n        filter: function(callback, thisArg) {\n            var idx = 0;\n            var result = [];\n            var item;\n            var length = this.length;\n            var context = thisArg || window;\n\n            for (; idx < length; idx++) {\n                item = this[idx];\n                if (callback.call(context, item, idx, this)) {\n                    result[result.length] = item;\n                }\n            }\n\n            return result;\n        },\n\n        find: function(callback, thisArg) {\n            var idx = 0;\n            var item;\n            var length = this.length;\n            var context = thisArg || window;\n\n            for (; idx < length; idx++) {\n                item = this[idx];\n                if (callback.call(context, item, idx, this)) {\n                    return item;\n                }\n            }\n        },\n\n        every: function(callback, thisArg) {\n            var idx = 0;\n            var item;\n            var length = this.length;\n            var context = thisArg || window;\n\n            for (; idx < length; idx++) {\n                item = this[idx];\n                if (!callback.call(context, item, idx, this)) {\n                    return false;\n                }\n            }\n\n            return true;\n        },\n\n        some: function(callback, thisArg) {\n            var idx = 0;\n            var item;\n            var length = this.length;\n            var context = thisArg || window;\n\n            for (; idx < length; idx++) {\n                item = this[idx];\n                if (callback.call(context, item, idx, this)) {\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        // non-standard collection methods\n        remove: function(item) {\n            var idx = this.indexOf(item);\n\n            if (idx !== -1) {\n                this.splice(idx, 1);\n            }\n        },\n\n        empty: function() {\n            this.splice(0, this.length);\n        }\n    });\n\n    // Polyfill for Symbol.iterator\n    if (typeof Symbol !== \"undefined\" && Symbol.iterator && !ObservableArray.prototype[Symbol.iterator]) {\n        ObservableArray.prototype[Symbol.iterator] = [][Symbol.iterator];\n    }\n\n    var LazyObservableArray = ObservableArray.extend({\n        init: function(data, type, events) {\n            var parentFn = function() { return this; };\n\n            Observable.fn.init.call(this);\n\n            this.type = type || ObservableObject;\n\n            if (events) {\n                this._events = events;\n            }\n\n            for (var idx = 0; idx < data.length; idx++) {\n                this[idx] = data[idx];\n            }\n\n            this.length = idx;\n            this._parent = parentFn.bind(this);\n        },\n        at: function(index) {\n            var item = this[index];\n\n            if (!(item instanceof this.type)) {\n                item = this[index] = this.wrap(item, this._parent);\n            } else {\n                item.parent = this._parent;\n            }\n\n            return item;\n        }\n    });\n\n    function eventHandler(context, type, field, prefix) {\n        return function(e) {\n            var event = {}, key;\n\n            for (key in e) {\n                event[key] = e[key];\n            }\n\n            if (prefix) {\n                event.field = field + \".\" + e.field;\n            } else {\n                event.field = field;\n            }\n\n            if (type == CHANGE && context._notifyChange) {\n                context._notifyChange(event);\n            }\n\n            context.trigger(type, event);\n        };\n    }\n\n    function isPrimitiveType(value) {\n        return (typeof value === \"object\" && Object.getPrototypeOf(value) === Object.getPrototypeOf({}))\n                || Object.getPrototypeOf(value) === Object.getPrototypeOf(new Date())\n                || typeof value !== \"object\";\n      }\n\n    function ownKeys(value, ignoreObjectKeys) {\n        var props = [];\n        var protoKeys = [];\n        var keys, filteredObjectKeys;\n\n        value = value || {};\n\n        if (!isPrimitiveType(value)) {\n            protoKeys = Object.getOwnPropertyNames(Object.getPrototypeOf(value)).filter(f => f.indexOf(\"__\") !== 0);\n        }\n\n        keys = Object.getOwnPropertyNames(value).concat(protoKeys);\n\n        filteredObjectKeys = objectKeys.filter(function(key) {\n            return keys.indexOf(key) < 0;\n        });\n\n        while (value) {\n            Object.getOwnPropertyNames(value).forEach(function(prop) {\n                if (props.indexOf(prop) === -1 && (!ignoreObjectKeys || filteredObjectKeys.indexOf(prop) < 0)) {\n                    props.push(prop);\n                }\n            });\n            value = Object.getPrototypeOf(value);\n        }\n\n        return props;\n    }\n\n    objectKeys = ownKeys({}, false);\n\n    var ObservableObject = Observable.extend({\n        init: function(value) {\n            var that = this,\n                member,\n                keys = ownKeys(value, true),\n                parent = function() {\n                    return that;\n                };\n\n            Observable.fn.init.call(this);\n\n            this._handlers = {};\n\n            keys.forEach(function(field) {\n                member = value[field];\n\n                if (typeof member === \"object\" && member && !member.getTime && field.charAt(0) != \"_\") {\n                    member = that.wrap(member, field, parent);\n                }\n\n                that[field] = member;\n            });\n\n            that.uid = kendo.guid();\n        },\n\n        shouldSerialize: function(field, serializeFunctions) {\n            return this.hasOwnProperty(field) && field !== \"_handlers\" && field !== \"_events\" && ((serializeFunctions && serializeFunctions[field]) || typeof this[field] !== FUNCTION) && field !== \"uid\";\n        },\n\n        forEach: function(f) {\n            for (var i in this) {\n                if (this.shouldSerialize(i)) {\n                    f(this[i], i);\n                }\n            }\n        },\n\n        toJSON: function(serializeFunctions) {\n            var result = {}, value, field;\n\n            for (field in this) {\n                if (this.shouldSerialize(field, serializeFunctions)) {\n                    value = this[field];\n\n                    if (value instanceof ObservableObject || value instanceof ObservableArray) {\n                        value = value.toJSON(serializeFunctions);\n                    }\n\n                    result[field] = value;\n                }\n            }\n\n            return result;\n        },\n\n        get: function(field) {\n            var that = this, result;\n\n            that.trigger(GET, { field: field });\n\n            if (field === \"this\") {\n                result = that;\n            } else {\n                result = kendo.getter(field, true)(that);\n            }\n\n            return result;\n        },\n\n        _set: function(field, value) {\n            var that = this;\n            var composite = field.indexOf(\".\") >= 0;\n\n            if (composite) {\n                var paths = field.split(\".\"),\n                    path = \"\";\n\n                while (paths.length > 1) {\n                    path += paths.shift();\n                    var obj = kendo.getter(path, true)(that);\n                    if (obj instanceof ObservableObject) {\n                        obj.set(paths.join(\".\"), value);\n                        return composite;\n                    }\n                    path += \".\";\n                }\n            }\n\n            kendo.setter(field)(that, value);\n\n            return composite;\n        },\n\n        set: function(field, value) {\n            var that = this,\n                isSetPrevented = false,\n                composite = field.indexOf(\".\") >= 0,\n                current = kendo.getter(field, true)(that);\n\n            if (current !== value) {\n                if (current instanceof Observable && this._handlers[field]) {\n                    if (this._handlers[field].get) {\n                       current.unbind(GET, this._handlers[field].get);\n                    }\n                    current.unbind(CHANGE, this._handlers[field].change);\n                }\n\n                isSetPrevented = that.trigger(\"set\", { field: field, value: value });\n\n                if (!isSetPrevented) {\n                    if (!composite) {\n                        value = that.wrap(value, field, function() { return that; });\n                    }\n                    if (!that._set(field, value) || field.indexOf(\"(\") >= 0 || field.indexOf(\"[\") >= 0) {\n                        that.trigger(CHANGE, { field: field });\n                    }\n                }\n            }\n\n            return isSetPrevented;\n        },\n\n        parent: noop,\n\n        wrap: function(object, field, parent) {\n            var that = this;\n            var get;\n            var change;\n            var type = toString.call(object);\n\n            if (object != null && (type === \"[object Object]\" || type === \"[object Array]\")) {\n                var isObservableArray = object instanceof ObservableArray;\n                var isDataSource = object instanceof DataSource;\n\n                if (type === \"[object Object]\" && !isDataSource && !isObservableArray) {\n                    if (!(object instanceof ObservableObject)) {\n                        object = new ObservableObject(object);\n                    }\n\n                    get = eventHandler(that, GET, field, true);\n                    object.bind(GET, get);\n                    change = eventHandler(that, CHANGE, field, true);\n                    object.bind(CHANGE, change);\n\n                    that._handlers[field] = { get: get, change: change };\n                } else if (type === \"[object Array]\" || isObservableArray || isDataSource) {\n                    if (!isObservableArray && !isDataSource) {\n                        object = new ObservableArray(object);\n                    }\n\n                    change = eventHandler(that, CHANGE, field, false);\n\n                    object.bind(CHANGE, change);\n\n                    that._handlers[field] = { change: change };\n                }\n\n                object.parent = parent;\n            }\n\n            return object;\n        }\n    });\n\n    function equal(x, y) {\n        if (x === y) {\n            return true;\n        }\n\n        var xtype = kendo.type(x), ytype = kendo.type(y), field;\n\n        if (xtype !== ytype) {\n            return false;\n        }\n\n        if (xtype === \"date\") {\n            return x.getTime() === y.getTime();\n        }\n\n        if (xtype !== \"object\" && xtype !== \"array\") {\n            return false;\n        }\n\n        for (field in x) {\n            if (!equal(x[field], y[field])) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    var parsers = {\n        \"number\": function(value) {\n            if (typeof value === STRING && value.toLowerCase() === \"null\") {\n                return null;\n            }\n            return kendo.parseFloat(value);\n        },\n\n        \"date\": function(value) {\n            if (typeof value === STRING && value.toLowerCase() === \"null\") {\n                return null;\n            }\n            return kendo.parseDate(value);\n        },\n\n        \"boolean\": function(value) {\n            if (typeof value === STRING) {\n                if (value.toLowerCase() === \"null\") {\n                    return null;\n                } else {\n                    return value.toLowerCase() === \"true\";\n                }\n            }\n            return value != null ? !!value : value;\n        },\n\n        \"string\": function(value) {\n            if (typeof value === STRING && value.toLowerCase() === \"null\") {\n                return null;\n            }\n            return value != null ? (value + \"\") : value;\n        },\n\n        \"default\": function(value) {\n            return value;\n        }\n    };\n\n    var defaultValues = {\n        \"string\": \"\",\n        \"number\": 0,\n        \"date\": new Date(),\n        \"boolean\": false,\n        \"default\": \"\"\n    };\n\n    function getFieldByName(obj, name) {\n        var field,\n            fieldName;\n\n        for (fieldName in obj) {\n            field = obj[fieldName];\n            if (isPlainObject(field) && field.field && field.field === name) {\n                return field;\n            } else if (field === name) {\n                return field;\n            }\n        }\n        return null;\n    }\n\n    var Model = ObservableObject.extend({\n        init: function(data) {\n            var that = this;\n\n            if (!data || $.isEmptyObject(data)) {\n                data = $.extend({}, that.defaults, data);\n\n                if (that._initializers) {\n                    for (var idx = 0; idx < that._initializers.length; idx++) {\n                         var name = that._initializers[idx];\n                         data[name] = that.defaults[name]();\n                    }\n                }\n            }\n\n            ObservableObject.fn.init.call(that, data);\n\n            that.dirty = false;\n            that.dirtyFields = {};\n\n            if (that.idField) {\n                that.id = that.get(that.idField);\n\n                if (that.id === undefined$1) {\n                    that.id = that._defaultId;\n                }\n            }\n        },\n\n        shouldSerialize: function(field) {\n            return ObservableObject.fn.shouldSerialize.call(this, field) &&\n                field !== \"uid\" && !(this.idField !== \"id\" && field === \"id\") &&\n                field !== \"dirty\" && field !== \"dirtyFields\" && field !== \"_accessors\";\n        },\n\n        _parse: function(field, value) {\n            var that = this,\n                fieldName = field,\n                fields = (that.fields || {}),\n                parse;\n\n            field = fields[field];\n            if (!field) {\n                field = getFieldByName(fields, fieldName);\n            }\n            if (field) {\n                parse = field.parse;\n                if (!parse && field.type) {\n                    parse = parsers[field.type.toLowerCase()];\n                }\n            }\n\n            return parse ? parse(value) : value;\n        },\n\n        _notifyChange: function(e) {\n            var action = e.action;\n\n            if (action == \"add\" || action == \"remove\") {\n                this.dirty = true;\n                this.dirtyFields[e.field] = true;\n            }\n        },\n\n        editable: function(field) {\n            field = (this.fields || {})[field];\n            return field ? field.editable !== false : true;\n        },\n\n        set: function(field, value) {\n            var that = this;\n            var dirty = that.dirty;\n\n            if (that.editable(field)) {\n                value = that._parse(field, value);\n\n                if (!equal(value, that.get(field))) {\n                    that.dirty = true;\n                    that.dirtyFields[field] = true;\n\n                    if (ObservableObject.fn.set.call(that, field, value) && !dirty) {\n                        that.dirty = dirty;\n\n                        if (!that.dirty) {\n                            that.dirtyFields[field] = false;\n                        }\n                    }\n                } else {\n                    that.trigger(\"equalSet\", { field: field, value: value });\n                }\n            }\n        },\n\n        accept: function(data) {\n            var that = this,\n                parent = function() { return that; },\n                field;\n\n            for (field in data) {\n                var value = data[field];\n\n                if (field.charAt(0) != \"_\") {\n                    value = that.wrap(data[field], field, parent);\n                }\n\n                that._set(field, value);\n            }\n\n            if (that.idField) {\n                that.id = that.get(that.idField);\n            }\n\n            that.dirty = false;\n            that.dirtyFields = {};\n        },\n\n        isNew: function() {\n            return this.id === this._defaultId;\n        }\n    });\n\n    Model.define = function(base, options) {\n        if (options === undefined$1) {\n            options = base;\n            base = Model;\n        }\n\n        var model,\n            proto = extend({ defaults: {} }, options),\n            name,\n            field,\n            type,\n            value,\n            idx,\n            length,\n            fields = {},\n            originalName,\n            id = proto.id,\n            functionFields = [];\n\n        if (id) {\n            proto.idField = id;\n        }\n\n        if (proto.id) {\n            delete proto.id;\n        }\n\n        if (id) {\n            proto.defaults[id] = proto._defaultId = \"\";\n        }\n\n        if (toString.call(proto.fields) === \"[object Array]\") {\n            for (idx = 0, length = proto.fields.length; idx < length; idx++) {\n                field = proto.fields[idx];\n                if (typeof field === STRING) {\n                    fields[field] = {};\n                } else if (field.field) {\n                    fields[field.field] = field;\n                }\n            }\n            proto.fields = fields;\n        }\n\n        for (name in proto.fields) {\n            field = proto.fields[name];\n            type = field.type || \"default\";\n            value = null;\n            originalName = name;\n\n            name = typeof (field.field) === STRING ? field.field : name;\n\n            if (!field.nullable) {\n                value = proto.defaults[originalName !== name ? originalName : name] = field.defaultValue !== undefined$1 ? field.defaultValue : defaultValues[type.toLowerCase()];\n\n                if (typeof value === \"function\") {\n                    functionFields.push(name);\n                }\n            }\n\n            if (options.id === name) {\n                proto._defaultId = value;\n            }\n\n            proto.defaults[originalName !== name ? originalName : name] = value;\n\n            if ($.isPlainObject(field)) {\n                field.parse = field.parse || parsers[type];\n            } else {\n                field = {\n                    parse: parsers[type]\n                };\n            }\n        }\n\n        if (functionFields.length > 0) {\n            proto._initializers = functionFields;\n        }\n\n        model = base.extend(proto);\n        model.define = function(options) {\n            return Model.define(model, options);\n        };\n\n        if (proto.fields) {\n            model.fields = proto.fields;\n            model.idField = proto.idField;\n        }\n\n        return model;\n    };\n\n    var Comparer = {\n        selector: function(field) {\n            return isFunction(field) ? field : getter(field);\n        },\n\n        compare: function(field) {\n            var selector = this.selector(field);\n            return function(a, b) {\n                a = selector(a);\n                b = selector(b);\n\n                if (a == null && b == null) {\n                    return 0;\n                }\n\n                if (a == null) {\n                    return -1;\n                }\n\n                if (b == null) {\n                    return 1;\n                }\n\n                if (a.localeCompare) {\n                    return a.localeCompare(b);\n                }\n\n                return a > b ? 1 : (a < b ? -1 : 0);\n            };\n        },\n\n        create: function(sort) {\n            var compare = sort.compare || this.compare(sort.field);\n\n            if (sort.dir == \"desc\") {\n                return function(a, b) {\n                    return compare(b, a, true);\n                };\n            }\n\n            return compare;\n        },\n\n        combine: function(comparers) {\n            return function(a, b) {\n                var result = comparers[0](a, b),\n                    idx,\n                    length;\n\n                for (idx = 1, length = comparers.length; idx < length; idx ++) {\n                    result = result || comparers[idx](a, b);\n                }\n\n                return result;\n            };\n        }\n    };\n\n    var StableComparer = extend({}, Comparer, {\n        asc: function(field) {\n            var selector = this.selector(field);\n            return function(a, b) {\n                var valueA = selector(a);\n                var valueB = selector(b);\n\n                if (valueA && valueA.getTime && valueB && valueB.getTime) {\n                    valueA = valueA.getTime();\n                    valueB = valueB.getTime();\n                }\n\n                if (valueA === valueB) {\n                    return a.__position - b.__position;\n                }\n\n                if (valueA == null) {\n                    return -1;\n                }\n\n                if (valueB == null) {\n                    return 1;\n                }\n\n                if (valueA.localeCompare) {\n                    return valueA.localeCompare(valueB);\n                }\n\n                return valueA > valueB ? 1 : -1;\n            };\n        },\n\n        desc: function(field) {\n            var selector = this.selector(field);\n            return function(a, b) {\n                var valueA = selector(a);\n                var valueB = selector(b);\n\n                if (valueA && valueA.getTime && valueB && valueB.getTime) {\n                    valueA = valueA.getTime();\n                    valueB = valueB.getTime();\n                }\n\n                if (valueA === valueB) {\n                    return a.__position - b.__position;\n                }\n\n                if (valueA == null) {\n                    return 1;\n                }\n\n                if (valueB == null) {\n                    return -1;\n                }\n\n                if (valueB.localeCompare) {\n                    return valueB.localeCompare(valueA);\n                }\n\n                return valueA < valueB ? 1 : -1;\n            };\n        },\n        create: function(sort) {\n           return this[sort.dir](sort.field);\n        }\n    });\n\n    map = function(array, callback) {\n        var idx, length = array.length, result = new Array(length);\n\n        for (idx = 0; idx < length; idx++) {\n            result[idx] = callback(array[idx], idx, array);\n        }\n\n        return result;\n    };\n\n    var operators = (function() {\n\n        function quote(str) {\n            if (typeof str == \"string\") {\n                str = str.replace(/[\\r\\n]+/g, \"\");\n            }\n            return JSON.stringify(str);\n        }\n\n        function textOp(impl) {\n            return function(a, b, ignore, accentFoldingFiltering) {\n                b += \"\";\n                if (ignore) {\n                    a = \"(\" + a + \" + '').toString()\" + ((accentFoldingFiltering) ? \".toLocaleLowerCase('\" + accentFoldingFiltering + \"')\" : \".toLowerCase()\");\n                    b = ((accentFoldingFiltering) ? b.toLocaleLowerCase(accentFoldingFiltering) : b.toLowerCase());\n                }\n                return impl(a, quote(b), ignore);\n            };\n        }\n\n        function operator(op, a, b, ignore, accentFoldingFiltering) {\n            if (b != null) {\n                if (typeof b === STRING) {\n                    var date = dateRegExp.exec(b);\n                    if (date) {\n                        b = new Date(+date[1]);\n                    } else if (ignore) {\n                        b = quote(((accentFoldingFiltering) ? b.toLocaleLowerCase(accentFoldingFiltering) : b.toLowerCase()));\n                        a = \"((\" + a + \" || '')+'')\" + ((accentFoldingFiltering) ? \".toLocaleLowerCase('\" + accentFoldingFiltering + \"')\" : \".toLowerCase()\");\n                    } else {\n                        b = quote(b);\n                    }\n                }\n\n                if (b.getTime) {\n                    //b looks like a Date\n                    a = \"(\" + a + \"&&\" + a + \".getTime?\" + a + \".getTime():\" + a + \")\";\n                    b = b.getTime();\n                }\n            }\n\n            return a + \" \" + op + \" \" + b;\n        }\n\n        function getMatchRegexp(pattern) {\n            // take a pattern, as supported by Excel match filter, and\n            // convert it to the equivalent JS regular expression.\n            // Excel patterns support:\n            //\n            //   * - match any sequence of characters\n            //   ? - match a single character\n            //\n            // to match a literal * or ?, they must be prefixed by a tilde (~)\n            for (var rx = \"/^\", esc = false, i = 0; i < pattern.length; ++i) {\n                var ch = pattern.charAt(i);\n                if (esc) {\n                    rx += \"\\\\\" + ch;\n                } else if (ch == \"~\") {\n                    esc = true;\n                    continue;\n                } else if (ch == \"*\") {\n                    rx += \".*\";\n                } else if (ch == \"?\") {\n                    rx += \".\";\n                } else if (\".+^$()[]{}|\\\\/\\n\\r\\u2028\\u2029\\xA0\".indexOf(ch) >= 0) {\n                    rx += \"\\\\\" + ch;\n                } else {\n                    rx += ch;\n                }\n                esc = false;\n            }\n            return rx + \"$/\";\n        }\n\n        return {\n            quote: function(value) {\n                if (value && value.getTime) {\n                    return \"new Date(\" + value.getTime() + \")\";\n                }\n                return quote(value);\n            },\n            eq: function(a, b, ignore, accentFoldingFiltering) {\n                return operator(\"==\", a, b, ignore, accentFoldingFiltering);\n            },\n            neq: function(a, b, ignore, accentFoldingFiltering) {\n                return operator(\"!=\", a, b, ignore, accentFoldingFiltering);\n            },\n            gt: function(a, b, ignore) {\n                return operator(\">\", a, b, ignore);\n            },\n            gte: function(a, b, ignore) {\n                return operator(\">=\", a, b, ignore);\n            },\n            lt: function(a, b, ignore) {\n                return operator(\"<\", a, b, ignore);\n            },\n            lte: function(a, b, ignore) {\n                return operator(\"<=\", a, b, ignore);\n            },\n            startswith: textOp(function(a, b) {\n                return a + \".lastIndexOf(\" + b + \", 0) == 0\";\n            }),\n            doesnotstartwith: textOp(function(a, b) {\n                return a + \".lastIndexOf(\" + b + \", 0) == -1\";\n            }),\n            endswith: textOp(function(a, b) {\n                var n = b ? b.length - 2 : 0;\n                return a + \".indexOf(\" + b + \", \" + a + \".length - \" + n + \") >= 0\";\n            }),\n            doesnotendwith: textOp(function(a, b) {\n                var n = b ? b.length - 2 : 0;\n                return a + \".indexOf(\" + b + \", \" + a + \".length - \" + n + \") < 0\";\n            }),\n            contains: textOp(function(a, b) {\n                return a + \".indexOf(\" + b + \") >= 0\";\n            }),\n            doesnotcontain: textOp(function(a, b) {\n                return a + \".indexOf(\" + b + \") == -1\";\n            }),\n            matches: textOp(function(a, b) {\n                b = b.substring(1, b.length - 1);\n                return getMatchRegexp(b) + \".test(\" + a + \")\";\n            }),\n            doesnotmatch: textOp(function(a, b) {\n                b = b.substring(1, b.length - 1);\n                return \"!\" + getMatchRegexp(b) + \".test(\" + a + \")\";\n            }),\n            isempty: function(a) {\n                return a + \" === ''\";\n            },\n            isnotempty: function(a) {\n                return a + \" !== ''\";\n            },\n            isnull: function(a) {\n                return \"(\" + a + \" == null)\";\n            },\n            isnotnull: function(a) {\n                return \"(\" + a + \" != null)\";\n            },\n            isnullorempty: function(a) {\n                return \"(\" + a + \" === null) || (\" + a + \" === '')\";\n            },\n            isnotnullorempty: function(a) {\n                return \"(\" + a + \" !== null) && (\" + a + \" !== '')\";\n            }\n        };\n    })();\n\n    function Query(data) {\n        this.data = data || [];\n    }\n\n    // Continue to support legacy unsafe-eval for the spreadsheet\n    Query.filterExpr = function(expression, options = { noEval: false }) {\n        if (options.noEval) {\n            // using no-eval for most cases\n            return filterExprNoEval(expression);\n        }\n\n        var expressions = [],\n            logic = { and: \" && \", or: \" || \" },\n            idx,\n            length,\n            filter,\n            expr,\n            fieldFunctions = [],\n            operatorFunctions = [],\n            field,\n            operator,\n            filters = expression.filters;\n\n        for (idx = 0, length = filters.length; idx < length; idx++) {\n            filter = filters[idx];\n            field = filter.field;\n            operator = filter.operator;\n\n            if (filter.filters) {\n                expr = Query.filterExpr(filter);\n                //Nested function fields or operators - update their index e.g. __o[0] -> __o[1]\n                filter = expr.expression\n                .replace(/__o\\[(\\d+)\\]/g, function(match, index) {\n                    index = +index;\n                    return \"__o[\" + (operatorFunctions.length + index) + \"]\";\n                })\n                .replace(/__f\\[(\\d+)\\]/g, function(match, index) {\n                    index = +index;\n                    return \"__f[\" + (fieldFunctions.length + index) + \"]\";\n                });\n\n                operatorFunctions.push.apply(operatorFunctions, expr.operators);\n                fieldFunctions.push.apply(fieldFunctions, expr.fields);\n            } else {\n                if (typeof field === FUNCTION) {\n                    expr = \"__f[\" + fieldFunctions.length + \"](d)\";\n                    fieldFunctions.push(field);\n                } else {\n                    expr = kendo.expr(field);\n                }\n\n                if (typeof operator === FUNCTION) {\n                    filter = \"__o[\" + operatorFunctions.length + \"](\" + expr + \", \" + operators.quote(filter.value) + \")\";\n                    operatorFunctions.push(operator);\n                } else {\n                    filter = operators[(operator || \"eq\").toLowerCase()](expr, filter.value, filter.ignoreCase !== undefined$1 ? filter.ignoreCase : true, expression.accentFoldingFiltering);\n                }\n            }\n\n            expressions.push(filter);\n        }\n\n        return { expression: \"(\" + expressions.join(logic[expression.logic]) + \")\", fields: fieldFunctions, operators: operatorFunctions };\n    };\n\n    function normalizeSort(field, dir) {\n        if (field) {\n            var descriptor = typeof field === STRING ? { field: field, dir: dir } : field,\n            descriptors = isArray(descriptor) ? descriptor : (descriptor !== undefined$1 ? [descriptor] : []);\n\n            return grep(descriptors, function(d) { return !!d.dir; });\n        }\n    }\n\n    function sortFields(sorts, dir) {\n        var sortObject = {};\n\n        if (sorts) {\n            var descriptor = typeof sorts === STRING ? { field: sorts, dir: dir } : sorts,\n            descriptors = isArray(descriptor) ? descriptor : (descriptor !== undefined$1 ? [descriptor] : []);\n\n            for (var i = 0; i < descriptors.length; i++) {\n                sortObject[descriptors[i].field] = { dir: descriptors[i].dir, index: i + 1 };\n            }\n        }\n\n        return sortObject;\n    }\n\n    var operatorMap = {\n        \"==\": \"eq\",\n        equals: \"eq\",\n        isequalto: \"eq\",\n        equalto: \"eq\",\n        equal: \"eq\",\n        \"!=\": \"neq\",\n        ne: \"neq\",\n        notequals: \"neq\",\n        isnotequalto: \"neq\",\n        notequalto: \"neq\",\n        notequal: \"neq\",\n        \"<\": \"lt\",\n        islessthan: \"lt\",\n        lessthan: \"lt\",\n        less: \"lt\",\n        \"<=\": \"lte\",\n        le: \"lte\",\n        islessthanorequalto: \"lte\",\n        lessthanequal: \"lte\",\n        \">\": \"gt\",\n        isgreaterthan: \"gt\",\n        greaterthan: \"gt\",\n        greater: \"gt\",\n        \">=\": \"gte\",\n        isgreaterthanorequalto: \"gte\",\n        greaterthanequal: \"gte\",\n        ge: \"gte\",\n        notsubstringof: \"doesnotcontain\",\n        isnull: \"isnull\",\n        isempty: \"isempty\",\n        isnotempty: \"isnotempty\"\n    };\n\n    function normalizeOperator(expression) {\n        var idx,\n        length,\n        filter,\n        operator,\n        filters = expression.filters;\n\n        if (filters) {\n            for (idx = 0, length = filters.length; idx < length; idx++) {\n                filter = filters[idx];\n                operator = filter.operator;\n\n                if (operator && typeof operator === STRING) {\n                    filter.operator = operatorMap[operator.toLowerCase()] || operator;\n                }\n\n                normalizeOperator(filter);\n            }\n        }\n    }\n\n    function normalizeFilter(expression) {\n        if (expression && !isEmptyObject(expression)) {\n            if (isArray(expression) || !expression.filters) {\n                expression = {\n                    logic: \"and\",\n                    filters: isArray(expression) ? expression : [expression]\n                };\n            }\n\n            normalizeOperator(expression);\n\n            return expression;\n        }\n    }\n\n    Query.normalizeFilter = normalizeFilter;\n\n    function compareDescriptor(f1, f2) {\n        if (f1.logic || f2.logic) {\n            return false;\n        }\n\n        return f1.field === f2.field && f1.value === f2.value && f1.operator === f2.operator;\n    }\n\n    function normalizeDescriptor(filter) {\n        filter = filter || {};\n\n        if (isEmptyObject(filter)) {\n            return { logic: \"and\", filters: [] };\n        }\n\n        return normalizeFilter(filter);\n    }\n\n    function fieldComparer(a, b) {\n        if (b.logic || (a.field > b.field)) {\n            return 1;\n        } else if (a.field < b.field) {\n            return -1;\n        } else {\n            return 0;\n        }\n    }\n\n    function compareFilters(expr1, expr2) {\n        expr1 = normalizeDescriptor(expr1);\n        expr2 = normalizeDescriptor(expr2);\n\n        if (expr1.logic !== expr2.logic) {\n            return false;\n        }\n\n        var f1, f2;\n        var filters1 = (expr1.filters || []).slice();\n        var filters2 = (expr2.filters || []).slice();\n\n        if (filters1.length !== filters2.length) {\n            return false;\n        }\n\n        filters1 = filters1.sort(fieldComparer);\n        filters2 = filters2.sort(fieldComparer);\n\n        for (var idx = 0; idx < filters1.length; idx++) {\n            f1 = filters1[idx];\n            f2 = filters2[idx];\n\n            if (f1.logic && f2.logic) {\n                if (!compareFilters(f1, f2)) {\n                    return false;\n                }\n            } else if (!compareDescriptor(f1, f2)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    Query.compareFilters = compareFilters;\n\n    function normalizeAggregate(expressions) {\n        return isArray(expressions) ? expressions : [expressions];\n    }\n\n    function normalizeGroup(field, dir, compare, skipItemSorting) {\n        var descriptor = typeof field === STRING ? { field: field, dir: dir, compare: compare, skipItemSorting: skipItemSorting } : field,\n        descriptors = isArray(descriptor) ? descriptor : (descriptor !== undefined$1 ? [descriptor] : []);\n\n        return map(descriptors, function(d) {\n            return {\n                field: d.field,\n                dir: d.dir || \"asc\",\n                aggregates: d.aggregates,\n                compare: d.compare,\n                skipItemSorting: d.skipItemSorting\n            };\n        });\n    }\n\n    function normalizeGroupWithoutCompare(field, dir, compare) {\n        var descriptors = normalizeGroup(field, dir, compare);\n\n        for (var i = 0; i < descriptors.length; i++) {\n            delete descriptors[i].compare;\n        }\n\n        return descriptors;\n    }\n\n    function anyGroupDescriptorHasCompare(groupDescriptors) {\n        var descriptors = isArray(groupDescriptors) ? groupDescriptors : [groupDescriptors];\n\n        for (var i = 0; i < descriptors.length; i++) {\n            if (descriptors[i] && isFunction(descriptors[i].compare)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    Query.prototype = {\n        toArray: function() {\n            return this.data;\n        },\n        range: function(index, count) {\n            return new Query(this.data.slice(index, index + count));\n        },\n        skip: function(count) {\n            return new Query(this.data.slice(count));\n        },\n        take: function(count) {\n            return new Query(this.data.slice(0, count));\n        },\n        select: function(selector) {\n            return new Query(map(this.data, selector));\n        },\n        order: function(selector, dir, inPlace) {\n            var sort = { dir: dir };\n\n            if (selector) {\n                if (selector.compare) {\n                    sort.compare = selector.compare;\n                } else {\n                    sort.field = selector;\n                }\n            }\n\n            if (inPlace) {\n                return new Query(this.data.sort(Comparer.create(sort)));\n            }\n\n            return new Query(this.data.slice(0).sort(Comparer.create(sort)));\n        },\n        orderBy: function(selector, inPlace) {\n            return this.order(selector, \"asc\", inPlace);\n        },\n        orderByDescending: function(selector, inPlace) {\n            return this.order(selector, \"desc\", inPlace);\n        },\n        sort: function(field, dir, comparer, inPlace) {\n            var idx,\n            length,\n            descriptors = normalizeSort(field, dir),\n            comparers = [];\n\n            comparer = comparer || Comparer;\n\n            if (descriptors.length) {\n                for (idx = 0, length = descriptors.length; idx < length; idx++) {\n                    comparers.push(comparer.create(descriptors[idx]));\n                }\n\n                return this.orderBy({ compare: comparer.combine(comparers) }, inPlace);\n            }\n\n            return this;\n        },\n\n        filter: function(expressions) {\n            var compiled,\n            data = this.data,\n            result = [];\n\n            expressions = normalizeFilter(expressions);\n\n            if (!expressions || expressions.filters.length === 0) {\n                return this;\n            }\n\n            compiled = Query.filterExpr(expressions, { noEval: true });\n\n            result = data.filter(compiled);\n            return new Query(result);\n        },\n\n        group: function(descriptors, allData, options) {\n            descriptors = normalizeGroup(descriptors || []);\n            allData = allData || this.data;\n\n            var that = this,\n            result = new Query(that.data),\n            descriptor;\n\n            if (descriptors.length > 0) {\n                descriptor = descriptors[0];\n\n                if (options && options.groupPaging) {\n                    result = new Query(allData).groupAllData(descriptor, allData).select(function(group) {\n                        var data = new Query(allData).filter([{\n                            field: group.field,\n                            operator: \"eq\",\n                            value: group.value,\n                            ignoreCase: false\n                        }]);\n                        var items = descriptors.length > 1 ? new Query(group.items).group(descriptors.slice(1), data.toArray(), options).toArray() : group.items;\n                        return {\n                            field: group.field,\n                            value: group.value,\n                            hasSubgroups: descriptors.length > 1,\n                            items: items,\n                            aggregates: data.aggregate(descriptor.aggregates),\n                            uid: kendo.guid(),\n                            itemCount: items.length,\n                            subgroupCount: items.length\n                        };\n                    });\n\n                } else {\n                    result = result.groupBy(descriptor).select(function(group) {\n                        var data = new Query(allData).filter([ { field: group.field, operator: \"eq\", value: group.value, ignoreCase: false } ]);\n                        return {\n                            field: group.field,\n                            value: group.value,\n                            items: descriptors.length > 1 ? new Query(group.items).group(descriptors.slice(1), data.toArray()).toArray() : group.items,\n                            hasSubgroups: descriptors.length > 1,\n                            aggregates: data.aggregate(descriptor.aggregates)\n                        };\n                    });\n                }\n            }\n            return result;\n        },\n\n        groupBy: function(descriptor) {\n            var that = this;\n\n            if (isEmptyObject(descriptor) || !this.data.length) {\n                return new Query([]);\n            }\n\n            var field = descriptor.field,\n                sorted = descriptor.skipItemSorting ? this.data : this._sortForGrouping(field, descriptor.dir || \"asc\"),\n                accessor = kendo.accessor(field),\n                item,\n                groupValue = accessor.get(sorted[0], field),\n                group = {\n                    field: field,\n                    value: groupValue,\n                    items: []\n                },\n                currentValue,\n                idx,\n                len,\n                result = [group];\n\n            for (idx = 0, len = sorted.length; idx < len; idx++) {\n                item = sorted[idx];\n                currentValue = accessor.get(item, field);\n                if (!groupValueComparer(groupValue, currentValue)) {\n                    groupValue = currentValue;\n                    group = {\n                        field: field,\n                        value: groupValue,\n                        items: []\n                    };\n                    result.push(group);\n                }\n                group.items.push(item);\n            }\n\n            result = that._sortGroups(result, descriptor);\n\n            return new Query(result);\n        },\n\n        groupAllData: function(descriptor, allData) {\n            if (isEmptyObject(descriptor) || this.data && !this.data.length) {\n                return new Query([]);\n            }\n\n            var field = descriptor.field,\n                sorted = descriptor.skipItemSorting ? allData : new Query(allData).sort(field, descriptor.dir || \"asc\", StableComparer).toArray(),\n                accessor = kendo.accessor(field),\n                item,\n                groupValue = accessor.get(sorted[0], field),\n                group = {\n                    field: field,\n                    value: groupValue,\n                    items: []\n                },\n                currentValue,\n                idx,\n                len,\n                result = [group];\n\n            for (idx = 0, len = sorted.length; idx < len; idx++) {\n                item = sorted[idx];\n                currentValue = accessor.get(item, field);\n                if (!groupValueComparer(groupValue, currentValue)) {\n                    groupValue = currentValue;\n                    group = {\n                        field: field,\n                        value: groupValue,\n                        items: []\n                    };\n                    result.push(group);\n                }\n                group.items.push(item);\n            }\n\n            result = this._sortGroups(result, descriptor);\n\n            return new Query(result);\n        },\n\n        _sortForGrouping: function(field, dir) {\n            var idx, length,\n                data = this.data;\n\n            if (!stableSort) {\n                for (idx = 0, length = data.length; idx < length; idx++) {\n                    data[idx].__position = idx;\n                }\n\n                data = new Query(data).sort(field, dir, StableComparer).toArray();\n\n                for (idx = 0, length = data.length; idx < length; idx++) {\n                    delete data[idx].__position;\n                }\n                return data;\n            }\n\n            return this.sort(field, dir).toArray();\n        },\n\n        _sortGroups: function(groups, descriptor) {\n            var result = groups;\n\n            if (descriptor && isFunction(descriptor.compare)) {\n                result = new Query(result).order({ compare: descriptor.compare }, descriptor.dir || ASCENDING).toArray();\n            }\n\n            return result;\n        },\n\n        aggregate: function(aggregates) {\n            var idx,\n                len,\n                result = {},\n                state = {};\n\n            if (aggregates && aggregates.length) {\n                for (idx = 0, len = this.data.length; idx < len; idx++) {\n                    calculateAggregate(result, aggregates, this.data[idx], idx, len, state);\n                }\n            }\n            return result;\n        }\n    };\n\n    function groupValueComparer(a, b) {\n        if (a && a.getTime && b && b.getTime) {\n            return a.getTime() === b.getTime();\n        }\n        return a === b;\n    }\n\n    function calculateAggregate(accumulator, aggregates, item, index, length, state) {\n        aggregates = aggregates || [];\n        var idx,\n            aggr,\n            functionName,\n            len = aggregates.length;\n\n        for (idx = 0; idx < len; idx++) {\n            aggr = aggregates[idx];\n            functionName = aggr.aggregate;\n            var field = aggr.field;\n            accumulator[field] = accumulator[field] || {};\n            state[field] = state[field] || {};\n            state[field][functionName] = state[field][functionName] || {};\n            accumulator[field][functionName] = functions[functionName.toLowerCase()](accumulator[field][functionName], item, kendo.accessor(field), index, length, state[field][functionName]);\n        }\n    }\n\n    var functions = {\n        sum: function(accumulator, item, accessor) {\n            var value = accessor.get(item);\n\n            if (!isNumber(accumulator)) {\n                accumulator = value;\n            } else if (isNumber(value)) {\n                accumulator += value;\n            }\n\n            return accumulator;\n        },\n        count: function(accumulator) {\n            return (accumulator || 0) + 1;\n        },\n        average: function(accumulator, item, accessor, index, length, state) {\n            var value = accessor.get(item);\n\n            if (state.count === undefined$1) {\n                state.count = 0;\n            }\n\n            if (!isNumber(accumulator)) {\n                accumulator = value;\n            } else if (isNumber(value)) {\n                accumulator += value;\n            }\n\n            if (isNumber(value)) {\n                state.count++;\n            }\n\n            if (index == length - 1 && isNumber(accumulator)) {\n                accumulator = accumulator / state.count;\n            }\n            return accumulator;\n        },\n        max: function(accumulator, item, accessor) {\n            var value = accessor.get(item);\n\n            if (!isNumber(accumulator) && !isDate(accumulator)) {\n                accumulator = value;\n            }\n\n            if (accumulator < value && (isNumber(value) || isDate(value))) {\n                accumulator = value;\n            }\n            return accumulator;\n        },\n        min: function(accumulator, item, accessor) {\n            var value = accessor.get(item);\n\n            if (!isNumber(accumulator) && !isDate(accumulator)) {\n                accumulator = value;\n            }\n\n            if (accumulator > value && (isNumber(value) || isDate(value))) {\n                accumulator = value;\n            }\n            return accumulator;\n        }\n    };\n\n    function isNumber(val) {\n        return typeof val === \"number\" && !isNaN(val);\n    }\n\n    function isDate(val) {\n        return val && val.getTime;\n    }\n\n    function toJSON(array) {\n        var idx, length = array.length, result = new Array(length);\n\n        for (idx = 0; idx < length; idx++) {\n            result[idx] = array[idx].toJSON();\n        }\n\n        return result;\n    }\n\n    Query.normalizeGroup = normalizeGroup;\n    Query.normalizeSort = normalizeSort;\n\n    Query.process = function(data, options, inPlace) {\n        options = options || {};\n\n        var group = options.group;\n        var customGroupSort = anyGroupDescriptorHasCompare(normalizeGroup(group || []));\n        var query = new Query(data),\n            groupDescriptorsWithoutCompare = normalizeGroupWithoutCompare(group || []),\n            normalizedSort = normalizeSort(options.sort || []),\n            sort = customGroupSort ? normalizedSort : groupDescriptorsWithoutCompare.concat(normalizedSort),\n            groupDescriptorsWithoutSort,\n            total,\n            filterCallback = options.filterCallback,\n            filter = options.filter,\n            skip = options.skip,\n            take = options.take;\n\n        if (sort && inPlace) {\n            query = query.sort(sort, undefined$1, undefined$1, inPlace);\n        }\n\n        if (filter) {\n            query = query.filter(filter);\n\n            if (filterCallback) {\n                query = filterCallback(query);\n            }\n\n            total = query.toArray().length;\n        }\n\n        if (sort) {\n            if (!inPlace) {\n                query = query.sort(sort);\n            }\n\n            if (group) {\n                data = query.toArray();\n            }\n        }\n\n        if (customGroupSort) {\n            query = query.group(group, data, options);\n\n            if (skip !== undefined$1 && take !== undefined$1 && !options.groupPaging) {\n                query = new Query(flatGroups(query.toArray())).range(skip, take);\n\n                groupDescriptorsWithoutSort = map(groupDescriptorsWithoutCompare, function(groupDescriptor) {\n                    return extend({}, groupDescriptor, {\n                        skipItemSorting: true\n                    });\n                });\n\n                query = query.group(groupDescriptorsWithoutSort, data, options);\n            }\n        } else {\n            if (skip !== undefined$1 && take !== undefined$1) {\n                total = query.data.length;\n\n                if (skip + take > total && options.virtual) {\n                    skip -= skip + take - total;\n                    skip = skip < 0 ? 0 : skip;\n                }\n                query = query.range(skip, take);\n            }\n\n            if (group && (!isEmptyObject(group) || group.length !== 0)) {\n                query = query.group(group, data, options);\n            }\n        }\n\n        return {\n            total: total,\n            data: query.toArray()\n        };\n    };\n\n    var LocalTransport = Class.extend({\n        init: function(options) {\n            this.data = options.data;\n        },\n\n        read: function(options) {\n            options.success(this.data);\n        },\n        update: function(options) {\n            options.success(options.data);\n        },\n        create: function(options) {\n            options.success(options.data);\n        },\n        destroy: function(options) {\n            options.success(options.data);\n        }\n    });\n\n    var RemoteTransport = Class.extend( {\n        init: function(options) {\n            var that = this, parameterMap;\n\n            options = that.options = extend({}, that.options, options);\n\n            each(crud, function(index, type) {\n                if (typeof options[type] === STRING) {\n                    options[type] = {\n                        url: options[type]\n                    };\n                }\n            });\n\n            that.cache = options.cache ? Cache.create(options.cache) : {\n                find: noop,\n                add: noop\n            };\n\n            parameterMap = options.parameterMap;\n\n            if (options.submit) {\n                that.submit = options.submit;\n            }\n\n            if (isFunction(options.push)) {\n                that.push = options.push;\n            }\n\n            if (!that.push) {\n                that.push = identity;\n            }\n\n            that.parameterMap = isFunction(parameterMap) ? parameterMap : function(options) {\n                var result = {};\n\n                each(options, function(option, value) {\n                    if (option in parameterMap) {\n                        option = parameterMap[option];\n                        if (isPlainObject(option)) {\n                            value = option.value(value);\n                            option = option.key;\n                        }\n                    }\n\n                    result[option] = value;\n                });\n\n                return result;\n            };\n        },\n\n        options: {\n            parameterMap: identity\n        },\n\n        create: function(options) {\n            return ajax(this.setup(options, CREATE));\n        },\n\n        read: function(options) {\n            var that = this,\n                success,\n                error,\n                result,\n                cache = that.cache;\n\n            options = that.setup(options, READ);\n\n            success = options.success || noop;\n            error = options.error || noop;\n\n            result = cache.find(options.data);\n\n            if (result !== undefined$1) {\n                success(result);\n            } else {\n                options.success = function(result) {\n                    cache.add(options.data, result);\n\n                    success(result);\n                };\n\n                $.ajax(options);\n            }\n        },\n\n        update: function(options) {\n            return ajax(this.setup(options, UPDATE));\n        },\n\n        destroy: function(options) {\n            return ajax(this.setup(options, DESTROY));\n        },\n\n        setup: function(options, type) {\n            options = options || {};\n\n            var that = this,\n                parameters,\n                operation = that.options[type],\n                data = isFunction(operation.data) ? operation.data(options.data) : operation.data;\n\n            options = extend(true, {}, operation, options);\n            parameters = extend(true, {}, data, options.data);\n\n            options.data = that.parameterMap(parameters, type);\n\n            if (isFunction(options.url)) {\n                options.url = options.url(parameters);\n            }\n\n            return options;\n        }\n    });\n\n    var Cache = Class.extend({\n        init: function() {\n            this._store = {};\n        },\n        add: function(key, data) {\n            if (key !== undefined$1) {\n                this._store[stringify(key)] = data;\n            }\n        },\n        find: function(key) {\n            return this._store[stringify(key)];\n        },\n        clear: function() {\n            this._store = {};\n        },\n        remove: function(key) {\n            delete this._store[stringify(key)];\n        }\n    });\n\n    Cache.create = function(options) {\n        var store = {\n            \"inmemory\": function() { return new Cache(); }\n        };\n\n        if (isPlainObject(options) && isFunction(options.find)) {\n            return options;\n        }\n\n        if (options === true) {\n            return new Cache();\n        }\n\n        return store[options]();\n    };\n\n    function serializeRecords(data, getters, modelInstance, originalFieldNames, fieldNames) {\n        var record,\n            getter,\n            originalName,\n            idx,\n            setters = {},\n            length;\n\n        for (idx = 0, length = data.length; idx < length; idx++) {\n            record = data[idx];\n            for (getter in getters) {\n                originalName = fieldNames[getter];\n\n                if (originalName && originalName !== getter) {\n                    if (!setters[originalName]) {\n                        setters[originalName] = kendo.setter(originalName);\n                    }\n                    setters[originalName](record, getters[getter](record));\n                    delete record[getter];\n                }\n            }\n        }\n    }\n\n    function convertRecords(data, getters, modelInstance, originalFieldNames, fieldNames) {\n        var record,\n            getter,\n            originalName,\n            idx,\n            length;\n\n        for (idx = 0, length = data.length; idx < length; idx++) {\n            record = data[idx];\n            for (getter in getters) {\n                record[getter] = modelInstance._parse(getter, getters[getter](record));\n\n                originalName = fieldNames[getter];\n                if (originalName && originalName !== getter) {\n                    delete record[originalName];\n                }\n            }\n        }\n    }\n\n    function convertGroup(data, getters, modelInstance, originalFieldNames, fieldNames) {\n        var record,\n            idx,\n            fieldName,\n            length;\n\n        for (idx = 0, length = data.length; idx < length; idx++) {\n            record = data[idx];\n\n            fieldName = originalFieldNames[record.field];\n            if (fieldName && fieldName != record.field) {\n                record.field = fieldName;\n            }\n\n            record.value = modelInstance._parse(record.field, record.value);\n\n            if (record.items) {\n                if (record.hasSubgroups) {\n                    convertGroup(record.items, getters, modelInstance, originalFieldNames, fieldNames);\n                } else {\n                    convertRecords(record.items, getters, modelInstance, originalFieldNames, fieldNames);\n                }\n            }\n        }\n    }\n\n    function wrapDataAccess(originalFunction, model, converter, getters, originalFieldNames, fieldNames) {\n        return function(data) {\n            data = originalFunction(data);\n\n            return wrapDataAccessBase(model, converter, getters, originalFieldNames, fieldNames)(data);\n        };\n    }\n\n    function wrapDataAccessBase(model, converter, getters, originalFieldNames, fieldNames) {\n        return function(data) {\n\n            if (data && !isEmptyObject(getters)) {\n                if (toString.call(data) !== \"[object Array]\" && !(data instanceof ObservableArray)) {\n                    data = [data];\n                }\n\n                converter(data, getters, new model(), originalFieldNames, fieldNames);\n            }\n\n            return data || [];\n        };\n    }\n\n    var DataReader = Class.extend({\n        init: function(schema) {\n            var that = this, member, get, model, base;\n\n            schema = schema || {};\n\n            for (member in schema) {\n                get = schema[member];\n\n                that[member] = typeof get === STRING ? getter(get) : get;\n            }\n\n            base = schema.modelBase || Model;\n\n            if (isPlainObject(that.model)) {\n                that.model = model = base.define(that.model);\n            }\n\n            var dataFunction = that.data.bind(that);\n\n            that._dataAccessFunction = dataFunction;\n\n            if (that.model) {\n                var groupsFunction = that.groups.bind(that),\n                    serializeFunction = that.serialize.bind(that),\n                    originalFieldNames = {},\n                    getters = {},\n                    serializeGetters = {},\n                    fieldNames = {},\n                    shouldSerialize = false,\n                    fieldName,\n                    name;\n\n                model = that.model;\n\n                if (model.fields) {\n                    each(model.fields, function(field, value) {\n                        var fromName;\n\n                        fieldName = field;\n\n                        if (isPlainObject(value) && value.field) {\n                            fieldName = value.field;\n                        } else if (typeof value === STRING) {\n                            fieldName = value;\n                        }\n\n                        if (isPlainObject(value) && value.from) {\n                            fromName = value.from;\n                        }\n\n                        shouldSerialize = shouldSerialize || (fromName && fromName !== field) || fieldName !== field;\n                        name = fromName || fieldName;\n                        getters[field] = name.indexOf(\".\") !== -1 ? getter(name, true) : getter(name);\n                        serializeGetters[field] = getter(field);\n                        originalFieldNames[fromName || fieldName] = field;\n                        fieldNames[field] = fromName || fieldName;\n                    });\n\n                    if (!schema.serialize && shouldSerialize) {\n                        that.serialize = wrapDataAccess(serializeFunction, model, serializeRecords, serializeGetters, originalFieldNames, fieldNames);\n                    }\n                }\n\n                that._dataAccessFunction = dataFunction;\n                that._wrapDataAccessBase = wrapDataAccessBase(model, convertRecords, getters, originalFieldNames, fieldNames);\n                that.data = wrapDataAccess(dataFunction, model, convertRecords, getters, originalFieldNames, fieldNames);\n                that.groups = wrapDataAccess(groupsFunction, model, convertGroup, getters, originalFieldNames, fieldNames);\n            }\n        },\n        errors: function(data) {\n            return data ? data.errors : null;\n        },\n        parse: identity,\n        data: identity,\n        total: function(data) {\n            return data.length;\n        },\n        groups: identity,\n        aggregates: function() {\n            return {};\n        },\n        serialize: function(data) {\n            return data;\n        }\n    });\n\n    function fillLastGroup(originalGroup, newGroup) {\n        var currOriginal;\n        var currentNew;\n\n        if (newGroup.items && newGroup.items.length) {\n            for (var i = 0; i < newGroup.items.length; i++) {\n                currOriginal = originalGroup.items[originalGroup.items.length - 1];\n                currentNew = newGroup.items[i];\n                if (currOriginal && currentNew) {\n                    if (currOriginal.hasSubgroups && currOriginal.value == currentNew.value) {\n                        fillLastGroup(currOriginal, currentNew);\n                    } else if (currOriginal.field && currOriginal.value == currentNew.value) {\n                        currOriginal.items.omitChangeEvent = true;\n                        currOriginal.items.push.apply(currOriginal.items, currentNew.items);\n                        currOriginal.items.omitChangeEvent = false;\n                    } else {\n                        originalGroup.items.omitChangeEvent = true;\n                        originalGroup.items.push.apply(originalGroup.items, [currentNew]);\n                        originalGroup.items.omitChangeEvent = false;\n                    }\n                } else if (currentNew) {\n                    originalGroup.items.omitChangeEvent = true;\n                    originalGroup.items.push.apply(originalGroup.items, [currentNew]);\n                    originalGroup.items.omitChangeEvent = false;\n                }\n            }\n        }\n    }\n    function mergeGroups(target, dest, skip, take) {\n        var group,\n            idx = 0,\n            items;\n\n        while (dest.length && take) {\n            group = dest[idx];\n            items = group.items;\n\n            var length = items.length;\n\n            if (target && target.field === group.field && target.value === group.value) {\n                if (target.hasSubgroups && target.items.length) {\n                    mergeGroups(target.items[target.items.length - 1], group.items, skip, take);\n                } else {\n                    items = items.slice(skip, skip + take);\n                    target.items = target.items.concat(items);\n                }\n                dest.splice(idx--, 1);\n            } else if (group.hasSubgroups && items.length) {\n                mergeGroups(group, items, skip, take);\n                if (!group.items.length) {\n                    dest.splice(idx--, 1);\n                }\n            } else {\n                items = items.slice(skip, skip + take);\n                group.items = items;\n\n                if (!group.items.length) {\n                    dest.splice(idx--, 1);\n                }\n            }\n\n            if (items.length === 0) {\n                skip -= length;\n            } else {\n                skip = 0;\n                take -= items.length;\n            }\n\n            if (++idx >= dest.length) {\n                break;\n            }\n        }\n\n        if (idx < dest.length) {\n            dest.splice(idx, dest.length - idx);\n        }\n    }\n\n    function flatGroups(groups, indexFunction) {\n        var result = [];\n        var groupsLength = (groups || []).length;\n        var group;\n        var items;\n        var indexFn = isFunction(indexFunction) ? indexFunction : function(array, index) {\n            return array[index];\n        };\n\n        for (var groupIndex = 0; groupIndex < groupsLength; groupIndex++) {\n            group = indexFn(groups, groupIndex);\n\n            if (group.hasSubgroups) {\n                result = result.concat(flatGroups(group.items));\n            } else {\n                items = group.items;\n\n                for (var itemIndex = 0; itemIndex < items.length; itemIndex++) {\n                    result.push(indexFn(items, itemIndex));\n                }\n            }\n        }\n        return result;\n    }\n\n    function flattenGroups(data) {\n        var idx,\n            result = [],\n            length,\n            items,\n            itemIndex;\n\n        for (idx = 0, length = data.length; idx < length; idx++) {\n            var group = data.at(idx);\n            if (group.items) {\n                if (group.hasSubgroups) {\n                    result = result.concat(flattenGroups(group.items));\n                } else {\n                    items = group.items;\n                    for (itemIndex = 0; itemIndex < items.length; itemIndex++) {\n                        result.push(items.at(itemIndex));\n                    }\n                }\n            }\n        }\n        return result;\n    }\n\n    function wrapGroupItems(data, model) {\n        var idx, length, group;\n        if (model) {\n            for (idx = 0, length = data.length; idx < length; idx++) {\n                group = data.at(idx);\n                if (group.items) {\n                    if (group.hasSubgroups) {\n                        wrapGroupItems(group.items, model);\n                    } else {\n                        group.items = new LazyObservableArray(group.items, model, group.items._events);\n                    }\n                }\n            }\n        }\n    }\n\n    function eachGroupItems(data, func) {\n        for (var idx = 0; idx < data.length; idx++) {\n            if (data[idx].hasSubgroups) {\n                if (eachGroupItems(data[idx].items, func)) {\n                    return true;\n                }\n            } else if (func(data[idx].items, data[idx])) {\n                return true;\n            }\n        }\n    }\n\n    function replaceInRanges(ranges, data, item, observable) {\n        for (var idx = 0; idx < ranges.length; idx++) {\n            if (ranges[idx].data === data) {\n                break;\n            }\n            if (replaceInRange(ranges[idx].data, item, observable)) {\n                break;\n            }\n        }\n    }\n\n    function replaceInRange(items, item, observable) {\n        for (var idx = 0, length = items.length; idx < length; idx++) {\n            if (items[idx] && items[idx].hasSubgroups) {\n                return replaceInRange(items[idx].items, item, observable);\n            } else if (items[idx] === item || items[idx] === observable) {\n               items[idx] = observable;\n               return true;\n            }\n        }\n    }\n\n    function replaceWithObservable(view, data, ranges, type, serverGrouping) {\n        for (var viewIndex = 0, length = view.length; viewIndex < length; viewIndex++) {\n            var item = view[viewIndex];\n\n            if (!item || item instanceof type) {\n                continue;\n            }\n\n            if (item.hasSubgroups !== undefined$1 && !serverGrouping) {\n                replaceWithObservable(item.items, data, ranges, type, serverGrouping);\n            } else {\n                for (var idx = 0; idx < data.length; idx++) {\n                    if (data[idx] === item) {\n                        view[viewIndex] = data.at(idx);\n                        replaceInRanges(ranges, data, item, view[viewIndex]);\n                        break;\n                    }\n                }\n            }\n        }\n    }\n\n    function removeModel(data, model) {\n        if (!data) {\n            return;\n        }\n        var length = data.length;\n        var dataItem;\n        var idx;\n\n        for (idx = 0; idx < length; idx++) {\n            dataItem = data[idx];\n\n            if (dataItem.uid && dataItem.uid == model.uid) {\n                data.splice(idx, 1);\n                return dataItem;\n            }\n        }\n    }\n\n    function indexOfPristineModel(data, model) {\n        if (model) {\n            return indexOf(data, function(item) {\n                return (item.uid && item.uid == model.uid) || (item[model.idField] === model.id && model.id !== model._defaultId);\n            });\n        }\n        return -1;\n    }\n\n    function indexOfModel(data, model) {\n        if (model) {\n            return indexOf(data, function(item) {\n                return item.uid == model.uid;\n            });\n        }\n        return -1;\n    }\n\n    function indexOf(data, comparer) {\n        var idx, length;\n        if (!data) {\n            return;\n        }\n\n        for (idx = 0, length = data.length; idx < length; idx++) {\n            if (comparer(data[idx])) {\n                return idx;\n            }\n        }\n\n        return -1;\n    }\n\n    function fieldNameFromModel(fields, name) {\n        if (fields && !isEmptyObject(fields)) {\n            var descriptor = fields[name];\n            var fieldName;\n            if (isPlainObject(descriptor)) {\n                fieldName = descriptor.from || descriptor.field || name;\n            } else {\n                fieldName = fields[name] || name;\n            }\n\n            if (isFunction(fieldName)) {\n                return name;\n            }\n\n            return fieldName;\n        }\n        return name;\n    }\n\n    function convertFilterDescriptorsField(descriptor, model) {\n        var idx,\n            length,\n            target = {};\n\n        for (var field in descriptor) {\n            if (field !== \"filters\") {\n                target[field] = descriptor[field];\n            }\n        }\n\n        if (descriptor.filters) {\n            target.filters = [];\n            for (idx = 0, length = descriptor.filters.length; idx < length; idx++) {\n                target.filters[idx] = convertFilterDescriptorsField(descriptor.filters[idx], model);\n            }\n        } else {\n            target.field = fieldNameFromModel(model.fields, target.field);\n        }\n        return target;\n    }\n\n    function convertDescriptorsField(descriptors, model) {\n        var idx,\n            length,\n            result = [],\n            target,\n            descriptor;\n\n        for (idx = 0, length = descriptors.length; idx < length; idx ++) {\n            target = {};\n\n            descriptor = descriptors[idx];\n\n            for (var field in descriptor) {\n                target[field] = descriptor[field];\n            }\n\n            target.field = fieldNameFromModel(model.fields, target.field);\n\n            if (target.aggregates && isArray(target.aggregates)) {\n                target.aggregates = convertDescriptorsField(target.aggregates, model);\n            }\n            result.push(target);\n        }\n        return result;\n    }\n\n    var DataSource = Observable.extend({\n        init: function(options) {\n            var that = this, model, data;\n\n            if (options) {\n                data = options.data;\n            }\n\n            options = that.options = extend({}, that.options, options);\n\n            that._map = {};\n            that._prefetch = {};\n            that._data = [];\n            that._pristineData = [];\n            that._ranges = [];\n            that._view = [];\n            that._pristineTotal = 0;\n            that._destroyed = [];\n            that._pageSize = options.pageSize;\n            that._page = options.page || (options.pageSize ? 1 : undefined$1);\n            that._sort = normalizeSort(options.sort);\n            that._sortFields = sortFields(options.sort);\n            that._filter = normalizeFilter(options.filter);\n            that._group = normalizeGroup(options.group);\n            that._aggregate = options.aggregate;\n            that._total = options.total;\n            that._groupPaging = options.groupPaging;\n\n            if (that._groupPaging) {\n                that._groupsState = {};\n            }\n            that._shouldDetachObservableParents = true;\n\n            Observable.fn.init.call(that);\n\n            that.transport = Transport.create(options, data, that);\n\n            if (isFunction(that.transport.push)) {\n                that.transport.push({\n                    pushCreate: that._pushCreate.bind(that),\n                    pushUpdate: that._pushUpdate.bind(that),\n                    pushDestroy: that._pushDestroy.bind(that)\n                });\n            }\n\n            if (options.offlineStorage != null) {\n                if (typeof options.offlineStorage == \"string\") {\n                    var key = options.offlineStorage;\n\n                    that._storage = {\n                        getItem: function() {\n                            return JSON.parse(localStorage.getItem(key));\n                        },\n                        setItem: function(item) {\n                            localStorage.setItem(key, stringify(that.reader.serialize(item)));\n                        }\n                    };\n                } else {\n                    that._storage = options.offlineStorage;\n                }\n            }\n\n            that.reader = new kendo.data.readers[options.schema.type || \"json\" ](options.schema);\n\n            model = that.reader.model || {};\n\n            that._detachObservableParents();\n\n            that._data = that._observe(that._data);\n            that._online = true;\n\n            that.bind([\"push\", ERROR, CHANGE, REQUESTSTART, SYNC, REQUESTEND, PROGRESS], options);\n        },\n\n        options: {\n            data: null,\n            schema: {\n               modelBase: Model\n            },\n            offlineStorage: null,\n            serverSorting: false,\n            serverPaging: false,\n            serverFiltering: false,\n            serverGrouping: false,\n            serverAggregates: false,\n            batch: false,\n            inPlaceSort: false\n        },\n\n        clone: function() {\n            return this;\n        },\n\n        online: function(value) {\n            if (value !== undefined$1) {\n                if (this._online != value) {\n                    this._online = value;\n\n                    if (value) {\n                        return this.sync();\n                    }\n                }\n\n                return $.Deferred().resolve().promise();\n            } else {\n                return this._online;\n            }\n        },\n\n        offlineData: function(state) {\n            if (this.options.offlineStorage == null) {\n                return null;\n            }\n\n            if (state !== undefined$1) {\n                return this._storage.setItem(state);\n            }\n\n            return this._storage.getItem() || [];\n        },\n\n        _isGrouped: function() {\n            var group = this.group() || [];\n\n            return group.length;\n        },\n\n        _isServerGrouped: function() {\n            var group = this.group() || [];\n\n            return this.options.serverGrouping && group.length;\n        },\n\n        _isServerGroupPaged: function() {\n            return this._isServerGrouped() && this._groupPaging;\n        },\n\n        _isGroupPaged: function() {\n            var group = this._group || [];\n\n            return this._groupPaging && group.length;\n        },\n\n        _pushCreate: function(result) {\n            this._push(result, \"pushCreate\");\n        },\n\n        _pushUpdate: function(result) {\n            this._push(result, \"pushUpdate\");\n        },\n\n        _pushDestroy: function(result) {\n            this._push(result, \"pushDestroy\");\n        },\n\n        _push: function(result, operation) {\n            var data = this._readData(result);\n\n            if (!data) {\n                data = result;\n            }\n\n            this[operation](data);\n        },\n\n        _flatData: function(data, skip) {\n            if (data) {\n                if (this._isServerGrouped()) {\n                    return flattenGroups(data);\n                }\n\n                if (!skip) {\n                    for (var idx = 0; idx < data.length; idx++) {\n                        data.at(idx);\n                    }\n                }\n            }\n\n            return data;\n        },\n\n        parent: noop,\n\n        get: function(id) {\n            var idx, length, data = this._flatData(this._data, this.options.useRanges);\n\n            for (idx = 0, length = data.length; idx < length; idx++) {\n                if (data[idx].id == id) {\n                    return data[idx];\n                }\n            }\n        },\n\n        getByUid: function(id) {\n            return this._getByUid(id, this._data);\n        },\n\n        _getByUid: function(id, dataItems) {\n            var idx, length, data = this._flatData(dataItems, this.options.useRanges);\n\n            if (!data) {\n                return;\n            }\n\n            for (idx = 0, length = data.length; idx < length; idx++) {\n                if (data[idx].uid == id) {\n                    return data[idx];\n                }\n            }\n        },\n\n        indexOf: function(model) {\n            return indexOfModel(this._data, model);\n        },\n\n        at: function(index) {\n            return this._data.at(index);\n        },\n\n        data: function(value) {\n            var that = this;\n            if (value !== undefined$1) {\n                that._detachObservableParents();\n                that._data = this._observe(value);\n\n                that._pristineData = value.slice(0);\n\n                that._storeData();\n\n                that._ranges = [];\n                that.trigger(\"reset\");\n                that._addRange(that._data);\n\n                that._total = that._data.length;\n                that._pristineTotal = that._total;\n\n                that._process(that._data);\n            } else {\n                if (that._data) {\n                    for (var idx = 0; idx < that._data.length; idx++) {\n                        that._data.at(idx);\n                    }\n                }\n\n                return that._data;\n            }\n        },\n\n        view: function(value) {\n            if (value === undefined$1) {\n                return this._view;\n            } else {\n                this._view = this._observeView(value);\n            }\n        },\n\n        _observeView: function(data) {\n            var that = this;\n            replaceWithObservable(data, that._data, that._ranges, that.reader.model || ObservableObject, that._isServerGrouped());\n\n            var view = new LazyObservableArray(data, that.reader.model);\n            view.parent = function() { return that.parent(); };\n            return view;\n        },\n\n        flatView: function() {\n            var groups = this.group() || [];\n\n            if (groups.length) {\n                return flattenGroups(this._view);\n            } else {\n                return this._view;\n            }\n        },\n\n        add: function(model) {\n            return this.insert(this._data.length, model);\n        },\n\n        _createNewModel: function(model) {\n            if (this.reader.model) {\n                return new this.reader.model(model);\n            }\n\n            if (model instanceof ObservableObject) {\n                return model;\n            }\n\n            return new ObservableObject(model);\n        },\n\n        insert: function(index, model) {\n            if (!model) {\n                model = index;\n                index = 0;\n            }\n\n            if (!(model instanceof Model)) {\n                model = this._createNewModel(model);\n            }\n\n            if (this._isServerGrouped()) {\n                this._data.splice(index, 0, this._wrapInEmptyGroup(model));\n            } else {\n                this._data.splice(index, 0, model);\n            }\n\n            this._insertModelInRange(index, model);\n\n            return model;\n        },\n\n        pushInsert: function(index, items) {\n            var that = this;\n            var rangeSpan = that._getCurrentRangeSpan();\n\n            if (!items) {\n                items = index;\n                index = 0;\n            }\n\n            if (!isArray(items)) {\n                items = [items];\n            }\n\n            var pushed = [];\n            var autoSync = this.options.autoSync;\n            this.options.autoSync = false;\n\n            try {\n                for (var idx = 0; idx < items.length; idx ++) {\n                    var item = items[idx];\n\n                    var result = this.insert(index, item);\n\n                    pushed.push(result);\n\n                    var pristine = result.toJSON();\n\n                    if (this._isServerGrouped()) {\n                        pristine = this._wrapInEmptyGroup(pristine);\n                    }\n\n                    this._pristineData.push(pristine);\n\n                    if (rangeSpan && rangeSpan.length) {\n                        $(rangeSpan).last()[0].pristineData.push(pristine);\n                    }\n\n                    index++;\n                }\n            } finally {\n                this.options.autoSync = autoSync;\n            }\n\n            if (pushed.length) {\n                this.trigger(\"push\", {\n                    type: \"create\",\n                    items: pushed\n                });\n            }\n        },\n\n        pushCreate: function(items) {\n            this.pushInsert(this._data.length, items);\n        },\n\n        pushUpdate: function(items) {\n            if (!isArray(items)) {\n                items = [items];\n            }\n\n            var pushed = [];\n\n            for (var idx = 0; idx < items.length; idx ++) {\n                var item = items[idx];\n                var model = this._createNewModel(item);\n\n                var target = this.get(model.id);\n\n                if (target) {\n                    pushed.push(target);\n\n                    target.accept(item);\n\n                    target.trigger(CHANGE);\n\n                    this._updatePristineForModel(target, item);\n                } else {\n                    this.pushCreate(item);\n                }\n            }\n\n            if (pushed.length) {\n                this.trigger(\"push\", {\n                    type: \"update\",\n                    items: pushed\n                });\n            }\n        },\n\n        pushDestroy: function(items) {\n            var pushed = this._removeItems(items);\n\n            if (pushed.length) {\n                this.trigger(\"push\", {\n                    type: \"destroy\",\n                    items: pushed\n                });\n            }\n        },\n\n        _removeItems: function(itemsToRemove, removePristine) {\n            if (!isArray(itemsToRemove)) {\n                itemsToRemove = [itemsToRemove];\n            }\n\n            var shouldRemovePristine = typeof removePristine !== \"undefined\" ? removePristine : true;\n\n            var destroyed = [];\n            var autoSync = this.options.autoSync;\n            this.options.autoSync = false;\n            try {\n                for (var idx = 0; idx < itemsToRemove.length; idx ++) {\n                    var item = itemsToRemove[idx];\n                    var model = this._createNewModel(item);\n                    var found = false;\n                    var index = idx;\n\n                    this._eachItem(this._data, function(items) {\n                        // Ensure all children of a parent are removed before the change event is triggered.\n                        if (index !== itemsToRemove.length - 1) {\n                            items.omitChangeEvent = true;\n                            items.omitCache = [];\n                        } else {\n                            items.omitChangeEvent = false;\n                        }\n\n                        for (var idx = 0; idx < items.length; idx++) {\n                            var item = items.at(idx);\n                            if (item.id === model.id) {\n                                /* When the change event is omitted, certain calculations such as 'total' are broken because only the last item reaches the change handler.\n                                   Keep track of all child items that had their change event omitted and when the change is finally triggered, concat them to the result.*/\n                                if (items.omitChangeEvent) {\n                                    items.omitCache.push(item);\n                                }\n                                destroyed.push(item);\n                                items.splice(idx, 1);\n                                found = true;\n                                break;\n                            }\n                        }\n                    });\n\n                    if (found && shouldRemovePristine) {\n                        this._removePristineForModel(model);\n                        this._destroyed.pop();\n                    }\n                }\n            } finally {\n                this.options.autoSync = autoSync;\n            }\n\n            return destroyed;\n        },\n\n        pushMove: function(index, items) {\n            var pushed = this._moveItems(index, items);\n\n            if (pushed.length) {\n                this.trigger(\"push\", {\n                    type: \"update\",\n                    items: pushed\n                });\n            }\n        },\n\n        _moveItems: function(index, items) {\n            if (!isArray(items)) {\n                items = [items];\n            }\n\n            var moved = [];\n            var autoSync = this.options.autoSync;\n            this.options.autoSync = false;\n\n            try {\n                for (var i = 0; i < items.length; i ++) {\n                    var item = items[i];\n                    var model = this._createNewModel(item);\n\n                    this._eachItem(this._data, function(dataItems) {\n                        for (var idx = 0; idx < dataItems.length; idx++) {\n                            var dataItem = dataItems.at(idx);\n                            if (dataItem.id === model.id) {\n                                moved.push(dataItem);\n                                dataItems.splice(index >= idx ? --index : index, 0, dataItems.splice(idx, 1)[0]);\n                                index++;\n                                break;\n                            }\n                        }\n                    });\n                }\n            } finally {\n                this.options.autoSync = autoSync;\n            }\n\n            return moved;\n        },\n\n        remove: function(model) {\n            var result,\n                that = this,\n                hasGroups = that._isServerGrouped();\n\n            if (hasGroups && model.uid && (!model.isNew || !model.isNew())) {\n                that._pushInDestroyed(model);\n            }\n\n            this._eachItem(that._data, function(items) {\n                result = removeModel(items, model);\n\n                if (result && hasGroups) {\n                    return true;\n                }\n            });\n\n            this._removeModelFromRanges(model);\n\n            return model;\n        },\n\n        destroyed: function() {\n            return this._destroyed;\n        },\n\n        created: function() {\n            var idx,\n                length,\n                result = [],\n                data = this._flatData(this._data, this.options.useRanges);\n\n            for (idx = 0, length = data.length; idx < length; idx++) {\n                if (data[idx].isNew && data[idx].isNew() && !data[idx].notFetched) {\n                    result.push(data[idx]);\n                }\n            }\n            return result;\n        },\n\n        updated: function() {\n            var idx,\n                length,\n                result = [],\n                data = this._flatData(this._data, this.options.useRanges);\n\n            for (idx = 0, length = data.length; idx < length; idx++) {\n                if ((data[idx].isNew && !data[idx].isNew()) && data[idx].dirty) {\n                    result.push(data[idx]);\n                }\n            }\n            return result;\n        },\n\n        sync: function() {\n            var that = this,\n                created = [],\n                updated = [],\n                destroyed = that._destroyed;\n\n            var promise = $.Deferred().resolve().promise();\n\n            if (that.online()) {\n\n                if (!that.reader.model) {\n                    return promise;\n                }\n\n                created = that.created();\n                updated = that.updated();\n\n                var promises = [];\n\n                if (that.options.batch && that.transport.submit) {\n                    promises = that._sendSubmit(created, updated, destroyed);\n                } else {\n                    promises.push.apply(promises, that._send(\"create\", created));\n                    promises.push.apply(promises, that._send(\"update\", updated));\n                    promises.push.apply(promises, that._send(\"destroy\", destroyed));\n                }\n\n                promise = $.when\n                 .apply(null, promises)\n                 .then(function() {\n                    var idx, length;\n\n                    for (idx = 0, length = arguments.length; idx < length; idx++) {\n                        if (arguments[idx]) {\n                            that._accept(arguments[idx]);\n                        }\n                    }\n\n                    that._storeData(true);\n\n                    that._syncEnd();\n\n                    that._change({ action: \"sync\" });\n\n                    that.trigger(SYNC);\n\n                    if (that._isServerGroupPaged()) {\n                        that.read();\n                    }\n                });\n            } else {\n                that._storeData(true);\n\n                that._syncEnd();\n\n                that._change({ action: \"sync\" });\n            }\n\n            return promise;\n        },\n\n        _syncEnd: noop,\n\n        cancelChanges: function(model) {\n            var that = this;\n\n            if (model instanceof kendo.data.Model) {\n                that._cancelModel(model);\n            } else {\n                that._destroyed = [];\n                that._detachObservableParents();\n                that._data = that._observe(that._pristineData);\n                if (that.options.serverPaging) {\n                    that._total = that._pristineTotal;\n                }\n\n                that._ranges = [];\n                that._addRange(that._data, 0);\n\n                that._changesCanceled();\n\n                that._change();\n\n                that._markOfflineUpdatesAsDirty();\n\n                if (that._isServerGrouped()) {\n                    that.read();\n                }\n            }\n        },\n\n        _changesCanceled: noop,\n\n        _markOfflineUpdatesAsDirty: function() {\n            var that = this;\n\n            if (that.options.offlineStorage != null) {\n                that._eachItem(that._data, function(items) {\n                    for (var idx = 0; idx < items.length; idx++) {\n                        var item = items.at(idx);\n                        if (item.__state__ == \"update\" || item.__state__ == \"create\") {\n                            item.dirty = true;\n                        }\n                    }\n                });\n            }\n        },\n\n        hasChanges: function() {\n            var idx,\n                length,\n                data = this._flatData(this._data, this.options.useRanges);\n\n            if (this._destroyed.length) {\n                return true;\n            }\n\n            for (idx = 0, length = data.length; idx < length; idx++) {\n                if ((data[idx].isNew && data[idx].isNew()) || data[idx].dirty) {\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        _accept: function(result) {\n            var that = this,\n                models = result.models,\n                response = result.response,\n                idx = 0,\n                serverGroup = that._isServerGrouped(),\n                pristine = that._pristineData,\n                type = result.type,\n                length;\n\n            that.trigger(REQUESTEND, { response: response, type: type });\n\n            if (response && !isEmptyObject(response)) {\n                response = that.reader.parse(response);\n\n                if (that._handleCustomErrors(response)) {\n                    return;\n                }\n\n                response = that.reader.data(response);\n\n                if (!isArray(response)) {\n                    response = [response];\n                }\n            } else {\n                response = $.map(models, function(model) { return model.toJSON(); } );\n            }\n\n            if (type === \"destroy\") {\n                that._destroyed = [];\n            }\n\n            for (idx = 0, length = models.length; idx < length; idx++) {\n                if (type !== \"destroy\") {\n                    models[idx].accept(response[idx]);\n\n                    if (type === \"create\") {\n                        pristine.push(serverGroup ? that._wrapInEmptyGroup(models[idx].toJSON()) : response[idx]);\n                    } else if (type === \"update\") {\n                        that._updatePristineForModel(models[idx], response[idx]);\n                    }\n                } else {\n                    that._removePristineForModel(models[idx]);\n                }\n            }\n        },\n\n        _updatePristineForModel: function(model, values) {\n            this._executeOnPristineForModel(model, function(index, items) {\n                kendo.deepExtend(items[index], values);\n            });\n        },\n\n        _executeOnPristineForModel: function(model, callback) {\n            this._eachPristineItem(\n                function(items) {\n                    var index = indexOfPristineModel(items, model);\n                    if (index > -1) {\n                        callback(index, items);\n                        return true;\n                    }\n                });\n        },\n\n        _removePristineForModel: function(model) {\n            this._executeOnPristineForModel(model, function(index, items) {\n                items.splice(index, 1);\n            });\n        },\n\n        _readData: function(data) {\n            var read = !this._isServerGrouped() ? this.reader.data : this.reader.groups;\n            return read.call(this.reader, data);\n        },\n\n        _eachPristineItem: function(callback) {\n            var that = this;\n            var options = that.options;\n            var rangeSpan = that._getCurrentRangeSpan();\n\n            that._eachItem(that._pristineData, callback);\n\n            if (options.serverPaging && options.useRanges) {\n                each(rangeSpan, function(i, range) {\n                    that._eachItem(range.pristineData, callback);\n                });\n            }\n        },\n\n       _eachItem: function(data, callback) {\n            if (data && data.length) {\n                if (this._isServerGrouped()) {\n                    eachGroupItems(data, callback);\n                } else {\n                    callback(data);\n                }\n            }\n        },\n\n        _pristineForModel: function(model) {\n            var pristine,\n                idx,\n                callback = function(items) {\n                    idx = indexOfPristineModel(items, model);\n                    if (idx > -1) {\n                        pristine = items[idx];\n                        return true;\n                    }\n                };\n\n            this._eachPristineItem(callback);\n\n            return pristine;\n        },\n\n        _cancelModel: function(model) {\n            var that = this;\n            var pristine = this._pristineForModel(model);\n\n            this._eachItem(this._data, function(items) {\n                var idx = indexOfModel(items, model);\n                if (idx >= 0) {\n                    if (pristine && (!model.isNew() || pristine.__state__)) {\n                        items[idx].accept(pristine);\n\n                        if (pristine.__state__ == \"update\") {\n                            items[idx].dirty = true;\n                        }\n\n                    } else {\n                        that._modelCanceled(model);\n\n                        items.splice(idx, 1);\n\n                        that._removeModelFromRanges(model);\n                    }\n                }\n            });\n        },\n\n        _modelCanceled: noop,\n\n        _submit: function(promises, data) {\n            var that = this;\n\n            that.trigger(REQUESTSTART, { type: \"submit\" });\n\n            that.trigger(PROGRESS);\n\n            that.transport.submit(extend({\n                success: function(response, type) {\n                    var promise = $.grep(promises, function(x) {\n                        return x.type == type;\n                    })[0];\n\n                    if (promise) {\n                        promise.resolve({\n                            response: response,\n                            models: promise.models,\n                            type: type\n                        });\n                    }\n                },\n                error: function(response, status, error) {\n                    for (var idx = 0; idx < promises.length; idx++) {\n                        promises[idx].reject(response);\n                    }\n\n                    that.error(response, status, error);\n                }\n            }, data));\n        },\n\n        _sendSubmit: function(created, updated, destroyed) {\n            var that = this,\n                promises = [];\n\n            if (that.options.batch) {\n                if (created.length) {\n                    promises.push($.Deferred(function(deferred) {\n                        deferred.type = \"create\";\n                        deferred.models = created;\n                    }));\n                }\n\n                if (updated.length) {\n                    promises.push($.Deferred(function(deferred) {\n                        deferred.type = \"update\";\n                        deferred.models = updated;\n                    }));\n                }\n\n                if (destroyed.length) {\n                    promises.push($.Deferred(function(deferred) {\n                        deferred.type = \"destroy\";\n                        deferred.models = destroyed;\n                    }));\n                }\n\n                that._submit(promises, {\n                    data: {\n                        created: that.reader.serialize(toJSON(created)),\n                        updated: that.reader.serialize(toJSON(updated)),\n                        destroyed: that.reader.serialize(toJSON(destroyed))\n                    }\n                });\n            }\n\n            return promises;\n        },\n\n        _promise: function(data, models, type) {\n            var that = this;\n\n            return $.Deferred(function(deferred) {\n                that.trigger(REQUESTSTART, { type: type });\n\n                that.trigger(PROGRESS);\n\n                that.transport[type].call(that.transport, extend({\n                    success: function(response) {\n                        deferred.resolve({\n                            response: response,\n                            models: models,\n                            type: type\n                        });\n                    },\n                    error: function(response, status, error) {\n                        deferred.reject(response);\n                        that.error(response, status, error);\n                    }\n                }, data));\n            }).promise();\n        },\n\n        _send: function(method, data) {\n            var that = this,\n                idx,\n                length,\n                promises = [],\n                converted = that.reader.serialize(toJSON(data));\n\n            if (that.options.batch) {\n                if (data.length) {\n                    promises.push(that._promise( { data: { models: converted } }, data , method));\n                }\n            } else {\n                for (idx = 0, length = data.length; idx < length; idx++) {\n                    promises.push(that._promise( { data: converted[idx] }, [ data[idx] ], method));\n                }\n            }\n\n            return promises;\n        },\n\n        read: function(data) {\n            var that = this, params = that._params(data);\n            var deferred = $.Deferred();\n\n            that._queueRequest(params, function() {\n                var isPrevented = that.trigger(REQUESTSTART, { type: \"read\" });\n                if (!isPrevented) {\n                    that.trigger(PROGRESS);\n\n                    that._ranges = [];\n                    that.trigger(\"reset\");\n                    if (that.online()) {\n                        that.transport.read({\n                            data: params,\n                            success: function(data) {\n                                that._ranges = [];\n                                that.success(data, params);\n\n                                deferred.resolve();\n                            },\n                            error: function() {\n                                var args = slice.call(arguments);\n\n                                that.error.apply(that, args);\n\n                                deferred.reject.apply(deferred, args);\n                            }\n                        });\n                    } else if (that.options.offlineStorage != null) {\n                        that.success(that.offlineData(), params);\n\n                        deferred.resolve();\n                    }\n                } else {\n                    that._dequeueRequest();\n\n                    deferred.resolve(isPrevented);\n                }\n            });\n\n            return deferred.promise();\n        },\n\n        _readAggregates: function(data) {\n            return this.reader.aggregates(data);\n        },\n\n        success: function(data) {\n            var that = this,\n                options = that.options,\n                items,\n                replaceSubset;\n\n            that.trigger(REQUESTEND, { response: data, type: \"read\" });\n\n            if (that.online()) {\n                data = that.reader.parse(data);\n\n                if (that._handleCustomErrors(data)) {\n                    that._dequeueRequest();\n                    return;\n                }\n\n                that._total = that.reader.total(data);\n\n                if (that._isServerGroupPaged()) {\n                    that._serverGroupsTotal = that._total;\n                }\n\n                if (that._pageSize > that._total) {\n                    that._pageSize = that._total;\n                    if (that.options.pageSize && that.options.pageSize > that._pageSize) {\n                        that._pageSize = that.options.pageSize;\n                    }\n                }\n\n                if (that._aggregate && options.serverAggregates) {\n                    that._aggregateResult = that._readAggregates(data);\n                }\n\n                data = that._readData(data);\n\n                that._destroyed = [];\n            } else {\n                data = that._readData(data);\n\n                items = [];\n                var itemIds = {};\n                var model = that.reader.model;\n                var idField = model ? model.idField : \"id\";\n                var idx;\n\n                for (idx = 0; idx < this._destroyed.length; idx++) {\n                    var id = this._destroyed[idx][idField];\n                    itemIds[id] = id;\n                }\n\n                for (idx = 0; idx < data.length; idx++) {\n                    var item = data[idx];\n                    var state = item.__state__;\n                    if (state == \"destroy\") {\n                        if (!itemIds[item[idField]]) {\n                            this._pushInDestroyed(this._createNewModel(item));\n                        }\n                    } else {\n                        items.push(item);\n                    }\n                }\n\n                data = items;\n\n                that._total = data.length;\n            }\n\n            that._pristineTotal = that._total;\n            replaceSubset = that._skip && that._data.length && that._skip < that._data.length;\n\n            if (that.options.endless) {\n                if (replaceSubset) {\n                    that._pristineData.splice(that._skip, that._pristineData.length);\n                }\n                items = data.slice(0);\n                for (var j = 0; j < items.length; j++) {\n                    that._pristineData.push(items[j]);\n                }\n            } else {\n                that._pristineData = data.slice(0);\n            }\n\n            that._detachObservableParents();\n\n            if (that.options.endless) {\n                that._data.unbind(CHANGE, that._changeHandler);\n\n                if (that._isServerGrouped() && that._data[that._data.length - 1].value === data[0].value) {\n                    fillLastGroup(that._data[that._data.length - 1], data[0]);\n                    data.shift();\n                }\n\n                data = that._observe(data);\n                if (replaceSubset) {\n                    that._data.splice(that._skip, that._data.length);\n                }\n                for (var i = 0; i < data.length; i++) {\n                    that._data.push(data[i]);\n                }\n                that._data.bind(CHANGE, that._changeHandler);\n            } else {\n                that._data = that._observe(data);\n            }\n\n            that._markOfflineUpdatesAsDirty();\n\n            that._storeData();\n\n            that._addRange(that._data);\n\n            that._process(that._data);\n\n            that._dequeueRequest();\n        },\n\n        _detachObservableParents: function() {\n            if (this._data && this._shouldDetachObservableParents) {\n                for (var idx = 0; idx < this._data.length; idx++) {\n                    if (this._data[idx].parent) {\n                        this._data[idx].parent = noop;\n                    }\n                }\n            }\n        },\n\n        _storeData: function(updatePristine) {\n            var serverGrouping = this._isServerGrouped();\n            var model = this.reader.model;\n\n            function items(data) {\n                var state = [];\n\n                for (var idx = 0; idx < data.length; idx++) {\n                    var dataItem = data.at(idx);\n                    var item = dataItem.toJSON();\n\n                    if (serverGrouping && dataItem.items) {\n                        item.items = items(dataItem.items);\n                    } else {\n                        item.uid = dataItem.uid;\n\n                        if (model) {\n                            if (dataItem.isNew()) {\n                                item.__state__ = \"create\";\n                            } else if (dataItem.dirty) {\n                                item.__state__ = \"update\";\n                            }\n                        }\n                    }\n                    state.push(item);\n                }\n\n                return state;\n            }\n\n            if (this.options.offlineStorage != null) {\n                var state = items(this._data);\n\n                var destroyed = [];\n\n                for (var idx = 0; idx < this._destroyed.length; idx++) {\n                    var item = this._destroyed[idx].toJSON();\n                    item.__state__ = \"destroy\";\n                    destroyed.push(item);\n                }\n\n                this.offlineData(state.concat(destroyed));\n\n                if (updatePristine) {\n                    this._pristineData = this.reader.reader ? this.reader.reader._wrapDataAccessBase(state) : this.reader._wrapDataAccessBase(state);\n                }\n            }\n        },\n\n        _addRange: function(data, skip) {\n            var that = this,\n                start = typeof (skip) !== \"undefined\" ? skip : (that._skip || 0),\n                end,\n                range = {\n                    data: data,\n                    pristineData: data.toJSON(),\n                    timestamp: that._timeStamp()\n                };\n\n            if (this._isGroupPaged()) {\n                end = start + data.length;\n                range.outerStart = start;\n                range.outerEnd = end;\n            } else {\n                end = start + that._flatData(data, true).length;\n            }\n\n            range.start = start;\n            range.end = end;\n            that._ranges.push(range);\n            that._sortRanges();\n\n            if (that._isGroupPaged()) {\n                if (!that._groupsFlat) {\n                    that._groupsFlat = [];\n                }\n                that._appendToGroupsFlat(range.data);\n                that._updateOuterRangesLength();\n            }\n        },\n\n        _appendToGroupsFlat: function(data) {\n            var length = data.length;\n\n            for (var i = 0; i < length; i++) {\n                this._groupsFlat.push(data[i]);\n            }\n        },\n\n        _getGroupByUid: function(uid) {\n            var length = this._groupsFlat.length;\n            var group;\n\n            for (var i = 0; i < length; i++) {\n                group = this._groupsFlat[i];\n                if (group.uid === uid) {\n                    return group;\n                }\n            }\n        },\n\n        _sortRanges: function() {\n            this._ranges.sort(function(x, y) {\n                return x.start - y.start;\n            });\n        },\n\n        error: function(xhr, status, errorThrown) {\n            this._dequeueRequest();\n            this.trigger(REQUESTEND, { });\n            this.trigger(ERROR, { xhr: xhr, status: status, errorThrown: errorThrown });\n        },\n\n        _params: function(data) {\n            var that = this,\n                options = extend({\n                    take: that.take(),\n                    skip: that.skip(),\n                    page: that.page(),\n                    pageSize: that.pageSize(),\n                    sort: that._sort,\n                    filter: that._filter,\n                    group: that._group,\n                    aggregate: that._aggregate,\n                    groupPaging: !!that._groupPaging\n                }, data);\n\n            if (!that.options.serverPaging) {\n                delete options.take;\n                delete options.skip;\n                delete options.page;\n                delete options.pageSize;\n            }\n\n            if (!that.options.serverGrouping) {\n                delete options.group;\n            } else if (that.reader.model && options.group) {\n                options.group = convertDescriptorsField(options.group, that.reader.model);\n            }\n\n            if (!that.options.serverFiltering) {\n                delete options.filter;\n            } else if (that.reader.model && options.filter) {\n               options.filter = convertFilterDescriptorsField(options.filter, that.reader.model);\n            }\n\n            if (!that.options.serverSorting) {\n                delete options.sort;\n            } else if (that.reader.model && options.sort) {\n                options.sort = convertDescriptorsField(options.sort, that.reader.model);\n            }\n\n            if (!that.options.serverAggregates) {\n                delete options.aggregate;\n            } else if (that.reader.model && options.aggregate) {\n                options.aggregate = convertDescriptorsField(options.aggregate, that.reader.model);\n            }\n\n            if (!that.options.groupPaging) {\n                delete options.groupPaging;\n            }\n\n            return options;\n        },\n\n        _queueRequest: function(options, callback) {\n            var that = this;\n            if (!that._requestInProgress) {\n                that._requestInProgress = true;\n                that._pending = undefined$1;\n                callback();\n            } else {\n                that._pending = { callback: callback.bind(that), options: options };\n            }\n        },\n\n        _dequeueRequest: function() {\n            var that = this;\n            that._requestInProgress = false;\n            if (that._pending) {\n                that._queueRequest(that._pending.options, that._pending.callback);\n            }\n        },\n\n        _handleCustomErrors: function(response) {\n            if (this.reader.errors) {\n                var errors = this.reader.errors(response);\n                if (errors) {\n                    this.trigger(ERROR, { xhr: null, status: \"customerror\", errorThrown: \"custom error\", errors: errors });\n                    return true;\n                }\n            }\n            return false;\n        },\n\n        _shouldWrap: function(data) {\n            var model = this.reader.model;\n\n            if (model && data.length) {\n                return !(data[0] instanceof model);\n            }\n\n            return false;\n        },\n\n        _observe: function(data) {\n            var that = this,\n                model = that.reader.model;\n\n            that._shouldDetachObservableParents = true;\n\n            if (data instanceof ObservableArray) {\n                that._shouldDetachObservableParents = false;\n                if (that._shouldWrap(data)) {\n                    data.type = that.reader.model;\n                    data.wrapAll(data, data);\n                }\n            } else {\n                var arrayType = that.pageSize() && !that.options.serverPaging ? LazyObservableArray : ObservableArray;\n                data = new arrayType(data, that.reader.model);\n                data.parent = function() { return that.parent(); };\n            }\n\n            if (that._isServerGrouped()) {\n                wrapGroupItems(data, model);\n            }\n\n            if (that._changeHandler && that._data && that._data instanceof ObservableArray &&\n                !(that.options.useRanges && that.options.serverPaging)) {\n                that._data.unbind(CHANGE, that._changeHandler);\n            } else {\n                that._changeHandler = that._change.bind(that);\n            }\n\n            return data.bind(CHANGE, that._changeHandler);\n        },\n\n        _updateTotalForAction: function(action, items) {\n            var that = this;\n\n            var total = parseInt(that._total, 10);\n\n            if (!isNumber(that._total)) {\n                total = parseInt(that._pristineTotal, 10);\n            }\n            if (action === \"add\") {\n                total += items.length;\n            } else if (action === \"remove\") {\n                total -= items.length;\n            } else if (action !== \"itemchange\" && action !== \"sync\" && !that.options.serverPaging) {\n                total = that._pristineTotal;\n            } else if (action === \"sync\") {\n                total = that._pristineTotal = parseInt(that._total, 10);\n            }\n\n            that._total = total;\n        },\n\n        _pushInDestroyed: function(model) {\n            var isPushed = this._destroyed.find(function(item) {\n                return item.uid === model.uid;\n            });\n            if (!isPushed) {\n                this._destroyed.push(model);\n            }\n        },\n\n        _change: function(e) {\n            var that = this, idx, length, action = e ? e.action : \"\";\n\n            if (action === \"remove\") {\n                for (idx = 0, length = e.items.length; idx < length; idx++) {\n                    if (!e.items[idx].isNew || !e.items[idx].isNew()) {\n                        that._pushInDestroyed(e.items[idx]);\n                    }\n                }\n            }\n\n            if (that.options.autoSync && (action === \"add\" || action === \"remove\" || action === \"itemchange\")) {\n\n                var handler = function(args) {\n                    if (args.action === \"sync\") {\n                        that.unbind(\"change\", handler);\n                        that._updateTotalForAction(action, e.items);\n                    }\n                };\n\n                that.first(\"change\", handler);\n\n                that.sync();\n\n            } else {\n                that._updateTotalForAction(action, e ? e.items : []);\n\n                that._process(that._data, e);\n            }\n        },\n\n        _calculateAggregates: function(data, options) {\n            options = options || {};\n\n            var query = new Query(data),\n                aggregates = options.aggregate,\n                filter = options.filter;\n\n            if (filter) {\n                query = query.filter(filter);\n            }\n\n            return query.aggregate(aggregates);\n        },\n\n        _process: function(data, e) {\n            var that = this,\n                options = {},\n                result;\n\n            if (that.options.serverPaging !== true) {\n                options.skip = that._skip;\n                options.take = that._take || that._pageSize;\n\n                if (options.skip === undefined$1 && that._page !== undefined$1 && that._pageSize !== undefined$1) {\n                    options.skip = (that._page - 1) * that._pageSize;\n                }\n\n                if (that.options.useRanges) {\n                    options.skip = that.currentRangeStart();\n                }\n            }\n\n            if (that.options.serverSorting !== true) {\n                options.sort = that._sort;\n            }\n\n            if (that.options.serverFiltering !== true) {\n                options.filter = that._filter;\n            }\n\n            if (that.options.serverGrouping !== true) {\n                options.group = that._group;\n            }\n\n            if (that.options.serverAggregates !== true) {\n                options.aggregate = that._aggregate;\n            }\n\n            if (that.options.serverGrouping) {\n                that._clearEmptyGroups(data);\n            }\n\n            options.groupPaging = that._groupPaging;\n\n            if (that._isGroupPaged() && e && (e.action === \"page\" || e.action === \"expandGroup\" || e.action === \"collapseGroup\")) {\n                result = that._queryProcess(data, {\n                    aggregate: that._aggregate\n                });\n            } else {\n                result = that._queryProcess(data, options);\n            }\n\n            if (that._filter && e && e.action === \"add\") {\n                var model = e.items[0],\n                    resultData = result.data;\n\n                if (that._isGrouped() && !this._isServerGrouped()) {\n                    resultData = flattenGroups(resultData);\n                }\n\n                var modelIsInView = resultData.find(function(item) {\n                    return item.uid === model.uid;\n                });\n\n                if (!modelIsInView) {\n                    result.data.splice(model.index, 0, that._isGrouped() ? that._wrapInEmptyGroup(model) : model);\n                    result.total++;\n                }\n            }\n\n            if (that.options.serverAggregates !== true) {\n                // for performance reasons, calculate aggregates for part of the data only after query process\n                // this is necessary in the TreeList when paging\n                that._aggregateResult = that._calculateAggregates(result.dataToAggregate || data, options);\n            }\n\n            that._setView(result, options, e);\n\n            that._setFilterTotal(result.total, false);\n\n            e = e || {};\n\n            e.items = e.items || that._view;\n\n            that.trigger(CHANGE, e);\n        },\n\n        _setView: function(result, options, e) {\n            var that = this;\n\n            if (that._isGroupPaged() && !that._isServerGrouped()) {\n                if (e && (e.action === \"page\" || e.action === \"expandGroup\" || e.action === \"collapseGroup\")) {\n                    that.view(result.data);\n                    that._updateOuterRangesLength();\n                } else {\n                    that._ranges = [];\n                    var query = new Query(result.data);\n                    that._addRange(that._observe(result.data));\n\n                    if (options.skip + options.take > result.data.length) {\n                        options.skip = result.data.length - options.take;\n                    }\n\n                    that.view(query.range(options.skip, options.take).toArray());\n                }\n\n            } else {\n                that.view(result.data);\n            }\n        },\n\n        _clearEmptyGroups: function(data) {\n            for (var idx = data.length - 1; idx >= 0; idx--) {\n                var group = data[idx];\n                if (group.hasSubgroups) {\n                    this._clearEmptyGroups(group.items);\n                }\n\n                if (group.items && !group.items.length && !group.itemCount) {\n                    splice.apply(group.parent(), [idx, 1]);\n                }\n            }\n        },\n\n        _queryProcess: function(data, options) {\n            if (this.options.inPlaceSort) {\n                return Query.process(data, options, this.options.inPlaceSort);\n            }\n            else {\n                return Query.process(data, options);\n            }\n        },\n\n        _mergeState: function(options) {\n            var that = this;\n\n            if (options !== undefined$1) {\n                that._pageSize = options.pageSize;\n                that._page = options.page;\n                that._sort = options.sort;\n                that._filter = options.filter;\n                that._group = options.group;\n                that._aggregate = options.aggregate;\n                that._skip = that._currentRangeStart = options.skip;\n                that._take = options.take;\n\n                if (that._skip === undefined$1) {\n                    that._skip = that._currentRangeStart = that.skip();\n                    options.skip = that.skip();\n                }\n\n                if (that._take === undefined$1 && that._pageSize !== undefined$1) {\n                    that._take = that._pageSize;\n                    options.take = that._take;\n                }\n\n                if (that.options.virtual) {\n                    options.virtual = that.options.virtual;\n                }\n\n                if (options.sort) {\n                    that._sort = options.sort = normalizeSort(options.sort);\n                    that._sortFields = sortFields(options.sort);\n                }\n\n                if (options.filter) {\n                    that._filter = options.filter = (that.options.accentFoldingFiltering && !$.isEmptyObject(options.filter)) ? $.extend({}, normalizeFilter(options.filter), { accentFoldingFiltering: that.options.accentFoldingFiltering }) : normalizeFilter(options.filter);\n                }\n\n                if (options.group) {\n                    that._group = options.group = normalizeGroup(options.group);\n                }\n                if (options.aggregate) {\n                    that._aggregate = options.aggregate = normalizeAggregate(options.aggregate);\n                }\n            }\n            return options;\n        },\n\n        query: function(options) {\n            var result;\n            var remote = this.options.serverSorting || this.options.serverPaging || this.options.serverFiltering || this.options.serverGrouping || this.options.serverAggregates;\n\n            if (remote || ((this._data === undefined$1 || this._data.length === 0) && !this._destroyed.length)) {\n                if (this.options.endless) {\n                    var moreItemsCount = options.pageSize - this.pageSize();\n                    if (moreItemsCount > 0) {\n                        moreItemsCount = this.pageSize();\n                        options.page = options.pageSize / moreItemsCount;\n                        options.pageSize = moreItemsCount;\n                    } else {\n                        options.page = 1;\n                        this.options.endless = false;\n                    }\n                }\n                return this.read(this._mergeState(options));\n            }\n\n            var isPrevented = this.trigger(REQUESTSTART, { type: \"read\" });\n            if (!isPrevented) {\n                this.trigger(PROGRESS);\n                if (options) {\n                    options.groupPaging = this._groupPaging;\n                }\n                result = this._queryProcess(this._data, this._mergeState(options));\n\n                this._setFilterTotal(result.total, true);\n\n                this._aggregateResult = this._calculateAggregates(result.dataToAggregate || this._data, options);\n                this._setView(result, options);\n                this.trigger(REQUESTEND, { type: \"read\" });\n                this.trigger(CHANGE, { items: result.data, action: options ? options.action : \"\" });\n            }\n\n            return $.Deferred().resolve(isPrevented).promise();\n        },\n\n        _hasExpandedSubGroups: function(group) {\n            var result = false;\n            var length = group.items ? group.items.length : 0;\n\n            if (!group.hasSubgroups) {\n                return false;\n            }\n\n            for (var i = 0; i < length; i++) {\n                if (this._groupsState[group.items[i].uid]) {\n                    result = true;\n                    break;\n                }\n            }\n            return result;\n        },\n\n        _findGroupedRange: function(data, result, options, parents, callback) {\n            var that = this;\n            var length = data.length;\n            var group;\n            var current;\n            var itemsLength;\n            var groupCount;\n            var itemsToSkip;\n\n            for (var i = 0; i < length; i++) {\n                group = data[i];\n\n                if (options.taken >= options.take) {\n                    break;\n                }\n\n                if (!that._getGroupByUid(group.uid)) {\n                    that._groupsFlat.push(group);\n                }\n\n                if (that._groupsState[group.uid]) {\n                    if (that._isServerGroupPaged()) {\n                       if (that._fetchGroupItems(group, options, parents, callback)) {\n                            that._fetchingGroupItems = true;\n                            return;\n                       }\n                       groupCount = (group.subgroupCount || group.itemCount) + 1;\n                       itemsToSkip = options.skip - options.skipped;\n                       if (!that._hasExpandedSubGroups(group) && itemsToSkip > groupCount) {\n                           options.skipped += groupCount;\n                           continue;\n                       }\n                    }\n\n                    if (options.includeParents && options.skipped < options.skip) {\n                        options.skipped++;\n                        group.excludeHeader = true;\n                    } else if (options.includeParents) {\n                        options.taken++;\n                        group.excludeHeader = false;\n                    }\n\n                    if (group.hasSubgroups && group.items && group.items.length) {\n                        group.currentItems = [];\n\n                        if (!parents) {\n                            parents = [];\n                        }\n                        parents.push(group);\n\n                        that._findGroupedRange(group.items, group.currentItems, options, parents, callback);\n                        parents.pop();\n\n                        if (group.currentItems.length || options.taken > 0) {\n                            result.push(group);\n                        } else {\n                            group.excludeHeader = false;\n                        }\n                    } else {\n                        current = [];\n                        itemsLength = group.items.length;\n\n                        for (var j = 0; j < itemsLength; j++) {\n                            if (options.skipped < options.skip) {\n                                options.skipped++;\n                                continue;\n                            }\n\n                            if (options.taken >= options.take) {\n                                break;\n                            }\n                            current.push(group.items[j]);\n                            options.taken++;\n                        }\n\n                        if (current.length || options.taken > 0) {\n                            group.currentItems = current;\n                            result.push(group);\n                        } else {\n                            group.excludeHeader = false;\n                        }\n                    }\n                } else {\n                    if (options.skipped < options.skip) {\n                        options.skipped++;\n                        continue;\n                    }\n                    result.push(group);\n                    options.taken++;\n                }\n            }\n        },\n\n        _expandedSubGroupItemsCount: function(group, end, includeCurrentItems) {\n            var that = this;\n            var result = 0;\n            var subGroup;\n            var endSpecified = typeof end === \"number\";\n            var length = endSpecified ? end : group.subgroupCount;\n            var temp;\n\n            if (!group.hasSubgroups) {\n                return result;\n            }\n\n            for (var i = 0; i < length; i++) {\n                subGroup = group.items[i];\n\n                if (!subGroup) {\n                    break;\n                }\n\n                if (subGroup.hasSubgroups && that._groupsState[group.uid]) {\n                    temp = that._expandedSubGroupItemsCount(subGroup, length, true);\n                    result += temp;\n\n                    if (endSpecified) {\n                        length -= temp;\n                    }\n                } else if (!subGroup.hasSubgroups && that._groupsState[subGroup.uid]) {\n                    temp = subGroup.items ? subGroup.items.length : 0;\n                    result += temp;\n                    if (endSpecified) {\n                        length -= temp;\n                    }\n                }\n\n                if (includeCurrentItems) {\n                    result += 1;\n                    if (endSpecified) {\n                        length -= 1;\n                    }\n                }\n\n                if (endSpecified && result > length) {\n                    return result;\n                }\n            }\n\n            return result;\n        },\n\n        _fetchGroupItems: function(group, options, parents, callback) {\n            var that = this;\n            var groupItemsSkip;\n            var firstItem;\n            var lastItem;\n            var groupItemCount = group.hasSubgroups ? group.subgroupCount : group.itemCount;\n            var take = options.take;\n            var skipped = options.skipped;\n            var pageSize = that.take();\n            var expandedSubGroupItemsCount;\n\n            if (options.includeParents) {\n                if (skipped < options.skip) {\n                    skipped += 1;\n                } else {\n                    take -= 1;\n                }\n            }\n\n            if (!group.items || (group.items && !group.items.length)) {\n                that.getGroupItems(group, options, parents, callback, 0);\n                return true;\n            } else {\n                expandedSubGroupItemsCount = this._expandedSubGroupItemsCount(group, options.skip - skipped);\n                groupItemsSkip = Math.max(options.skip - (skipped + expandedSubGroupItemsCount), 0);\n\n                if (groupItemsSkip >= groupItemCount) {\n                    return false;\n                }\n\n                firstItem = group.items[groupItemsSkip];\n                lastItem = group.items[Math.min(groupItemsSkip + take, groupItemCount - 1)];\n\n                if (firstItem.notFetched) {\n                    that.getGroupItems(group, options, parents, callback, math.max(math.floor(groupItemsSkip / pageSize), 0) * pageSize, math.round((groupItemsSkip + pageSize) / pageSize));\n                    return true;\n                }\n\n                if (lastItem.notFetched) {\n                    that.getGroupItems(group, options, parents, callback, math.max(math.floor((groupItemsSkip + pageSize) / pageSize), 0) * pageSize, math.round((groupItemsSkip + pageSize) / pageSize));\n                    return true;\n                }\n            }\n        },\n\n        getGroupItems: function(group, options, parents, callback, groupItemsSkip, page) {\n            var that = this;\n            var take;\n            var filter;\n            var data;\n            var subgroups;\n\n            if (!group.items) {\n                group.items = [];\n            }\n\n            take = that.take();\n            filter = this._composeItemsFilter(group, parents);\n            data = {\n                page: page || 1,\n                pageSize: take,\n                skip: groupItemsSkip,\n                take: take,\n                filter: filter,\n                aggregate: that._aggregate,\n                sort: that._sort\n            };\n            subgroups = that.findSubgroups(group);\n\n            if (subgroups && subgroups.length) {\n                data.group = subgroups;\n                data.groupPaging = true;\n            }\n\n            clearTimeout(that._timeout);\n            that._timeout = setTimeout(function() {\n                that._queueRequest(data, function() {\n                    if (!that.trigger(REQUESTSTART, {\n                            type: \"read\"\n                        })) {\n                        that.transport.read({\n                            data: data,\n                            success: that._groupItemsSuccessHandler(group, options.skip, that.take(), callback, groupItemsSkip),\n                            error: function() {\n                                var args = slice.call(arguments);\n                                that.error.apply(that, args);\n                            }\n                        });\n                    } else {\n                        that._dequeueRequest();\n                    }\n                });\n            }, 100);\n        },\n\n        _groupItemsSuccessHandler: function(group, skip, take, callback, groupItemsSkip) {\n            var that = this;\n            var timestamp = that._timeStamp();\n            callback = isFunction(callback) ? callback : noop;\n            var totalField = that.options.schema && that.options.schema.total ? that.options.schema.total : \"Total\";\n\n            return function(data) {\n                var temp;\n                var model = Model.define(that.options.schema.model);\n                var totalCount;\n\n                that._dequeueRequest();\n\n                that.trigger(REQUESTEND, {\n                    response: data,\n                    type: \"read\"\n                });\n\n                if (isFunction(totalField)) {\n                    totalCount = totalField(data);\n                } else {\n                    totalCount = data[totalField];\n                }\n\n                data = that.reader.parse(data);\n\n                if (group.hasSubgroups) {\n                    temp = that.reader.groups(data);\n                    group.subgroupCount = totalCount;\n                } else {\n                    temp = that.reader.data(data);\n                    temp = temp.map(function(item) {\n                        return new model(item);\n                    });\n                }\n\n                group.items.omitChangeEvent = true;\n                for (var i = 0; i < totalCount; i++) {\n                    if (i >= groupItemsSkip && i < (groupItemsSkip + take) ) {\n                        group.items.splice(i, 1, temp[i - groupItemsSkip]);\n                    } else {\n                        if (!group.items[i]) {\n                            group.items.splice(i, 0, { notFetched: true });\n                        }\n                    }\n                }\n                group.items.omitChangeEvent = false;\n\n                that._updateRangePristineData(group);\n                that._fetchingGroupItems = false;\n\n                if (!group.countAdded) {\n                    that._serverGroupsTotal += totalCount;\n                    group.countAdded = true;\n                }\n\n                that.range(skip, take, callback, \"expandGroup\");\n\n                if (timestamp >= that._currentRequestTimeStamp || !that._skipRequestsInProgress) {\n                    that.trigger(CHANGE, {});\n                }\n            };\n        },\n\n        findSubgroups: function(group) {\n            var indexOfCurrentGroup = this._group.map(function(g) {\n                return g.field;\n            }).indexOf(group.field);\n\n            return this._group.slice(indexOfCurrentGroup + 1, this._group.length);\n        },\n\n        _composeItemsFilter: function(group, parents) {\n            var filter = {\n                logic: \"and\",\n                filters: []\n            };\n\n            if (this.filter()) {\n                filter.filters.push(this.filter());\n            }\n\n            filter = extend(true, {}, filter);\n            filter.filters.push({\n                field: group.field,\n                operator: \"eq\",\n                value: group.value\n            });\n\n            if (parents) {\n                for (var i = 0; i < parents.length; i++) {\n                    filter.filters.push({\n                        field: parents[i].field,\n                        operator: \"eq\",\n                        value: parents[i].value\n                    });\n                }\n            }\n\n            return filter;\n        },\n\n        _updateRangePristineData: function(group) {\n            var that = this;\n            var ranges = that._ranges;\n            var rangesLength = ranges.length;\n            var temp;\n            var currentGroup;\n            var range;\n            var dataLength;\n            var indexes;\n            var currIdx;\n\n            for (var i = 0; i < rangesLength; i++) {\n                range = ranges[i];\n                dataLength = range.data.length;\n                indexes = [];\n                temp = null;\n\n                for (var j = 0; j < dataLength; j++) {\n                    currentGroup = range.data[j];\n                    indexes.push(j);\n\n                    if ((currentGroup.uid === group.uid) || (currentGroup.hasSubgroups && currentGroup.items.length && that._containsSubGroup(currentGroup, group, indexes))) {\n                        break;\n                    }\n                    indexes.pop();\n                }\n\n                if (indexes.length) {\n                    temp = ranges[i].pristineData;\n\n                    while (indexes.length > 1) {\n                        currIdx = indexes.splice(0, 1)[0];\n                        temp = temp[currIdx].items;\n                    }\n                    temp[indexes[0]] = that._cloneGroup(group);\n                    break;\n                }\n            }\n        },\n\n        _containsSubGroup: function(group, subgroup, indexes) {\n            var that = this;\n            var length = group.items.length;\n            var currentSubGroup;\n\n            if (group.hasSubgroups && length) {\n                for (var i = 0; i < length; i++) {\n                    currentSubGroup = group.items[i];\n                    indexes.push(i);\n                    if (currentSubGroup.uid === subgroup.uid ||\n                            (currentSubGroup.hasSubgroups &&\n                            currentSubGroup.items.length &&\n                            that._containsSubGroup(currentSubGroup, subgroup, indexes))) {\n                        return true;\n                    }\n                    indexes.pop();\n                }\n            }\n\n        },\n\n        _cloneGroup: function(group) {\n            var that = this;\n            group = typeof group.toJSON == \"function\" ? group.toJSON() : group;\n\n            if (group.items && group.items.length) {\n                group.items = group.items.map(function(item) {\n                    return that._cloneGroup(item);\n                });\n            }\n\n            return group;\n        },\n\n        _setFilterTotal: function(filterTotal, setDefaultValue) {\n            var that = this;\n\n            if (!that.options.serverFiltering) {\n                if (filterTotal !== undefined$1) {\n                    that._total = filterTotal;\n                } else if (setDefaultValue) {\n                    that._total = that._data.length;\n                }\n            }\n        },\n\n        fetch: function(callback) {\n            var that = this;\n            var fn = function(isPrevented) {\n                if (isPrevented !== true && isFunction(callback)) {\n                    callback.call(that);\n                }\n            };\n\n            return this._query().done(fn);\n        },\n\n        _query: function(options) {\n            var that = this;\n\n            return that.query(extend({}, {\n                page: that.page(),\n                pageSize: that.pageSize(),\n                sort: that.sort(),\n                filter: that.filter(),\n                group: that.group(),\n                aggregate: that.aggregate()\n            }, options));\n        },\n\n        next: function(options) {\n            var that = this,\n                page = that.page(),\n                total = that.total();\n\n            options = options || {};\n\n            if (!page || (total && page + 1 > that.totalPages())) {\n                return;\n            }\n\n            that._skip = that._currentRangeStart = page * that.take();\n\n            page += 1;\n            options.page = page;\n\n            that._query(options);\n\n            return page;\n        },\n\n        prev: function(options) {\n            var that = this,\n                page = that.page();\n\n            options = options || {};\n\n            if (!page || page === 1) {\n                return;\n            }\n\n            that._skip = that._currentRangeStart = that._skip - that.take();\n\n            page -= 1;\n            options.page = page;\n\n            that._query(options);\n\n            return page;\n        },\n\n        page: function(val) {\n            var that = this,\n            skip;\n\n            if (val !== undefined$1) {\n                val = math.max(math.min(math.max(val, 1), that.totalPages()), 1);\n                var take = that.take();\n\n                if (that._isGroupPaged()) {\n                    val -= 1;\n                    that.range(val * take, take, null, \"page\");\n                    return;\n                }\n                that._query(that._pageableQueryOptions({ page: val }));\n                return;\n            }\n            skip = that.skip();\n\n            return skip !== undefined$1 ? math.round((skip || 0) / (that.take() || 1)) + 1 : undefined$1;\n        },\n\n        pageSize: function(val) {\n            var that = this;\n\n            if (val !== undefined$1) {\n                that._query(that._pageableQueryOptions({ pageSize: val, page: 1 }));\n                return;\n            }\n\n            return that.take();\n        },\n\n        sort: function(val) {\n            var that = this;\n\n            if (val !== undefined$1) {\n                that.trigger(\"sort\");\n                that._query({ sort: val });\n                return;\n            }\n\n            return that._sort;\n        },\n\n        filter: function(val) {\n            var that = this;\n\n            if (val === undefined$1) {\n                return that._filter;\n            }\n\n            that.trigger(\"reset\");\n            that._query({ filter: val, page: 1 });\n        },\n\n        group: function(val) {\n            var that = this;\n            var options = { group: val };\n\n            if (that._groupPaging) {\n                // clear ranges if ungrouping is performed\n                if (val !== undefined$1 && (!val || !val.length) ) {\n                    that._ranges = [];\n                }\n                options.page = 1;\n            }\n\n            if (val !== undefined$1) {\n                that._query(options);\n                return;\n            }\n\n            return that._group;\n        },\n\n        getGroupsFlat: function(data) {\n            var idx,\n                result = [],\n                length;\n\n            for (idx = 0, length = data.length; idx < length; idx++) {\n                var group = data[idx];\n                if (group.hasSubgroups) {\n                    result = result.concat(this.getGroupsFlat(group.items));\n                }\n\n                result.push(group);\n            }\n\n            return result;\n        },\n\n        total: function() {\n            return parseInt(this._total || 0, 10);\n        },\n\n        groupsTotal: function(includeExpanded) {\n            var that = this;\n\n            if (!that._group.length) {\n                return that.total();\n            }\n\n            if (that._isServerGrouped()) {\n                if (that._serverGroupsTotal) {\n                    return that._serverGroupsTotal;\n                }\n                that._serverGroupsTotal = that.total();\n\n                return that._serverGroupsTotal;\n            }\n\n            return that._calculateGroupsTotal(that._ranges.length ? that._ranges[0].data : [], includeExpanded);\n        },\n\n        _calculateGroupsTotal: function(groups, includeExpanded, itemsField, ignoreState) {\n            var that = this;\n            itemsField = itemsField || \"items\";\n            var total;\n            var length;\n\n            if (that._group.length && groups) {\n                total = 0;\n                length = groups.length;\n\n                for (var i = 0; i < length; i++) {\n                    total += that.groupCount(groups[i], includeExpanded, itemsField, ignoreState);\n                }\n                that._groupsTotal = total;\n                return total;\n            }\n\n            that._groupsTotal = that._data.length;\n            return that._groupsTotal;\n        },\n\n        groupCount: function(group, includeExpanded, itemsField, ignoreState) {\n            var that = this;\n            var total = 0;\n\n            if (group.hasSubgroups && that._groupsState[group.uid]) {\n                if (includeExpanded && !group.excludeHeader || ignoreState) {\n                    total += 1;\n                }\n\n                group[itemsField].forEach(function(subgroup) {\n                    total += that.groupCount(subgroup, includeExpanded, itemsField, ignoreState);\n                });\n            } else {\n                if (that._groupsState[group.uid]) {\n                    if (includeExpanded && !group.excludeHeader || ignoreState) {\n                        total++;\n                    }\n                    total += group[itemsField] ? group[itemsField].length : 0;\n                } else {\n                    total++;\n                }\n            }\n            return total;\n        },\n\n        countGroupRange: function(range) {\n            var total = 0;\n            var length = range.length;\n\n            for (var i = 0; i < length; i++) {\n                total += this.groupCount(range[i], true);\n            }\n\n            return total;\n        },\n\n        aggregate: function(val) {\n            var that = this;\n\n            if (val !== undefined$1) {\n                that._query({ aggregate: val });\n                return;\n            }\n\n            return that._aggregate;\n        },\n\n        aggregates: function() {\n            var result = this._aggregateResult;\n\n            if (isEmptyObject(result)) {\n                result = this._emptyAggregates(this.aggregate());\n            }\n\n            return result;\n        },\n\n        _emptyAggregates: function(aggregates) {\n            var result = {};\n\n            if (!isEmptyObject(aggregates)) {\n                var aggregate = {};\n\n                if (!isArray(aggregates)) {\n                    aggregates = [aggregates];\n                }\n\n                for (var idx = 0; idx < aggregates.length; idx++) {\n                    aggregate[aggregates[idx].aggregate] = 0;\n                    result[aggregates[idx].field] = aggregate;\n                }\n            }\n\n            return result;\n        },\n\n        _pageableQueryOptions: function(options) {\n            return options;\n        },\n\n        _wrapInEmptyGroup: function(model) {\n            var groups = this.group(),\n                parent,\n                group,\n                idx,\n                length;\n\n            for (idx = groups.length - 1, length = 0; idx >= length; idx--) {\n                group = groups[idx];\n                parent = {\n                    value: model.get ? model.get(group.field) : model[group.field],\n                    field: group.field,\n                    items: parent ? [parent] : [model],\n                    hasSubgroups: !!parent,\n                    aggregates: this._emptyAggregates(group.aggregates)\n                };\n            }\n\n            return parent;\n        },\n\n        totalPages: function() {\n            var that = this,\n                pageSize = that.pageSize() || that.total(),\n                total = that._isGroupPaged() ? that.groupsTotal(true) : that.total();\n\n            return math.ceil((total || 0) / pageSize);\n        },\n\n        inRange: function(skip, take) {\n            var that = this,\n                end = math.min(skip + take, that.total());\n\n            if (!that.options.serverPaging && that._data.length > 0) {\n                return true;\n            }\n\n            return that._findRange(skip, end).length > 0;\n        },\n\n        lastRange: function() {\n            var ranges = this._ranges;\n            return ranges[ranges.length - 1] || { start: 0, end: 0, data: [] };\n        },\n\n        firstItemUid: function() {\n            var ranges = this._ranges;\n            return ranges.length && ranges[0].data.length && ranges[0].data[0].uid;\n        },\n\n        enableRequestsInProgress: function() {\n            this._skipRequestsInProgress = false;\n        },\n\n        _timeStamp: function() {\n            return new Date().getTime();\n        },\n\n        range: function(skip, take, callback, action) {\n            this._currentRequestTimeStamp = this._timeStamp();\n            this._skipRequestsInProgress = true;\n            var total = this._isGroupPaged() ? this.groupsTotal(true) : this.total();\n\n            if (action === \"expandGroup\" || action === \"collapseGroup\") {\n                this._updateOuterRangesLength();\n            }\n\n            skip = math.min(skip || 0, total);\n            callback = isFunction(callback) ? callback : noop;\n\n            var that = this,\n                pageSkip = math.max(math.floor(skip / take), 0) * take,\n                size = math.min(pageSkip + take, total),\n                data;\n\n            data = that._findRange(skip, math.min(skip + take, total), callback);\n\n            if ((data.length || total === 0) && !that._fetchingGroupItems) {\n                that._processRangeData(data, skip, take, that._originalPageSkip || pageSkip, that._originalSize || size, {\n                    action: action\n                });\n                that._originalPageSkip = null;\n                that._originalSize = null;\n                callback();\n                return;\n            }\n\n            if (that._isGroupPaged()) {\n                that._originalPageSkip = pageSkip;\n                that._originalSize = size;\n\n                pageSkip = math.max(math.floor(that._adjustPageSkip(skip, take) / take), 0) * take;\n                size = math.min(pageSkip + take, total);\n            }\n\n            if (take !== undefined$1 && !that._fetchingGroupItems) {\n                if ((that._isGroupPaged() && !that._groupRangeExists(pageSkip, take)) || !that._rangeExists(pageSkip, size)) {\n                    that.prefetch(pageSkip, take, function() {\n                        if (skip > pageSkip && size < that.total() && !that._rangeExists(size, math.min(size + take, that.total()))) {\n                            that.prefetch(size, take, function() {\n                                that.range(skip, take, callback );\n                            });\n                        } else {\n                            that.range(skip, take, callback);\n                        }\n                    });\n                } else if (pageSkip < skip) {\n                    that.prefetch(size, take, function() {\n                        that.range(skip, take, callback );\n                    });\n                }\n            }\n        },\n\n        _findRange: function(start, end, callback) {\n            var that = this,\n                ranges = that._ranges,\n                range,\n                data = [],\n                skipIdx,\n                takeIdx,\n                startIndex,\n                endIndex,\n                rangeData,\n                rangeEnd,\n                processed,\n                options = that.options,\n                remote = options.serverSorting || options.serverPaging || options.serverFiltering || options.serverGrouping || options.serverAggregates,\n                flatData,\n                count,\n                length,\n                groupMapOptions = {\n                        take: end - start,\n                        skip: start,\n                        skipped: 0,\n                        taken: 0,\n                        includeParents: true\n                    },\n                prevRangeEnd,\n                isGroupPaged = that._isGroupPaged(),\n                startField = isGroupPaged ? \"outerStart\" : \"start\",\n                endField = isGroupPaged ? \"outerEnd\" : \"end\",\n                currentDataLength;\n\n            for (skipIdx = 0, length = ranges.length; skipIdx < length; skipIdx++) {\n                range = ranges[skipIdx];\n\n                if (isGroupPaged) {\n                    if (range.outerStart >= end) {\n                        return [];\n                    }\n\n                    if (start > range.outerEnd) {\n                        groupMapOptions.skipped += range.outerEnd - (prevRangeEnd || 0);\n                        prevRangeEnd = range.outerEnd;\n                        continue;\n                    }\n\n                    if (typeof prevRangeEnd !== \"undefined\" && prevRangeEnd != range.outerStart) {\n                        groupMapOptions.skipped += range.outerStart - prevRangeEnd;\n                    }\n\n                    if (groupMapOptions.skipped > groupMapOptions.skip) {\n                        return [];\n                    }\n\n                    if (typeof prevRangeEnd === \"undefined\" && start > 0 && range.start > 0) {\n                        groupMapOptions.skipped = range.outerStart;\n                    }\n\n                    takeIdx = skipIdx;\n                    while (true) {\n                        this._findGroupedRange(range.data, data, groupMapOptions, null, callback);\n                        currentDataLength = that._calculateGroupsTotal(data, true, \"currentItems\");\n\n                        if (currentDataLength >= groupMapOptions.take) {\n                            return data;\n                        }\n\n                        if (that._fetchingGroupItems) {\n                            return [];\n                        }\n                        takeIdx++;\n\n                        if (ranges[takeIdx] && ranges[takeIdx].outerStart === range.outerEnd) {\n                            range = ranges[takeIdx];\n                        } else {\n                            break;\n                        }\n                    }\n                } else if (start >= range[startField] && start <= range[endField]) {\n                    count = 0;\n\n                    for (takeIdx = skipIdx; takeIdx < length; takeIdx++) {\n                        range = ranges[takeIdx];\n                        flatData = that._flatData(range.data, true);\n\n                        if (flatData.length && start + count >= range.start) {\n                            rangeData = range.data;\n                            rangeEnd = range.end;\n\n                            if (!remote) {\n                                if (options.inPlaceSort) {\n                                    processed = that._queryProcess(range.data, { filter: that.filter() });\n                                } else {\n                                    var sort = normalizeGroupWithoutCompare(that.group() || []).concat(normalizeSort(that.sort() || []));\n                                    processed = that._queryProcess(range.data, { sort: sort, filter: that.filter() });\n                                }\n                                flatData = rangeData = processed.data;\n\n                                if (processed.total !== undefined$1) {\n                                    rangeEnd = processed.total;\n                                }\n                            }\n\n                            startIndex = 0;\n                            if (start + count > range.start) {\n                                startIndex = (start + count) - range.start;\n                            }\n                            endIndex = flatData.length;\n                            if (rangeEnd > end) {\n                                endIndex = endIndex - (rangeEnd - end);\n                            }\n                            count += endIndex - startIndex;\n                            data = that._mergeGroups(data, rangeData, startIndex, endIndex);\n\n                            if (end <= range.end && count == end - start) {\n                                return data;\n                            }\n                        }\n                    }\n                    break;\n                }\n                prevRangeEnd = range.outerEnd;\n            }\n            return [];\n        },\n\n        _getRangesMismatch: function(pageSkip) {\n            var that = this;\n            var ranges = that._ranges;\n            var mismatch = 0;\n            var i = 0;\n\n            while (true) {\n                var range = ranges[i];\n                if (!range || range.outerStart > pageSkip) {\n                    break;\n                }\n\n                if (range.outerEnd != range.end) {\n                    mismatch = range.outerEnd - range.end;\n                }\n                i++;\n            }\n\n            return mismatch;\n        },\n\n        _mergeGroups: function(data, range, skip, take) {\n            if (this._isServerGrouped()) {\n                var temp = range.toJSON(),\n                    prevGroup;\n\n                if (data.length) {\n                    prevGroup = data[data.length - 1];\n                }\n\n                mergeGroups(prevGroup, temp, skip, take);\n\n                return data.concat(temp);\n            }\n            return data.concat(range.slice(skip, take));\n        },\n\n        _processRangeData: function(data, skip, take, pageSkip, size, eventData) {\n            var that = this;\n\n            that._pending = undefined$1;\n\n            that._skip = skip > that.skip() && !that._omitPrefetch ? math.min(size, (that.totalPages() - 1) * that.take()) : pageSkip;\n\n            that._currentRangeStart = skip;\n\n            that._take = take;\n\n            var paging = that.options.serverPaging;\n            var sorting = that.options.serverSorting;\n            var filtering = that.options.serverFiltering;\n            var aggregates = that.options.serverAggregates;\n            try {\n                that.options.serverPaging = true;\n                if (!that._isServerGrouped() && !(that.group() && that.group().length)) {\n                    that.options.serverSorting = true;\n                }\n                that.options.serverFiltering = true;\n                that.options.serverPaging = true;\n                that.options.serverAggregates = true;\n\n                if (paging) {\n                    that._detachObservableParents();\n                    that._data = data = that._observe(data);\n                }\n                that._process(data, eventData);\n            } finally {\n                that.options.serverPaging = paging;\n                that.options.serverSorting = sorting;\n                that.options.serverFiltering = filtering;\n                that.options.serverAggregates = aggregates;\n            }\n        },\n\n        skip: function() {\n            var that = this;\n\n            if (that._skip === undefined$1) {\n                return (that._page !== undefined$1 ? (that._page - 1) * (that.take() || 1) : undefined$1);\n            }\n            return that._skip;\n        },\n\n        currentRangeStart: function() {\n            return this._currentRangeStart || 0;\n        },\n\n        take: function() {\n            return this._take || this._pageSize;\n        },\n\n        _prefetchSuccessHandler: function(skip, size, callback, force) {\n            var that = this;\n            var timestamp = that._timeStamp();\n\n            return function(data) {\n                var found = false,\n                    range = { start: skip, end: size, data: [], timestamp: that._timeStamp() },\n                    idx,\n                    length,\n                    temp;\n\n                that._dequeueRequest();\n\n                that.trigger(REQUESTEND, { response: data, type: \"read\" });\n\n                data = that.reader.parse(data);\n\n                temp = that._readData(data);\n\n                if (temp.length) {\n                    for (idx = 0, length = that._ranges.length; idx < length; idx++) {\n                        if (that._ranges[idx].start === skip) {\n                            found = true;\n                            range = that._ranges[idx];\n\n                            if (!that._isGroupPaged()) {\n                                range.pristineData = temp;\n                                range.data = that._observe(temp);\n                                range.end = range.start + that._flatData(range.data, true).length;\n                                that._sortRanges();\n                            }\n\n                            break;\n                        }\n                    }\n\n                    if (!found) {\n                        that._addRange(that._observe(temp), skip);\n                    }\n                }\n\n                that._total = that.reader.total(data);\n\n                if (force || (timestamp >= that._currentRequestTimeStamp || !that._skipRequestsInProgress)) {\n                    if (callback && temp.length) {\n                        callback();\n                    } else {\n                        that.trigger(CHANGE, {});\n                    }\n                }\n            };\n        },\n\n        prefetch: function(skip, take, callback) {\n            var that = this,\n                size = math.min(skip + take, that.total()),\n                options = {\n                    take: take,\n                    skip: skip,\n                    page: skip / take + 1,\n                    pageSize: take,\n                    sort: that._sort,\n                    filter: that._filter,\n                    group: that._group,\n                    aggregate: that._aggregate\n                };\n\n\n            if ((that._isGroupPaged() && !that._isServerGrouped() && that._groupRangeExists(skip, size))) {\n                if (callback) {\n                    callback();\n                }\n                return;\n            }\n\n            if ((that._isServerGroupPaged() && !that._groupRangeExists(skip, size)) || !that._rangeExists(skip, size)) {\n                clearTimeout(that._timeout);\n\n                that._timeout = setTimeout(function() {\n                    that._queueRequest(options, function() {\n                        if (!that.trigger(REQUESTSTART, { type: \"read\" })) {\n                            if (that._omitPrefetch) {\n                                that.trigger(PROGRESS);\n                            }\n                            that.transport.read({\n                                data: that._params(options),\n                                success: that._prefetchSuccessHandler(skip, size, callback),\n                                error: function() {\n                                    var args = slice.call(arguments);\n                                    that.error.apply(that, args);\n                                }\n                            });\n                        } else {\n                            that._dequeueRequest();\n                        }\n                    });\n                }, 100);\n            } else if (callback) {\n                callback();\n            }\n        },\n\n        _multiplePrefetch: function(skip, take, callback) {\n            var that = this,\n                size = math.min(skip + take, that.total()),\n                options = {\n                    take: take,\n                    skip: skip,\n                    page: skip / take + 1,\n                    pageSize: take,\n                    sort: that._sort,\n                    filter: that._filter,\n                    group: that._group,\n                    aggregate: that._aggregate\n                };\n\n            if (!that._rangeExists(skip, size)) {\n                if (!that.trigger(REQUESTSTART, { type: \"read\" })) {\n                    that.transport.read({\n                        data: that._params(options),\n                        success: that._prefetchSuccessHandler(skip, size, callback, true)\n                    });\n                }\n            } else if (callback) {\n                callback();\n            }\n        },\n\n        _adjustPageSkip: function(start, take) {\n            var that = this;\n            var prevRange = that._getPrevRange(start);\n            var result;\n            var total = that.total();\n            var mismatch;\n\n            if (prevRange) {\n                mismatch = that._getRangesMismatch(start);\n\n                if (!mismatch) {\n                    return start;\n                }\n                start -= mismatch;\n            }\n            result = math.max(math.floor(start / take), 0) * take;\n\n            if (result > total) {\n                while (true) {\n                    result -= take;\n                    if (result < total) {\n                        break;\n                    }\n                }\n            }\n            return result;\n        },\n\n        _getNextRange: function(end) {\n            var that = this,\n                ranges = that._ranges,\n                idx,\n                length;\n\n            for (idx = 0, length = ranges.length; idx < length; idx++) {\n                if (ranges[idx].start <= end && ranges[idx].end >= end) {\n                    return ranges[idx];\n                }\n            }\n        },\n\n        _getPrevRange: function(start) {\n            var that = this,\n                ranges = that._ranges,\n                idx,\n                range,\n                length = ranges.length;\n\n            for (idx = length - 1; idx >= 0; idx--) {\n                if (ranges[idx].outerStart <= start) {\n                    range = ranges[idx];\n                    break;\n                }\n\n            }\n\n            return range;\n        },\n\n        _rangeExists: function(start, end) {\n            var that = this,\n                ranges = that._ranges,\n                idx,\n                length;\n\n            for (idx = 0, length = ranges.length; idx < length; idx++) {\n                if (ranges[idx].start <= start && ranges[idx].end >= end) {\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        _groupRangeExists: function(start, end) {\n            var that = this,\n                ranges = that._ranges,\n                idx,\n                length,\n                availableItemsCount = 0,\n                total = that.groupsTotal(true);\n\n            if (end > total && !that._isServerGrouped()) {\n                end = total;\n            }\n\n            for (idx = 0, length = ranges.length; idx < length; idx++) {\n                var range = ranges[idx];\n                if (range.outerStart <= start && range.outerEnd >= start) {\n                    availableItemsCount += range.outerEnd - start;\n                } else if (range.outerStart <= end && range.outerEnd >= end) {\n                    availableItemsCount += end - range.outerStart;\n                }\n            }\n\n            return availableItemsCount >= end - start;\n        },\n\n        _getCurrentRangeSpan: function() {\n            var that = this;\n            var ranges = that._ranges;\n            var start = that.currentRangeStart();\n            var end = start + (that.take() || 0);\n            var rangeSpan = [];\n            var range;\n            var idx;\n            var length = ranges.length;\n\n            for (idx = 0; idx < length; idx++) {\n                range = ranges[idx];\n\n                if ((range.start <= start && range.end >= start) || (range.start >= start && range.start <= end)) {\n                    rangeSpan.push(range);\n                }\n            }\n\n            return rangeSpan;\n        },\n\n        _removeModelFromRanges: function(model) {\n            var that = this;\n            var range;\n\n            for (var idx = 0, length = this._ranges.length; idx < length; idx++) {\n                range = this._ranges[idx];\n\n                that._removeModelFromRange(range, model);\n            }\n\n            that._updateRangesLength();\n        },\n\n        _removeModelFromRange: function(range, model) {\n            this._eachItem(range.data, function(data) {\n                if (!data) {\n                    return;\n                }\n                for (var idx = 0; idx < data.length; idx++) {\n                    var dataItem = data[idx];\n\n                    if (dataItem.uid && dataItem.uid == model.uid) {\n                        [].splice.call(data, idx, 1);\n                        break;\n                    }\n                }\n            });\n        },\n\n        _insertModelInRange: function(index, model) {\n            var that = this;\n            var ranges = that._ranges || [];\n            var rangesLength = ranges.length;\n            var range;\n            var i;\n\n            for (i = 0; i < rangesLength; i++) {\n                range = ranges[i];\n\n                if (range.start <= index && range.end >= index) {\n                    if (!that._getByUid(model.uid, range.data)) {\n                        if (that._isServerGrouped()) {\n                            range.data.splice(index, 0, that._wrapInEmptyGroup(model));\n                        } else {\n                            range.data.splice(index, 0, model);\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            that._updateRangesLength();\n        },\n\n        _updateRangesLength: function() {\n            var that = this;\n            var ranges = that._ranges || [];\n            var rangesLength = ranges.length;\n            var mismatchFound = false;\n            var mismatchLength = 0;\n            var lengthDifference = 0;\n            var rangeLength;\n            var range;\n            var i;\n\n            for (i = 0; i < rangesLength; i++) {\n                range = ranges[i];\n                rangeLength = that._isGroupPaged() ? range.data.length : that._flatData(range.data, true).length;\n                lengthDifference = rangeLength - math.abs(range.end - range.start);\n\n                if (!mismatchFound && lengthDifference !== 0) {\n                    mismatchFound = true;\n                    mismatchLength = lengthDifference;\n                    range.end += mismatchLength;\n                    continue;\n                }\n\n                if (mismatchFound) {\n                    range.start += mismatchLength;\n                    range.end += mismatchLength;\n                }\n            }\n        },\n\n        _updateOuterRangesLength: function() {\n            var that = this;\n            var ranges = that._ranges || [];\n            var rangesLength = ranges.length;\n            var mismatchLength = 0;\n            var range;\n            var i;\n            var prevRange;\n            var rangeLength;\n\n            for (i = 0; i < rangesLength; i++) {\n                range = ranges[i];\n                rangeLength = that._isGroupPaged() ? that._calculateGroupsTotal(range.data, true, \"items\", true) : that._flatData(range.data, true).length;\n\n                if (prevRange) {\n                    if (prevRange.end != range.start) {\n                        mismatchLength = range.start - prevRange.end;\n                    }\n                    range.outerStart = prevRange.outerEnd + mismatchLength;\n                    mismatchLength = 0;\n                } else {\n                    range.outerStart = range.start;\n                }\n\n                range.outerEnd = range.outerStart + rangeLength;\n                prevRange = range;\n            }\n        }\n    });\n\n    var Transport = {};\n\n    Transport.create = function(options, data, dataSource) {\n        var transport,\n            transportOptions = options.transport ? $.extend({}, options.transport) : null;\n\n        if (transportOptions) {\n            transportOptions.read = typeof transportOptions.read === STRING ? { url: transportOptions.read } : transportOptions.read;\n\n            if (options.type === \"jsdo\") {\n                transportOptions.dataSource = dataSource;\n            }\n\n            if (options.type) {\n                kendo.data.transports = kendo.data.transports || {};\n                kendo.data.schemas = kendo.data.schemas || {};\n\n                if (!kendo.data.transports[options.type]) {\n                    kendo.logToConsole(\"Unknown DataSource transport type '\" + options.type + \"'.\\nVerify that registration scripts for this type are included after Kendo UI on the page.\", \"warn\");\n                } else if (!isPlainObject(kendo.data.transports[options.type])) {\n                    transport = new kendo.data.transports[options.type](extend(transportOptions, { data: data }));\n                } else {\n                    transportOptions = extend(true, {}, kendo.data.transports[options.type], transportOptions);\n                }\n\n                options.schema = extend(true, {}, kendo.data.schemas[options.type], options.schema);\n            }\n\n            if (!transport) {\n                transport = isFunction(transportOptions.read) ? transportOptions : new RemoteTransport(transportOptions);\n            }\n        } else {\n            transport = new LocalTransport({ data: options.data || [] });\n        }\n        return transport;\n    };\n\n    DataSource.create = function(options) {\n        if (isArray(options) || options instanceof ObservableArray) {\n           options = { data: options };\n        }\n\n        var dataSource = options || {},\n            data = dataSource.data,\n            fields = dataSource.fields,\n            table = dataSource.table,\n            select = dataSource.select,\n            idx,\n            length,\n            model = {},\n            field;\n\n        if (!data && fields && !dataSource.transport) {\n            if (table) {\n                data = inferTable(table, fields);\n            } else if (select) {\n                data = inferSelect(select, fields);\n\n                if (dataSource.group === undefined$1 && data[0] && data[0].optgroup !== undefined$1) {\n                    dataSource.group = \"optgroup\";\n                }\n            }\n        }\n\n        if (kendo.data.Model && fields && (!dataSource.schema || !dataSource.schema.model)) {\n            for (idx = 0, length = fields.length; idx < length; idx++) {\n                field = fields[idx];\n                if (field.type) {\n                    model[field.field] = field;\n                }\n            }\n\n            if (!isEmptyObject(model)) {\n                dataSource.schema = extend(true, dataSource.schema, { model: { fields: model } });\n            }\n        }\n\n        dataSource.data = data;\n\n        select = null;\n        dataSource.select = null;\n        table = null;\n        dataSource.table = null;\n\n        return dataSource instanceof DataSource ? dataSource : new DataSource(dataSource);\n    };\n\n    function inferSelect(select, fields) {\n        select = $(select)[0];\n        var options = select.options;\n        var firstField = fields[0];\n        var secondField = fields[1];\n\n        var data = [];\n        var idx, length;\n        var optgroup;\n        var option;\n        var record;\n        var value;\n\n        for (idx = 0, length = options.length; idx < length; idx++) {\n            record = {};\n            option = options[idx];\n            optgroup = option.parentNode;\n\n            if (optgroup === select) {\n                optgroup = null;\n            }\n\n            if (option.disabled || (optgroup && optgroup.disabled)) {\n                continue;\n            }\n\n            if (optgroup) {\n                record.optgroup = optgroup.label;\n            }\n\n            record[firstField.field] = option.text;\n\n            value = option.attributes.value;\n\n            if (value && value.specified) {\n                value = option.value;\n            } else {\n                value = option.text;\n            }\n\n            record[secondField.field] = value;\n\n            data.push(record);\n        }\n\n        return data;\n    }\n\n    function inferTable(table, fields) {\n        var tbody = $(table)[0].tBodies[0],\n        rows = tbody ? tbody.rows : [],\n        idx,\n        length,\n        fieldIndex,\n        fieldCount = fields.length,\n        data = [],\n        cells,\n        record,\n        cell,\n        empty;\n\n        for (idx = 0, length = rows.length; idx < length; idx++) {\n            record = {};\n            empty = true;\n            cells = rows[idx].cells;\n\n            for (fieldIndex = 0; fieldIndex < fieldCount; fieldIndex++) {\n                cell = cells[fieldIndex];\n                if (cell.nodeName.toLowerCase() !== \"th\") {\n                    empty = false;\n                    record[fields[fieldIndex].field] = cell.innerHTML;\n                }\n            }\n            if (!empty) {\n                data.push(record);\n            }\n        }\n\n        return data;\n    }\n\n    var Node = Model.define({\n        idField: \"id\",\n\n        init: function(value) {\n            var that = this,\n                hasChildren = that.hasChildren || value && value.hasChildren,\n                childrenField = \"items\",\n                childrenOptions = {};\n\n            kendo.data.Model.fn.init.call(that, value);\n\n            if (typeof that.children === STRING) {\n                childrenField = that.children;\n            }\n\n            childrenOptions = {\n                schema: {\n                    data: childrenField,\n                    model: {\n                        hasChildren: hasChildren,\n                        id: that.idField,\n                        fields: that.fields\n                    }\n                }\n            };\n\n            if (typeof that.children !== STRING) {\n                extend(childrenOptions, that.children);\n            }\n\n            childrenOptions.data = value;\n\n            if (!hasChildren) {\n                hasChildren = childrenOptions.schema.data;\n            }\n\n            if (typeof hasChildren === STRING) {\n                hasChildren = kendo.getter(hasChildren);\n            }\n\n            if (isFunction(hasChildren)) {\n                var hasChildrenObject = hasChildren.call(that, that);\n\n                if (hasChildrenObject && hasChildrenObject.length === 0) {\n                    that.hasChildren = false;\n                } else {\n                    that.hasChildren = !!hasChildrenObject;\n                }\n            }\n\n            that._childrenOptions = childrenOptions;\n\n            if (that.hasChildren) {\n                that._initChildren();\n            }\n\n            that._loaded = !!(value && value._loaded);\n        },\n\n        _initChildren: function() {\n            var that = this;\n            var children, transport, parameterMap;\n\n            if (!(that.children instanceof HierarchicalDataSource)) {\n                children = that.children = new HierarchicalDataSource(that._childrenOptions);\n\n                transport = children.transport;\n                parameterMap = transport.parameterMap;\n\n                transport.parameterMap = function(data, type) {\n                    data[that.idField || \"id\"] = that.id;\n\n                    if (parameterMap) {\n                        data = parameterMap.call(that, data, type);\n                    }\n\n                    return data;\n                };\n\n                children.parent = function() {\n                    return that;\n                };\n\n                children.bind(CHANGE, function(e) {\n                    e.node = e.node || that;\n                    that.trigger(CHANGE, e);\n                });\n\n                children.bind(ERROR, function(e) {\n                    var collection = that.parent();\n\n                    if (collection) {\n                        e.node = e.node || that;\n                        collection.trigger(ERROR, e);\n                    }\n                });\n\n                children.bind(ITEMSLOADED, function(e) {\n                    var collection = that.parent();\n\n                    if (collection) {\n                        collection.trigger(ITEMSLOADED, e);\n                    }\n                });\n\n                that._updateChildrenField();\n            }\n        },\n\n        append: function(model) {\n            this._initChildren();\n            this.loaded(true);\n            this.children.add(model);\n        },\n\n        hasChildren: false,\n\n        level: function() {\n            var parentNode = this.parentNode(),\n                level = 0;\n\n            while (parentNode && parentNode.parentNode) {\n                level++;\n                parentNode = parentNode.parentNode ? parentNode.parentNode() : null;\n            }\n\n            return level;\n        },\n\n        _updateChildrenField: function() {\n            var fieldName = this._childrenOptions.schema.data;\n\n            this[fieldName || \"items\"] = this.children.data();\n        },\n\n        _childrenLoaded: function() {\n            this._loaded = true;\n\n            this._updateChildrenField();\n        },\n\n        load: function() {\n            var options = {};\n            var method = \"_query\";\n            var children, promise;\n\n            if (this.hasChildren) {\n                this._initChildren();\n\n                children = this.children;\n\n                options[this.idField || \"id\"] = this.id;\n\n                if (!this._loaded) {\n                    children._data = undefined$1;\n                    method = \"read\";\n                }\n\n                children.one(CHANGE, this._childrenLoaded.bind(this));\n\n                if (this._matchFilter) {\n                    options.filter = { field: '_matchFilter', operator: 'eq', value: true };\n                }\n\n                promise = children[method](options);\n                if (!this._loaded) {\n                    this.trigger(ITEMLOAD, { promise: promise, node: this });\n                }\n            } else {\n                this.loaded(true);\n            }\n\n            return promise || $.Deferred().resolve().promise();\n        },\n\n        parentNode: function() {\n            var array = this.parent();\n\n            return array.parent();\n        },\n\n        loaded: function(value) {\n            if (value !== undefined$1) {\n                this._loaded = value;\n            } else {\n                return this._loaded;\n            }\n        },\n\n        shouldSerialize: function(field) {\n            return Model.fn.shouldSerialize.call(this, field) &&\n                    field !== \"children\" &&\n                    field !== \"_loaded\" &&\n                    field !== \"hasChildren\" &&\n                    field !== \"_childrenOptions\";\n        }\n    });\n\n    function dataMethod(name) {\n        return function() {\n            var data = this._data,\n                result = DataSource.fn[name].apply(this, slice.call(arguments));\n\n            if (this._data != data) {\n                this._attachBubbleHandlers();\n            }\n\n            return result;\n        };\n    }\n\n    var HierarchicalDataSource = DataSource.extend({\n        init: function(options) {\n            var node = Node.define({\n                children: options\n            });\n\n            if (options.filter && !options.serverFiltering) {\n                this._hierarchicalFilter = options.filter;\n                options.filter = null;\n            }\n\n            DataSource.fn.init.call(this, extend(true, {}, { schema: { modelBase: node, model: node } }, options));\n\n            this._attachBubbleHandlers();\n        },\n\n        _attachBubbleHandlers: function() {\n            var that = this;\n\n            that._data.bind(ERROR, function(e) {\n                that.trigger(ERROR, e);\n            });\n\n            that._data.bind(ITEMSLOADED, function(e) {\n                that.trigger(ITEMSLOADED, e);\n            });\n        },\n\n        loading: function() {\n            if (this._data) {\n                return this._data.loading() || this._childrenLoading();\n            }\n            return false;\n        },\n\n        _childrenLoading: function() {\n            var isLoading = false;\n            this._data.forEach(function(node) {\n                if (node.hasChildren && node.children.loading()) {\n                    isLoading = true;\n                }\n            });\n            return isLoading;\n        },\n\n        read: function(data) {\n            var result = DataSource.fn.read.call(this, data);\n\n            if (this._hierarchicalFilter) {\n                if (this._data && this._data.length > 0) {\n                    this.filter(this._hierarchicalFilter);\n                } else {\n                    this.options.filter = this._hierarchicalFilter;\n                    this._filter = normalizeFilter(this.options.filter);\n                    this._hierarchicalFilter = null;\n                }\n            }\n\n            return result;\n        },\n\n        remove: function(node) {\n            var parentNode = node.parentNode(),\n                dataSource = this,\n                result;\n\n            if (parentNode && parentNode._initChildren) {\n                dataSource = parentNode.children;\n            }\n\n            result = DataSource.fn.remove.call(dataSource, node);\n\n            if (parentNode && !dataSource.data().length) {\n                parentNode.hasChildren = false;\n            }\n\n            return result;\n        },\n\n        success: dataMethod(\"success\"),\n\n        data: dataMethod(\"data\"),\n\n        insert: function(index, model) {\n            var parentNode = this.parent();\n\n            if (parentNode && parentNode._initChildren) {\n                parentNode.hasChildren = true;\n                parentNode._initChildren();\n            }\n\n            return DataSource.fn.insert.call(this, index, model);\n        },\n\n        filter: function(val) {\n            if (val === undefined$1) {\n                 return this._filter;\n            }\n\n            if (!this.options.serverFiltering && this._markHierarchicalQuery(val)) {\n                val = { logic: \"or\", filters: [val, { field: '_matchFilter', operator: 'equals', value: true }] };\n            }\n\n            this.trigger(\"reset\");\n            this._query({ filter: val, page: 1 });\n        },\n\n        _markHierarchicalQuery: function(expressions) {\n            var compiled;\n            var accentFoldingFiltering = this.options.accentFoldingFiltering;\n\n            expressions = accentFoldingFiltering ? $.extend({}, normalizeFilter(expressions), { accentFoldingFiltering: accentFoldingFiltering }) : normalizeFilter(expressions);\n\n            if (!expressions || expressions.filters.length === 0) {\n                this._updateHierarchicalFilter(function() {return true;});\n                return false;\n            }\n\n            compiled = Query.filterExpr(expressions, { noEval: true });\n\n            this._updateHierarchicalFilter(compiled);\n            return true;\n        },\n\n         _updateHierarchicalFilter: function(filter) {\n            var current;\n            var data = this._data;\n            var result = false;\n\n            for (var idx = 0; idx < data.length; idx++) {\n                 current = data[idx];\n\n                 if (current.hasChildren) {\n                     current._matchFilter = current.children._updateHierarchicalFilter(filter);\n                    if (!current._matchFilter) {\n                        current._matchFilter = filter(current);\n                    }\n                } else {\n                    current._matchFilter = filter(current);\n                }\n\n                if (current._matchFilter) {\n                    result = true;\n                }\n            }\n            return result;\n        },\n\n        _find: function(method, value) {\n            var idx, length, node, children;\n            var data = this._data;\n\n            if (!data) {\n                return;\n            }\n\n            node = DataSource.fn[method].call(this, value);\n\n            if (node) {\n                return node;\n            }\n\n            data = this._flatData(this._data);\n\n            for (idx = 0, length = data.length; idx < length; idx++) {\n                children = data[idx].children;\n\n                if (!(children instanceof HierarchicalDataSource)) {\n                    continue;\n                }\n\n                node = children[method](value);\n\n                if (node) {\n                    return node;\n                }\n            }\n        },\n\n        get: function(id) {\n            return this._find(\"get\", id);\n        },\n\n        getByUid: function(uid) {\n            return this._find(\"getByUid\", uid);\n        }\n    });\n\n    function inferList(list, fields) {\n        var items = $(list).children(),\n            idx,\n            length,\n            data = [],\n            record,\n            textField = fields[0].field,\n            urlField = fields[1] && fields[1].field,\n            spriteCssClassField = fields[2] && fields[2].field,\n            imageUrlField = fields[3] && fields[3].field,\n            item,\n            id,\n            textChild,\n            className,\n            children;\n\n        function elements(collection, tagName) {\n            return collection.filter(tagName).add(collection.find(tagName));\n        }\n\n        for (idx = 0, length = items.length; idx < length; idx++) {\n            record = { _loaded: true };\n            item = items.eq(idx);\n\n            textChild = item[0].firstChild;\n            children = item.children();\n            list = children.filter(\"ul\");\n            children = children.filter(\":not(ul)\");\n\n            id = item.attr(\"data-id\");\n\n            if (id) {\n                record.id = id;\n            }\n\n            if (textChild) {\n                record[textField] = textChild.nodeType == 3 ? textChild.nodeValue : children.text();\n            }\n\n            if (urlField) {\n                record[urlField] = elements(children, \"a\").attr(\"href\");\n            }\n\n            if (imageUrlField) {\n                record[imageUrlField] = elements(children, \"img\").attr(\"src\");\n            }\n\n            if (spriteCssClassField) {\n                className = elements(children, \".k-sprite\").prop(\"className\");\n                record[spriteCssClassField] = className && kendo.trim(className.replace(\"k-sprite\", \"\"));\n            }\n\n            if (list.length) {\n                record.items = inferList(list.eq(0), fields);\n            }\n\n            if (item.attr(\"data-hasChildren\") == \"true\") {\n                record.hasChildren = true;\n            }\n\n            data.push(record);\n        }\n\n        return data;\n    }\n\n    HierarchicalDataSource.create = function(options) {\n        options = options && options.push ? { data: options } : options;\n\n        var dataSource = options || {},\n            data = dataSource.data,\n            fields = dataSource.fields,\n            list = dataSource.list;\n\n        if (data && data._dataSource) {\n            return data._dataSource;\n        }\n\n        if (!data && fields && !dataSource.transport) {\n            if (list) {\n                data = inferList(list, fields);\n            }\n        }\n\n        dataSource.data = data;\n\n        return dataSource instanceof HierarchicalDataSource ? dataSource : new HierarchicalDataSource(dataSource);\n    };\n\n    var Buffer = kendo.Observable.extend({\n        init: function(dataSource, viewSize, disablePrefetch) {\n            kendo.Observable.fn.init.call(this);\n\n            this._prefetching = false;\n            this.dataSource = dataSource;\n            this.prefetch = !disablePrefetch;\n\n            var buffer = this;\n\n            dataSource.bind(\"change\", function() {\n                buffer._change();\n            });\n\n            dataSource.bind(\"reset\", function() {\n                buffer._reset();\n            });\n\n            this._syncWithDataSource();\n\n            this.setViewSize(viewSize);\n        },\n\n        setViewSize: function(viewSize) {\n            this.viewSize = viewSize;\n            this._recalculate();\n        },\n\n        at: function(index) {\n            var pageSize = this.pageSize,\n                itemPresent = true;\n\n            if (index >= this.total()) {\n                this.trigger(\"endreached\", { index: index });\n                return null;\n            }\n\n            if (!this.useRanges) {\n               return this.dataSource.view()[index];\n            }\n            if (this.useRanges) {\n                // out of range request\n                if (index < this.dataOffset || index >= this.skip + pageSize) {\n                    itemPresent = this.range(Math.floor(index / pageSize) * pageSize);\n                }\n\n                // prefetch\n                if (index === this.prefetchThreshold) {\n                    this._prefetch();\n                }\n\n                // mid-range jump - prefetchThreshold and nextPageThreshold may be equal, do not change to else if\n                if (index === this.midPageThreshold) {\n                    this.range(this.nextMidRange, true);\n                }\n                // next range jump\n                else if (index === this.nextPageThreshold) {\n                    this.range(this.nextFullRange);\n                }\n                // pull-back\n                else if (index === this.pullBackThreshold) {\n                    if (this.offset === this.skip) { // from full range to mid range\n                        this.range(this.previousMidRange);\n                    } else { // from mid range to full range\n                        this.range(this.previousFullRange);\n                    }\n                }\n\n                if (itemPresent) {\n                    return this.dataSource.at(index - this.dataOffset);\n                } else {\n                    this.trigger(\"endreached\", { index: index });\n                    return null;\n                }\n            }\n        },\n\n        indexOf: function(item) {\n            return this.dataSource.data().indexOf(item) + this.dataOffset;\n        },\n\n        total: function() {\n            return parseInt(this.dataSource.total(), 10);\n        },\n\n        next: function() {\n            var buffer = this,\n                pageSize = buffer.pageSize,\n                offset = buffer.skip - buffer.viewSize + pageSize,\n                pageSkip = math.max(math.floor(offset / pageSize), 0) * pageSize;\n\n            this.offset = offset;\n            this.dataSource.prefetch(pageSkip, pageSize, function() {\n                buffer._goToRange(offset, true);\n            });\n        },\n\n        range: function(offset, nextRange) {\n            if (this.offset === offset) {\n                return true;\n            }\n\n            var buffer = this,\n                pageSize = this.pageSize,\n                pageSkip = math.max(math.floor(offset / pageSize), 0) * pageSize,\n                dataSource = this.dataSource;\n\n            if (nextRange) {\n                pageSkip += pageSize;\n            }\n\n            if (dataSource.inRange(offset, pageSize)) {\n                this.offset = offset;\n                this._recalculate();\n                this._goToRange(offset);\n                return true;\n            } else if (this.prefetch) {\n                dataSource.prefetch(pageSkip, pageSize, function() {\n                    buffer.offset = offset;\n                    buffer._recalculate();\n                    buffer._goToRange(offset, true);\n                });\n                return false;\n            }\n\n            return true;\n        },\n\n        syncDataSource: function() {\n            var offset = this.offset;\n            this.offset = null;\n            this.range(offset);\n        },\n\n        destroy: function() {\n            this.unbind();\n        },\n\n        _prefetch: function() {\n            var buffer = this,\n                pageSize = this.pageSize,\n                prefetchOffset = this.skip + pageSize,\n                dataSource = this.dataSource;\n\n            if (!dataSource.inRange(prefetchOffset, pageSize) && !this._prefetching && this.prefetch) {\n                this._prefetching = true;\n                this.trigger(\"prefetching\", { skip: prefetchOffset, take: pageSize });\n\n                dataSource.prefetch(prefetchOffset, pageSize, function() {\n                    buffer._prefetching = false;\n                    buffer.trigger(\"prefetched\", { skip: prefetchOffset, take: pageSize });\n                });\n            }\n        },\n\n        _goToRange: function(offset, expanding) {\n            if (this.offset !== offset) {\n                return;\n            }\n\n            this.dataOffset = offset;\n            this._expanding = expanding;\n            this.dataSource.range(offset, this.pageSize);\n            this.dataSource.enableRequestsInProgress();\n        },\n\n        _reset: function() {\n            this._syncPending = true;\n        },\n\n        _change: function() {\n            var dataSource = this.dataSource;\n\n            this.length = this.useRanges ? dataSource.lastRange().end : dataSource.view().length;\n\n            if (this._syncPending) {\n                this._syncWithDataSource();\n                this._recalculate();\n                this._syncPending = false;\n                this.trigger(\"reset\", { offset: this.offset });\n            }\n\n            this.trigger(\"resize\");\n\n            if (this._expanding) {\n                this.trigger(\"expand\");\n            }\n\n            delete this._expanding;\n        },\n\n        _syncWithDataSource: function() {\n            var dataSource = this.dataSource;\n\n            this._firstItemUid = dataSource.firstItemUid();\n            this.dataOffset = this.offset = dataSource.skip() || 0;\n            this.pageSize = dataSource.pageSize();\n            this.useRanges = dataSource.options.serverPaging;\n        },\n\n        _recalculate: function() {\n            var pageSize = this.pageSize,\n                offset = this.offset,\n                viewSize = this.viewSize,\n                skip = Math.ceil(offset / pageSize) * pageSize;\n\n            this.skip = skip;\n            this.midPageThreshold = skip + pageSize - 1;\n            this.nextPageThreshold = skip + viewSize - 1;\n            this.prefetchThreshold = skip + Math.floor(pageSize / 3 * 2);\n            this.pullBackThreshold = this.offset - 1;\n\n            this.nextMidRange = skip + pageSize - viewSize;\n            this.nextFullRange = skip;\n            this.previousMidRange = offset - viewSize;\n            this.previousFullRange = skip - pageSize;\n        }\n    });\n\n    var BatchBuffer = kendo.Observable.extend({\n        init: function(dataSource, batchSize) {\n            var batchBuffer = this;\n\n            kendo.Observable.fn.init.call(batchBuffer);\n\n            this.dataSource = dataSource;\n            this.batchSize = batchSize;\n            this._total = 0;\n\n            this.buffer = new Buffer(dataSource, batchSize * 3);\n\n            this.buffer.bind({\n                \"endreached\": function(e) {\n                    batchBuffer.trigger(\"endreached\", { index: e.index });\n                },\n                \"prefetching\": function(e) {\n                    batchBuffer.trigger(\"prefetching\", { skip: e.skip, take: e.take });\n                },\n                \"prefetched\": function(e) {\n                    batchBuffer.trigger(\"prefetched\", { skip: e.skip, take: e.take });\n                },\n                \"reset\": function() {\n                    batchBuffer._total = 0;\n                    batchBuffer.trigger(\"reset\");\n                },\n                \"resize\": function() {\n                    batchBuffer._total = Math.ceil(this.length / batchBuffer.batchSize);\n                    batchBuffer.trigger(\"resize\", { total: batchBuffer.total(), offset: this.offset });\n                }\n            });\n        },\n\n        syncDataSource: function() {\n            this.buffer.syncDataSource();\n        },\n\n        at: function(index) {\n            var buffer = this.buffer,\n                skip = index * this.batchSize,\n                take = this.batchSize,\n                view = [],\n                item;\n\n            if (buffer.offset > skip) {\n                buffer.at(buffer.offset - 1);\n            }\n\n            for (var i = 0; i < take; i++) {\n                item = buffer.at(skip + i);\n\n                if (item === null) {\n                    break;\n                }\n\n                view.push(item);\n            }\n\n            return view;\n        },\n\n        total: function() {\n            return this._total;\n        },\n\n        destroy: function() {\n            this.buffer.destroy();\n            this.unbind();\n        }\n    });\n\n    extend(true, kendo.data, {\n        readers: {\n            json: DataReader\n        },\n        Query: Query,\n        DataSource: DataSource,\n        HierarchicalDataSource: HierarchicalDataSource,\n        Node: Node,\n        Comparer: Comparer,\n        ObservableObject: ObservableObject,\n        ObservableArray: ObservableArray,\n        LazyObservableArray: LazyObservableArray,\n        LocalTransport: LocalTransport,\n        RemoteTransport: RemoteTransport,\n        Cache: Cache,\n        DataReader: DataReader,\n        Model: Model,\n        Buffer: Buffer,\n        BatchBuffer: BatchBuffer\n    });\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}