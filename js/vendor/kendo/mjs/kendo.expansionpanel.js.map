{"version":3,"file":"kendo.expansionpanel.js","names":["__meta__","id","name","category","description","depends","$","undefined$1","kendo","window","Widget","ui","keys","extend","encode","htmlEncode","NS","EXPAND","COLLAPSE","COLLAPSE_ICON_SELECTOR","COMPLETE","STATEDISABLED","ARIA_DISABLED","ARIA_EXPANDED","ARIA_HIDDEN","EXPANDED","D_NONE","FOCUSED","headerTemplate","title","subTitle","iconClass","useBareTemplate","ns","elementId","includes","icon","ExpansionPanel","init","element","options","that","this","headerAttribute","attr","fn","call","_wrapper","_animations","expanded","addClass","wrapper","on","_click","bind","_focus","_blur","_keydown","toggle","notify","events","disabled","animation","expand","effects","duration","collapse","height","toggleable","expandIconClass","collapseIconClass","headerClass","wrapperClass","header","DOMElement","guid","wrap","parent","template","prepend","_indicator","find","INDICATOR","style","cssText","width","contentWrapper","toggleClass","className","css","hide","e","is","stopPropagation","trigger","item","preventDefault","animate","animationSettings","hasCollapseAnimation","reverse","complete","_completeHandler","removeClass","kendoStop","kendoAnimate","key","keyCode","ENTER","SPACEBAR","target","destroy","off","enable","enabled","plugin","jQuery","kendo$1"],"sources":["kendo.expansionpanel.js"],"mappings":"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","sourcesContent":["import './kendo.core.js';\nimport './kendo.icons.js';\n\nvar __meta__ = {\n    id: \"expansionpanel\",\n    name: \"ExpansionPanel\",\n    category: \"web\",\n    description: \"The ExpansionPanel provides an expandable details-summary view\",\n    depends: [\"core\", \"icons\"]\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        Widget = kendo.ui.Widget,\n        ui = kendo.ui,\n        keys = kendo.keys,\n        extend = $.extend,\n        encode = kendo.htmlEncode,\n        NS = \".kendoExpansionPanel\",\n        EXPAND = \"expand\",\n        COLLAPSE = \"collapse\",\n        COLLAPSE_ICON_SELECTOR = \"[class*='-i-chevron-up']\",\n        COMPLETE = \"complete\",\n        STATEDISABLED = \"k-disabled\",\n        ARIA_DISABLED = \"aria-disabled\",\n        ARIA_EXPANDED = \"aria-expanded\",\n        ARIA_HIDDEN = \"aria-hidden\",\n        EXPANDED = \"k-expanded\",\n        EXPANDER_CONTENT = \"k-expander-content\",\n        EXPANDER_CONTENT_WRAPPER = \"k-expander-content-wrapper\",\n        D_NONE = \"k-d-none\",\n        INDICATOR = \".k-expander-indicator\",\n        FOCUSED = \"k-focus\",\n        CLICK = \"click\",\n        KEYDOWN = \"keydown\",\n        HEIGHT = \"height\",\n\n        headerTemplate = ({ title, subTitle, iconClass, useBareTemplate, ns, elementId }) =>\n            `<div ${!useBareTemplate ? 'class=\"k-expander-header\"' : ''} data-${ns}expander-header role=\"button\" tabindex=\"0\" aria-controls=\"${encode(elementId)}\">` +\n                (!useBareTemplate ? `<div class=\"k-expander-title\">${encode(title)}</div>` : title) +\n                '<span class=\"k-expander-spacer\"></span>' +\n                (!useBareTemplate ? `<div class=\"k-expander-sub-title\">${encode(subTitle)}</div>` : '') +\n                `<span class=\"k-expander-indicator\">` +\n                    (iconClass && iconClass.includes(\"k-icon\") ? `<span class=\"${encode(iconClass)}\"></span>` : kendo.ui.icon({ icon: iconClass })) +\n                `</span>` +\n            '</div>';\n\n    var ExpansionPanel = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n            var headerAttribute = kendo.attr(\"expander-header\");\n\n            Widget.fn.init.call(that, element, options);\n            options = $.extend(true, {}, options);\n\n            that._wrapper();\n            that._animations(options);\n\n            that.element.attr(ARIA_HIDDEN, !options.expanded);\n\n            if (!that.options.useBareTemplate) {\n                that.element.addClass(EXPANDER_CONTENT);\n            }\n\n            that.wrapper\n                .on(CLICK + NS, '[' + headerAttribute + ']', that._click.bind(that))\n                .on(\"focusin\" + NS, that._focus.bind(that))\n                .on(\"focusout\" + NS, that._blur.bind(that))\n                .on(KEYDOWN + NS, that._keydown.bind(that));\n\n            that.toggle(that.options.expanded, false);\n\n            kendo.notify(that);\n        },\n\n        events: [\n            EXPAND,\n            COLLAPSE,\n            COMPLETE\n        ],\n\n        options: {\n            name: 'ExpansionPanel',\n            disabled: false,\n            expanded: false,\n            animation: {\n                expand: {\n                    effects: \"expand:vertical\",\n                    duration: 200\n                },\n                collapse: { // if collapse animation effects are defined, they will be used instead of expand.reverse\n                    duration: 200\n                }\n            },\n            height: null,\n            toggleable: true,\n            expandIconClass: \"chevron-down\",\n            collapseIconClass: \"chevron-up\",\n            title: '',\n            subTitle: '',\n            headerClass: null,\n            wrapperClass: null,\n            useBareTemplate: false\n        },\n\n        _wrapper: function() {\n            var that = this;\n            var element = that.element;\n            var DOMElement = element[0];\n            var wrapper;\n            var header;\n            var elementId = element.attr(\"id\");\n\n            if (!elementId) {\n                elementId = kendo.guid();\n                element.attr(\"id\", elementId);\n            }\n\n            wrapper = element.wrap(\"<div class='k-expander\" + (that.options.expanded ? \" \" + EXPANDED : \"\") + \"'></div>\").parent();\n            header = kendo.template(headerTemplate)({\n                title: that.options.title,\n                subTitle: that.options.subTitle,\n                iconClass: that.options.expanded ? that.options.expandIconClass : that.options.collapseIconClass,\n                useBareTemplate: that.options.useBareTemplate,\n                ns: kendo.ns,\n                elementId: elementId + \"_wrapper\"\n            });\n            that.header = $(header);\n            wrapper.prepend(that.header);\n            that._indicator = wrapper.find(INDICATOR + \" span\");\n            wrapper[0].style.cssText = DOMElement.style.cssText;\n            DOMElement.style.width = \"100%\";\n\n            that.wrapper = wrapper.addClass(that.options.disabled ? STATEDISABLED : '');\n            that.contentWrapper = that.element\n                .wrap('<div id=\"' + elementId + '_wrapper\"></div>')\n                .parent()\n                .addClass(EXPANDER_CONTENT_WRAPPER)\n                .toggleClass(D_NONE, !that.options.expanded);\n\n            that.header.attr(ARIA_DISABLED, that.options.disabled)\n                        .attr(ARIA_EXPANDED, that.options.expanded);\n\n            if (!that.options.useBareTemplate) {\n                wrapper.addClass(DOMElement.className);\n            }\n\n            if (that.options.height) {\n                that.wrapper.css(HEIGHT, that.options.height);\n            }\n\n            if (that.options.headerClass) {\n                that.header.addClass(that.options.headerClass);\n            }\n\n            if (that.options.wrapperClass) {\n                that.header.addClass(that.options.wrapperClass);\n            }\n        },\n\n        _animations: function(options) {\n            if (options && (\"animation\" in options) && !options.animation) {\n                options.animation = { expand: { effects: {} }, collapse: { hide: true, effects: {} } };\n            }\n        },\n\n        _click: function(e) {\n            var that = this;\n            var expanded = that._indicator.is(COLLAPSE_ICON_SELECTOR);\n            var element = that.element;\n\n            e.stopPropagation();\n\n            if (!that.options.toggleable) {\n                e.preventDefault();\n                return;\n            }\n\n            if (!that.trigger( expanded ? COLLAPSE : EXPAND, { item: element[0] })) {\n                that.toggle();\n            }\n        },\n\n        toggle: function(expand, animate) {\n            var that = this,\n                animationSettings = that.options.animation,\n                animation = animationSettings.expand,\n                hasCollapseAnimation = animationSettings.collapse && \"effects\" in animationSettings.collapse,\n                collapse = extend({}, animationSettings.expand, animationSettings.collapse),\n                element = that.element,\n                wrapper = that.wrapper;\n\n            if (expand !== undefined$1) {\n                if (animate === false) {\n                    collapse = null;\n                }\n            } else {\n                expand = !that._indicator.is(COLLAPSE_ICON_SELECTOR);\n            }\n\n            if (!hasCollapseAnimation) {\n                collapse = extend(collapse, { reverse: true });\n            }\n\n            if (!expand) {\n                animation = extend(collapse, { hide: true });\n\n                animation.complete = that._completeHandler.bind(that);\n            } else {\n                animation = extend( { complete: that._completeHandler.bind(that) }, animation );\n            }\n\n            if (expand) {\n                if (that.options.collapseIconClass.includes(\"k-icon\")) {\n                    that._indicator.removeClass(this.options.expandIconClass);\n                    that._indicator.addClass(this.options.collapseIconClass);\n                } else {\n                    kendo.ui.icon(that._indicator, { icon: this.options.collapseIconClass });\n                }\n                wrapper.addClass(EXPANDED);\n            } else {\n                if (that.options.expandIconClass.includes(\"k-icon\")) {\n                    that._indicator.removeClass(this.options.collapseIconClass);\n                    that._indicator.addClass(this.options.expandIconClass);\n                } else {\n                    kendo.ui.icon(that._indicator, { icon: this.options.expandIconClass });\n                }\n                wrapper.removeClass(EXPANDED);\n            }\n\n            that.contentWrapper.toggleClass(D_NONE, !expand);\n            element.attr(ARIA_HIDDEN, !expand);\n            that.header.attr(ARIA_EXPANDED, expand);\n\n            that.contentWrapper\n                .kendoStop(true, true)\n                .kendoAnimate(animation);\n        },\n\n        _completeHandler: function() {\n            this.trigger(COMPLETE);\n        },\n\n        _keydown: function(e) {\n            var that = this,\n                key = e.keyCode;\n\n            if ((key == keys.ENTER || key == keys.SPACEBAR) && $(e.target).is(\"[data-expander-header]\")) {\n                that._click(e);\n                e.preventDefault();\n            }\n        },\n\n        destroy: function() {\n            var that = this;\n\n            that.wrapper.off(NS);\n            Widget.fn.destroy.call(that);\n        },\n\n        enable: function(enabled) {\n            this.wrapper.toggleClass(STATEDISABLED, !enabled);\n            this.header.attr(ARIA_DISABLED, !enabled);\n        },\n\n        _blur: function() {\n            var that = this;\n\n            if (that.header) {\n                that.wrapper.removeClass(FOCUSED);\n            }\n        },\n\n        _focus: function() {\n            var that = this;\n\n            if (that.wrapper) {\n                that.wrapper.addClass(FOCUSED);\n            }\n        }\n    });\n    ui.plugin(ExpansionPanel);\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}