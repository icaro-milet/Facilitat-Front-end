{"version":3,"file":"kendo.filebrowser.js","names":["__meta__","id","name","category","description","hidden","depends","$","undefined$1","kendo","window","Widget","ui","isPlainObject","extend","encode","htmlEncode","placeholderSupported","support","placeholder","isFunction","trimSlashesRegExp","CHANGE","APPLY","ERROR","CLICK","NS","SEARCHBOXNS","NAMEFIELD","SIZEFIELD","TYPEFIELD","DEFAULTSORTORDER","field","dir","EMPTYTILE","template","text","TOOLBARTMPL","showCreate","showUpload","showDelete","messages","icon","iconClass","uploadFile","UPLOADTEMPLATE","orderBy","concatPaths","path","match","data","schemas","filebrowser","items","model","fields","size","type","transports","RemoteTransport","init","options","fn","call","this","_call","read","create","destroy","update","FileBrowser","element","that","addClass","on","_deleteClick","bind","_addClick","_directoryKeyDown","_directoryBlur","_dataSource","refresh","orderByName","orderBySize","directoryNotFound","emptyFolder","deleteFile","invalidFileType","overwriteFile","dropFilesHere","search","transport","fileTypes","events","dataSource","unbind","_errorHandler","add","list","toolbar","off","value","selected","_selectedItem","fileUrl","get","replace","format","encodeURIComponent","listView","select","length","getByUid","attr","_toolbar","arrangeBy","uploadUrl","appendTo","find","kendoUpload","multiple","localization","async","saveUrl","autoUpload","upload","_fileUpload","error","e","_error","xhr","XMLHttpRequest","status","end","kendoDropDownList","dataTextField","dataValueField","change","searchBox","kendoSearchBox","label","_attachDropzoneEvents","onDragEnter","onDragLeave","hideInterval","lastDrag","document","documentElement","_dropEnter","_dropLeave","Date","setInterval","clearInterval","_scrollHandler","_positionDropzone","_removeDropzone","offset","css","width","clientWidth","height","clientHeight","lineHeight","removeClass","top","left","item","message","_showMessage","remove","createDirectory","_getFieldName","descriptor","from","fieldName","reader","file","filterRegExp","RegExp","split","join","fileName","files","fileSize","fileNameField","sizeField","test","_createFile","one","_insertFileToList","_override","set","response","pushUpdate","_tiles","filter","preventDefault","_findFile","idx","result","toLowerCase","index","view","i","insert","lastDirectoryIdx","typeField","nameField","_nameDirectory","uid","edit","scrollTop","offsetHeight","setTimeout","_nameExists","keyCode","currentTarget","blur","save","candidate","directoryNames","indexOf","push","inArray","sort","operator","_content","_dblClick","ListView","layout","flex","direction","wrap","_itemTmpl","editTemplate","_editTmpl","selectable","autoBind","dataBinding","parent","action","progress","content","wrapper","dataBound","append","_listViewChange","li","hasClass","folder","breadcrumbs","trigger","typeSortOrder","nameSortOrder","schema","DataSource","_navigation","navigation","first","kendoBreadcrumb","editable","gap","statusText","hasChanges","cancelChanges","suffix","Math","round","sizeFormatter","_path","SearchBox","_wrapper","_keydown","_updateValue","_click","_focus","_blur","val","_toggleLabel","toggle","hide","parents","style","insertBefore","plugin","jQuery","kendo$1"],"sources":["kendo.filebrowser.js"],"mappings":"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","sourcesContent":["import './kendo.listview.js';\nimport './kendo.dropdownlist.js';\nimport './kendo.upload.js';\nimport './kendo.breadcrumb.js';\nimport './kendo.icons.js';\n\nvar __meta__ = {\n    id: \"filebrowser\",\n    name: \"FileBrowser\",\n    category: \"web\",\n    description: \"\",\n    hidden: true,\n    depends: [ \"selectable\", \"listview\", \"dropdownlist\", \"upload\", \"breadcrumb\", \"icons\" ]\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        Widget = kendo.ui.Widget,\n        isPlainObject = $.isPlainObject,\n        extend = $.extend,\n        encode = kendo.htmlEncode,\n        placeholderSupported = kendo.support.placeholder,\n        isFunction = kendo.isFunction,\n        trimSlashesRegExp = /(^\\/|\\/$)/g,\n        CHANGE = \"change\",\n        APPLY = \"apply\",\n        ERROR = \"error\",\n        CLICK = \"click\",\n        NS = \".kendoFileBrowser\",\n        SEARCHBOXNS = \".kendoSearchBox\",\n        NAMEFIELD = \"name\",\n        SIZEFIELD = \"size\",\n        TYPEFIELD = \"type\",\n        DEFAULTSORTORDER = { field: TYPEFIELD, dir: \"asc\" },\n        EMPTYTILE = kendo.template(({ text }) => `<div class=\"k-listview-item k-listview-item-empty\"><span class=\"k-file-preview\"><span class=\"k-file-icon k-icon k-i-none\"></span></span><span class=\"k-file-name\">${kendo.htmlEncode(text)}</span></div>`),\n        UPLOADTEMPLATE = ({ messages }) =>\n            '<div class=\"k-upload k-upload-button-wrap\">' +\n                '<div class=\"k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-upload-button\">' +\n                    kendo.ui.icon({ icon: \"plus\", iconClass: \"k-button-icon\" }) +\n                    `<span class=\"k-button-text\">${kendo.htmlEncode(messages.uploadFile)}</span>` +\n                '</div>' +\n                '<input type=\"file\" name=\"file\" />' +\n            '</div>',\n        TOOLBARTMPL = ({ showCreate, showUpload, showDelete, messages }) =>\n            '<div class=\"k-widget k-filebrowser-toolbar k-toolbar k-toolbar-md k-floatwrap\">' +\n                `${showCreate ? '<button type=\"button\" class=\"k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-icon-button\">' + kendo.ui.icon({ icon: \"folder-add\", iconClass: \"k-button-icon\" }) + '</button>' : ''}` +\n                `${showUpload ? UPLOADTEMPLATE({ messages }) : ''}` +\n                `${showDelete ? '<button type=\"button\" class=\"k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-icon-button k-disabled\">' + kendo.ui.icon({ icon: \"x\", iconClass: \"k-button-icon\" }) + '</button>' : ''}` +\n                '<div class=\"k-tiles-arrange\">' +\n                    `<label>${kendo.htmlEncode(messages.orderBy)}: <select></select></label>` +\n                '</div>' +\n                '<span class=\"k-toolbar-spacer\"></span>' +\n                '<input data-role=\"searchbox\" />' +\n            '</div>';\n\n    extend(true, kendo.data, {\n        schemas: {\n            \"filebrowser\": {\n                data: function(data) {\n                    return data.items || data || [];\n                },\n                model: {\n                    id: \"name\",\n                    fields: {\n                        name: \"name\",\n                        size: \"size\",\n                        type: \"type\"\n                    }\n                }\n            }\n        }\n    });\n\n    extend(true, kendo.data, {\n        transports: {\n            \"filebrowser\": kendo.data.RemoteTransport.extend({\n                init: function(options) {\n                    kendo.data.RemoteTransport.fn.init.call(this, $.extend(true, {}, this.options, options));\n                },\n                _call: function(type, options) {\n                    options.data = $.extend({}, options.data, { path: this.options.path() });\n\n                    if (isFunction(this.options[type])) {\n                        this.options[type].call(this, options);\n                    } else {\n                        kendo.data.RemoteTransport.fn[type].call(this, options);\n                    }\n                },\n                read: function(options) {\n                    this._call(\"read\", options);\n                },\n                create: function(options) {\n                    this._call(\"create\", options);\n                },\n                destroy: function(options) {\n                    this._call(\"destroy\", options);\n                },\n                update: function() {\n                    //updates are handled by the upload\n                },\n                options: {\n                    read: {\n                        type: \"POST\"\n                    },\n                    update: {\n                        type: \"POST\"\n                    },\n                    create: {\n                        type: \"POST\"\n                    },\n                    destroy: {\n                        type: \"POST\"\n                    }\n                }\n            })\n        }\n    });\n\n    function bindDragEventWrappers(element, onDragEnter, onDragLeave) {\n        var hideInterval, lastDrag;\n\n        element\n            .on(\"dragenter\" + NS, function() {\n                onDragEnter();\n                lastDrag = new Date();\n\n                if (!hideInterval) {\n                    hideInterval = setInterval(function() {\n                        var sinceLastDrag = new Date() - lastDrag;\n                        if (sinceLastDrag > 100) {\n                            onDragLeave();\n\n                            clearInterval(hideInterval);\n                            hideInterval = null;\n                        }\n                    }, 100);\n                }\n            })\n            .on(\"dragover\" + NS, function() {\n                lastDrag = new Date();\n            });\n    }\n\n    function concatPaths(path, name) {\n        if (path === undefined$1 || !path.match(/\\/$/)) {\n            path = (path || \"\") + \"/\";\n        }\n        return path + name;\n    }\n\n    function sizeFormatter(value) {\n        if (!value) {\n            return \"\";\n        }\n\n        var suffix = \" bytes\";\n\n        if (value >= 1073741824) {\n            suffix = \" GB\";\n            value /= 1073741824;\n        } else if (value >= 1048576) {\n            suffix = \" MB\";\n            value /= 1048576;\n        } else if (value >= 1024) {\n            suffix = \" KB\";\n            value /= 1024;\n        }\n\n        return Math.round(value * 100) / 100 + suffix;\n    }\n\n    function fieldName(fields, name) {\n        var descriptor = fields[name];\n\n        if (isPlainObject(descriptor)) {\n            return descriptor.from || descriptor.field || name;\n        }\n        return descriptor;\n    }\n\n    var FileBrowser = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            options = options || {};\n\n            Widget.fn.init.call(that, element, options);\n\n            that.element.addClass(\"k-filebrowser\");\n\n            that.element\n                .on(CLICK + NS, \".k-filebrowser-toolbar button:not(.k-disabled):has(.k-i-x,.k-svg-i-x)\", that._deleteClick.bind(that))\n                .on(CLICK + NS, \".k-filebrowser-toolbar button:not(.k-disabled):has(.k-i-folder-add,.k-svg-i-folder-add)\", that._addClick.bind(that))\n                .on(\"keydown\" + NS, \".k-listview-item.k-selected input\", that._directoryKeyDown.bind(that))\n                .on(\"blur\" + NS, \".k-listview-item.k-selected input\", that._directoryBlur.bind(that));\n\n            that._dataSource();\n\n            that.refresh();\n\n            that.path(that.options.path);\n        },\n\n        options: {\n            name: \"FileBrowser\",\n            messages: {\n                uploadFile: \"Upload\",\n                orderBy: \"Arrange by\",\n                orderByName: \"Name\",\n                orderBySize: \"Size\",\n                directoryNotFound: \"A directory with this name was not found.\",\n                emptyFolder: \"Empty Folder\",\n                deleteFile: 'Are you sure you want to delete \"{0}\"?',\n                invalidFileType: \"The selected file \\\"{0}\\\" is not valid. Supported file types are {1}.\",\n                overwriteFile: \"A file with name \\\"{0}\\\" already exists in the current directory. Do you want to overwrite it?\",\n                dropFilesHere: \"drop file here to upload\",\n                search: \"Search\"\n            },\n            transport: {},\n            path: \"/\",\n            fileTypes: \"*.*\"\n        },\n\n        events: [ERROR, CHANGE, APPLY],\n\n        destroy: function() {\n            var that = this;\n\n            Widget.fn.destroy.call(that);\n\n            that.dataSource\n                .unbind(ERROR, that._errorHandler);\n\n            that.element\n                .add(that.list)\n                .add(that.toolbar)\n                .off(NS);\n\n            kendo.destroy(that.element);\n        },\n\n        value: function() {\n            var that = this,\n                selected = that._selectedItem(),\n                path,\n                fileUrl = that.options.transport.fileUrl;\n\n            if (selected && selected.get(TYPEFIELD) === \"f\") {\n                path = concatPaths(that.path(), selected.get(NAMEFIELD)).replace(trimSlashesRegExp, \"\");\n                if (fileUrl) {\n                    path = isFunction(fileUrl) ? fileUrl(path) : kendo.format(fileUrl, encodeURIComponent(path));\n                }\n                return path;\n            }\n        },\n\n        _selectedItem: function() {\n            var listView = this.listView,\n                selected = listView.select();\n\n            if (selected.length) {\n                return this.dataSource.getByUid(selected.attr(kendo.attr(\"uid\")));\n            }\n        },\n\n        _toolbar: function() {\n            var that = this,\n                template = kendo.template(TOOLBARTMPL),\n                messages = that.options.messages,\n                arrangeBy = [\n                    { text: messages.orderByName, value: \"name\" },\n                    { text: messages.orderBySize, value: \"size\" }\n                ];\n\n            that.toolbar = $(template({\n                    messages: messages,\n                    showUpload: that.options.transport.uploadUrl,\n                    showCreate: that.options.transport.create,\n                    showDelete: that.options.transport.destroy\n                }))\n                .appendTo(that.element)\n                .find(\".k-upload input\")\n                .kendoUpload({\n                    multiple: false,\n                    localization: {\n                        dropFilesHere: messages.dropFilesHere\n                    },\n                    async: {\n                        saveUrl: that.options.transport.uploadUrl,\n                        autoUpload: true\n                    },\n                    upload: that._fileUpload.bind(that),\n                    error: function(e) {\n                        that._error({ xhr: e.XMLHttpRequest, status: \"error\" });\n                    }\n                }).end();\n\n            that.upload = that.toolbar\n                .find(\".k-upload input\")\n                .data(\"kendoUpload\");\n\n            that.arrangeBy = that.toolbar.find(\".k-tiles-arrange select\")\n                .kendoDropDownList({\n                    dataSource: arrangeBy,\n                    dataTextField: \"text\",\n                    dataValueField: \"value\",\n                    change: function() {\n                        that.orderBy(this.value());\n                    }\n                })\n                .data(\"kendoDropDownList\");\n\n            that.searchBox = that.toolbar.find(\"input[data-role='searchbox']\")\n                .kendoSearchBox({\n                    label: that.options.messages.search,\n                    change: function() {\n                        that.search(this.value());\n                    }\n                }).data(\"kendoSearchBox\");\n\n            that._attachDropzoneEvents();\n        },\n\n        _attachDropzoneEvents: function() {\n            var that = this;\n\n            if (that.options.transport.uploadUrl) {\n                bindDragEventWrappers($(document.documentElement),\n                    that._dropEnter.bind(that),\n                    that._dropLeave.bind(that)\n                );\n                that._scrollHandler = that._positionDropzone.bind(that);\n            }\n        },\n\n        _dropEnter: function() {\n            this._positionDropzone();\n            $(document).on(\"scroll\" + NS, this._scrollHandler);\n        },\n\n        _dropLeave: function() {\n            this._removeDropzone();\n            $(document).off(\"scroll\" + NS, this._scrollHandler);\n        },\n\n        _positionDropzone: function() {\n            var that = this,\n                element = that.element,\n                offset = element.offset();\n\n            that.toolbar.find(\".k-dropzone\")\n                .addClass(\"k-filebrowser-dropzone\")\n                .offset(offset)\n                .css({\n                    width: element[0].clientWidth,\n                    height: element[0].clientHeight,\n                    lineHeight: element[0].clientHeight + \"px\"\n                });\n        },\n\n        _removeDropzone: function() {\n            this.toolbar.find(\".k-dropzone\")\n                .removeClass(\"k-filebrowser-dropzone\")\n                .css({ width: \"\", height: \"\", lineHeight: \"\", top: \"\", left: \"\" });\n        },\n\n        _deleteClick: function() {\n            var that = this,\n                item = that.listView.select(),\n                message = encode(kendo.format(that.options.messages.deleteFile, item.find(\".k-file-name\").text()));\n\n            if (item.length && that._showMessage(message, \"confirm\")) {\n                that.listView.remove(item);\n            }\n        },\n\n        _addClick: function() {\n            this.createDirectory();\n        },\n\n        _getFieldName: function(name) {\n            return fieldName(this.dataSource.reader.model.fields, name);\n        },\n\n        _fileUpload: function(e) {\n            var that = this,\n                options = that.options,\n                fileTypes = options.fileTypes,\n                filterRegExp = new RegExp((\"(\" + fileTypes.split(\",\").join(\")|(\") + \")\").replace(/\\*\\./g , \".*.\"), \"i\"),\n                fileName = e.files[0].name,\n                fileSize = e.files[0].size,\n                fileNameField = NAMEFIELD,\n                sizeField = SIZEFIELD,\n                file;\n\n            if (filterRegExp.test(fileName)) {\n                e.data = { path: that.path() };\n\n                file = that._createFile(fileName, fileSize);\n\n                if (!file) {\n                    e.preventDefault();\n                } else {\n                    that.upload.one(\"success\", function(e) {\n                        var model = that._insertFileToList(file);\n\n                        if (model._override) {\n                            model.set(fileNameField, e.response[that._getFieldName(fileNameField)]);\n                            model.set(sizeField, e.response[that._getFieldName(sizeField)]);\n\n                            that.listView.dataSource.pushUpdate(model);\n                        }\n\n                        that._tiles = that.listView.items().filter(\"[\" + kendo.attr(\"type\") + \"=f]\");\n                    });\n                }\n            } else {\n                e.preventDefault();\n                that._showMessage(encode(kendo.format(options.messages.invalidFileType, fileName, fileTypes)));\n            }\n        },\n\n        _findFile: function(name) {\n            var data = this.dataSource.data(),\n                idx,\n                result,\n                typeField = TYPEFIELD,\n                nameField = NAMEFIELD,\n                length;\n\n            name = name.toLowerCase();\n\n            for (idx = 0, length = data.length; idx < length; idx++) {\n                if (data[idx].get(typeField) === \"f\" &&\n                    data[idx].get(nameField).toLowerCase() === name) {\n\n                    result = data[idx];\n                    break;\n                }\n            }\n            return result;\n        },\n\n        _createFile: function(fileName, fileSize) {\n            var that = this,\n                model = {},\n                typeField = TYPEFIELD,\n                file = that._findFile(fileName);\n\n            if (file) {\n                if (!that._showMessage(encode(kendo.format(that.options.messages.overwriteFile, fileName), \"confirm\"))) {\n                    return null;\n                } else {\n                    file._override = true;\n                    return file;\n                }\n            }\n\n            model[typeField] = \"f\";\n            model[NAMEFIELD] = fileName;\n            model[SIZEFIELD] = fileSize;\n\n            return model;\n        },\n\n        _insertFileToList: function(model) {\n            var index;\n            if (model._override) {\n                return model;\n            }\n\n            var dataSource = this.dataSource;\n            var view = dataSource.view();\n\n            for (var i = 0, length = view.length; i < length; i++) {\n                if (view[i].get(TYPEFIELD) === \"f\") {\n                    index = i;\n                    break;\n                }\n            }\n\n            return dataSource.insert(++index, model);\n        },\n\n        createDirectory: function() {\n            var that = this,\n                idx,\n                length,\n                lastDirectoryIdx = 0,\n                typeField = TYPEFIELD,\n                nameField = NAMEFIELD,\n                view = that.dataSource.data(),\n                name = that._nameDirectory(),\n                model = new that.dataSource.reader.model();\n\n            for (idx = 0, length = view.length; idx < length; idx++) {\n                if (view[idx].get(typeField) === \"d\") {\n                    lastDirectoryIdx = idx;\n                }\n            }\n\n            model.set(typeField, \"d\");\n            model.set(nameField, name);\n\n            that.listView.one(\"dataBound\", function() {\n                var selected = that.listView.items()\n                    .filter(\"[\" + kendo.attr(\"uid\") + \"=\" + model.uid + \"]\");\n\n                if (selected.length) {\n                    this.edit(selected);\n                }\n\n                this.element.scrollTop(selected.attr(\"offsetTop\") - this.element[0].offsetHeight);\n\n                setTimeout(function() {\n                    that.listView.element.find('.k-edit-item input').select();\n                });\n            })\n            .one(\"save\", function(e) {\n                var value = e.model.get(nameField);\n\n                if (!value) {\n                    e.model.set(nameField, name);\n                } else {\n                    e.model.set(nameField, that._nameExists(value, model.uid) ? that._nameDirectory() : value);\n                }\n            });\n\n            that.dataSource.insert(++lastDirectoryIdx, model);\n        },\n\n        _directoryKeyDown: function(e) {\n            if (e.keyCode == 13) {\n                e.currentTarget.blur();\n            }\n        },\n\n        _directoryBlur: function() {\n            this.listView.save();\n        },\n\n        _nameExists: function(name, uid) {\n            var data = this.dataSource.data(),\n                typeField = TYPEFIELD,\n                nameField = NAMEFIELD,\n                idx,\n                length;\n\n            for (idx = 0, length = data.length; idx < length; idx++) {\n                if (data[idx].get(typeField) === \"d\" &&\n                    data[idx].get(nameField).toLowerCase() === name.toLowerCase() &&\n                    data[idx].uid !== uid) {\n                    return true;\n                }\n            }\n            return false;\n        },\n\n        _nameDirectory: function() {\n            var name = \"New folder\",\n                data = this.dataSource.data(),\n                directoryNames = [],\n                typeField = TYPEFIELD,\n                nameField = NAMEFIELD,\n                candidate,\n                idx,\n                length;\n\n            for (idx = 0, length = data.length; idx < length; idx++) {\n                if (data[idx].get(typeField) === \"d\" && data[idx].get(nameField).toLowerCase().indexOf(name.toLowerCase()) > -1) {\n                    directoryNames.push(data[idx].get(nameField));\n                }\n            }\n\n            if ($.inArray(name, directoryNames) > -1) {\n                idx = 2;\n\n                do {\n                    candidate = name + \" (\" + idx + \")\";\n                    idx++;\n                } while ($.inArray(candidate, directoryNames) > -1);\n\n                name = candidate;\n            }\n\n            return name;\n        },\n\n        orderBy: function(field) {\n            this.dataSource.sort([\n                { field: TYPEFIELD, dir: \"asc\" },\n                { field: field, dir: \"asc\" }\n            ]);\n        },\n\n        search: function(name) {\n            this.dataSource.filter({\n                field: NAMEFIELD,\n                operator: \"contains\",\n                value: name\n            });\n        },\n\n        _content: function() {\n            var that = this;\n\n            that.list = $('<div class=\"k-filemanager-listview\" />')\n                .appendTo(that.element)\n                .on(\"dblclick\" + NS, \".k-listview-item\", that._dblClick.bind(that));\n\n            that.listView = new kendo.ui.ListView(that.list, {\n                layout: \"flex\",\n                flex: {\n                    direction: \"row\",\n                    wrap: \"wrap\"\n                },\n                dataSource: that.dataSource,\n                template: that._itemTmpl(),\n                editTemplate: that._editTmpl(),\n                selectable: true,\n                autoBind: false,\n                dataBinding: function(e) {\n                    that.toolbar.find(\".k-i-x,.k-svg-i-x\").parent().addClass(\"k-disabled\");\n\n                    if (e.action === \"remove\" || e.action === \"sync\") {\n                        e.preventDefault();\n                        kendo.ui.progress(that.listView.content, false);\n                        /* If there are no files left the loader is displayed over the wrapper instead of the content. */\n                        kendo.ui.progress(that.listView.wrapper, false);\n                    }\n                },\n                dataBound: function() {\n                    if (that.dataSource.view().length) {\n                        that._tiles = this.items().filter(\"[\" + kendo.attr(\"type\") + \"=f]\");\n                    } else {\n                        this.content.append(EMPTYTILE({ text: that.options.messages.emptyFolder }));\n                    }\n                },\n                change: that._listViewChange.bind(that)\n            });\n        },\n\n        _dblClick: function(e) {\n            var that = this,\n                li = $(e.currentTarget);\n\n            if (li.hasClass(\"k-edit-item\")) {\n                that._directoryBlur();\n            }\n\n            if (li.filter(\"[\" + kendo.attr(\"type\") + \"=d]\").length) {\n                var folder = that.dataSource.getByUid(li.attr(kendo.attr(\"uid\")));\n                if (folder) {\n                    that.path(concatPaths(that.path(), folder.get(NAMEFIELD)));\n                    that.breadcrumbs.value(\"/\" + that.path());\n                }\n            } else if (li.filter(\"[\" + kendo.attr(\"type\") + \"=f]\").length) {\n                that.trigger(APPLY);\n            }\n        },\n\n        _listViewChange: function() {\n            var selected = this._selectedItem();\n\n            if (selected) {\n                this.toolbar.find(\".k-i-x,.k-svg-i-x\").parent().removeClass(\"k-disabled\");\n                this.trigger(CHANGE, { selected: selected });\n            }\n        },\n\n        _dataSource: function() {\n            var that = this,\n                options = that.options,\n                transport = options.transport,\n                typeSortOrder = extend({}, DEFAULTSORTORDER),\n                nameSortOrder = { field: NAMEFIELD, dir: \"asc\" },\n                schema,\n                dataSource = {\n                    type: transport.type || \"filebrowser\",\n                    sort: [typeSortOrder, nameSortOrder]\n                };\n\n            if (isPlainObject(transport)) {\n                transport.path = that.path.bind(that);\n                dataSource.transport = transport;\n            }\n\n            if (isPlainObject(options.schema)) {\n                dataSource.schema = options.schema;\n            } else if (transport.type && isPlainObject(kendo.data.schemas[transport.type])) {\n                schema = kendo.data.schemas[transport.type];\n            }\n\n            if (that.dataSource && that._errorHandler) {\n                that.dataSource.unbind(ERROR, that._errorHandler);\n            } else {\n                that._errorHandler = that._error.bind(that);\n            }\n\n            that.dataSource = kendo.data.DataSource.create(dataSource)\n                .bind(ERROR, that._errorHandler);\n        },\n\n        _navigation: function() {\n            var that = this,\n                navigation = $('<div class=\"k-floatwrap\"><nav></nav></div>')\n                    .appendTo(this.element);\n\n            that.breadcrumbs = navigation.find(\"nav\").first()\n                    .kendoBreadcrumb({\n                        editable: true,\n                        gap: 50,\n                        value: that.options.path || \"/\",\n                        change: function() {\n                            that.path(this.value());\n                        }\n                    }).data(\"kendoBreadcrumb\");\n        },\n\n        _error: function(e) {\n            var that = this,\n                status;\n\n            if (!that.trigger(ERROR, e)) {\n                status = e.xhr.status;\n\n                if (e.status == 'error') {\n                    if (status == '404') {\n                        that._showMessage(kendo.htmlEncode(that.options.messages.directoryNotFound));\n                    } else if (status != '0') {\n                        that._showMessage('Error! The requested URL returned ' + status + ' - ' + e.xhr.statusText);\n                    }\n                } else if (status == 'timeout') {\n                    that._showMessage('Error! Server timeout.');\n                }\n\n                var dataSource = that.dataSource;\n                if (dataSource.hasChanges()) {\n                    dataSource.cancelChanges();\n                }\n            }\n        },\n\n        _showMessage: function(message, type) {\n            return window[type || \"alert\"](message);\n        },\n\n        refresh: function() {\n            var that = this;\n            that._navigation();\n            that._toolbar();\n            that._content();\n        },\n\n        _editTmpl: function() {\n            const result = (data) => `<div class=\"k-listview-item k-selected\" ${kendo.attr(\"uid\")}=\"${data.uid}\">` +\n                    `${data[TYPEFIELD] === 'd' ?\n                        '<div class=\"k-file-preview\">' + kendo.ui.icon({ icon: \"folder\", iconClass: \"k-file-icon\", size: \"xxxlarge\" }) + '</div>' :\n                        '<div class=\"k-file-preview\"><span class=\"k-file-icon k-icon k-i-loading\"></span></div>'}` +\n                    `${data[TYPEFIELD] === 'd' ?\n                        `<span class=\"k-file-name\">\n                            <span class=\"k-textbox k-input k-input-md k-rounded-md k-input-solid\">\n                                <input class=\"k-input-inner\" ${kendo.attr(\"bind\")}=\"value:${NAMEFIELD}\"/>\n                            </span>\n                        </span>` : ''}` +\n                `</div>`;\n\n            return kendo.template(result);\n        },\n\n        _itemTmpl: function() {\n            const result = (data) =>\n                `<div class=\"k-listview-item\" ${kendo.attr(\"uid\")}=\"${data.uid}\" ${kendo.attr(\"type\")}=\"${data[TYPEFIELD]}\">` +\n                    `${data[TYPEFIELD] === 'd' ?\n                        '<div class=\"k-file-preview\">' + kendo.ui.icon({ icon: \"folder\", iconClass: \"k-file-icon\", size: \"xxxlarge\" }) + '</div>' :\n                        '<div class=\"k-file-preview\">' + kendo.ui.icon({ icon: \"file\", iconClass: \"k-file-icon\", size: \"xxxlarge\" }) + '</div>'}` +\n                    `<span class=\"k-file-name\">${data[NAMEFIELD]}</span>` +\n                    `${data[TYPEFIELD] === 'f' ? `<span class=\"k-file-size\">${sizeFormatter(data[SIZEFIELD])}</span>` : '' }` +\n                `</div>`;\n\n            return kendo.template(result);\n        },\n\n        path: function(value) {\n            var that = this,\n                path = that._path || \"\";\n\n            if (value !== undefined$1) {\n                that._path = value.replace(trimSlashesRegExp, \"\") + \"/\";\n                that.dataSource.read({ path: that._path });\n                return;\n            }\n\n            if (path) {\n                path = path.replace(trimSlashesRegExp, \"\");\n            }\n\n            return path === \"/\" || path === \"\" ? \"\" : (path + \"/\");\n        }\n    });\n\n    var SearchBox = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            options = options || {};\n\n            Widget.fn.init.call(that, element, options);\n\n            if (placeholderSupported) {\n                that.element.attr(\"placeholder\", that.options.label);\n            }\n\n            that._wrapper();\n\n            that.element\n                .on(\"keydown\" + SEARCHBOXNS, that._keydown.bind(that))\n                .on(\"change\" + SEARCHBOXNS, that._updateValue.bind(that));\n\n            that.wrapper\n                .on(CLICK + SEARCHBOXNS, \"a\", that._click.bind(that));\n\n            if (!placeholderSupported) {\n                that.element.on(\"focus\" + SEARCHBOXNS, that._focus.bind(that))\n                    .on(\"blur\" + SEARCHBOXNS, that._blur.bind(that));\n            }\n        },\n\n        options: {\n            name: \"SearchBox\",\n            label: \"Search\",\n            value: \"\"\n        },\n\n        events: [ CHANGE ],\n\n        destroy: function() {\n            var that = this;\n\n            that.wrapper\n                .add(that.element)\n                .add(that.label)\n                .off(SEARCHBOXNS);\n\n            Widget.fn.destroy.call(that);\n        },\n\n        _keydown: function(e) {\n            if (e.keyCode === 13) {\n                this._updateValue();\n            }\n        },\n\n        _click: function(e) {\n            e.preventDefault();\n            this._updateValue();\n        },\n\n        _updateValue: function() {\n            var that = this,\n                value = that.element.val();\n\n            if (value !== that.value()) {\n                that.value(value);\n\n                that.trigger(CHANGE);\n            }\n        },\n\n        _blur: function() {\n            this._updateValue();\n            this._toggleLabel();\n        },\n\n        _toggleLabel: function() {\n            if (!placeholderSupported) {\n                this.label.toggle(!this.element.val());\n            }\n        },\n\n        _focus: function() {\n            this.label.hide();\n        },\n\n        _wrapper: function() {\n            var element = this.element,\n                wrapper = element.parents(\".k-search-wrap\");\n\n            element[0].style.width = \"\";\n            element.addClass(\"k-input-inner\");\n\n            if (!wrapper.length) {\n                wrapper = element.wrap($('<div class=\"k-widget k-search-wrap\"><span class=\"k-textbox k-input k-input-md k-rounded-md k-input-solid\"></span></div>')).parents(\".k-search-wrap\");\n                if (!placeholderSupported) {\n                    $('<label>' + this.options.label + '</label>').css(\"display\", \"block\").insertBefore(element);\n                }\n                $('<span class=\"k-input-suffix\">' + kendo.ui.icon($('<a href=\"#\" />'), { icon: \"search\", iconClass: \"k-search\" }) + '</span>').appendTo(wrapper.find(\".k-textbox\"));\n            }\n\n            this.wrapper = wrapper;\n            this.label = wrapper.find(\">label\");\n        },\n\n        value: function(value) {\n            var that = this;\n\n            if (value !== undefined$1) {\n                that.options.value = value;\n                that.element.val(value);\n                that._toggleLabel();\n                return;\n            }\n            return that.options.value;\n        }\n    });\n\n    kendo.ui.plugin(FileBrowser);\n    kendo.ui.plugin(SearchBox);\n\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}