{"version":3,"file":"kendo.gantt.list.js","names":["__meta__","id","name","category","description","depends","hidden","$","extend","map","isFunction","kendo","ui","TreeList","outerHeight","_outerHeight","activeElement","_activeElement","mobileOS","support","DATATYPE","attr","BINDING","FORMAT","STRING","defaultDateFormat","getCulture","calendar","patterns","d","titleFromField","title","start","end","percentComplete","parentId","orderId","SIZE_CALCULATION_TEMPLATE","listStyles","gridHeader","gridContentWrap","editCell","iconCollapse","iconExpand","GanttList","init","element","options","this","columns","length","push","fn","call","_unbindDataSource","_setWidth","autoBind","sortable","selectable","_editCellEvent","_tabCycleStop","navigatable","editable","move","mode","resizable","renderAllRows","destroy","closeCell","isCancel","tr","model","that","cell","editor","_isIncellEditable","dataItem","_cancelEditor","removeClass","parent","editRow","lockedContent","_relatedRow","_render","trigger","item","data","ns","_adjustRowHeight","css","insertAfter","nodeData","referenceNode","taskInfo","task","updateInfo","insertBefore","_adjustHeight","height","contentWrap","find","header","scrollbar","_isHeightSet","_hasLockedColumns","table","offsetWidth","clientWidth","row1","row2","offsetHeight1","offsetHeight","offsetHeight2","style","el","initialHeight","newHeight","_attachCellEditingEventHandlers","update","touch","content","kendoTouch","filter","touchstart","e","_mouseDownHandler","doubletap","event","target","classList","contains","_openEditorHandler","_blurActiveElement","nodeName","toLowerCase","_columns","_hasExpandable","forEach","expandable","_eachColumn","bind","_columnEditor","column","field","required","_extractFormat","format","container","validation","fields","dateCompare","message","hide","appendTo","prependTo","kendoDateTimePicker","_columnFromElement","td","closest","idx","children","index","resourcesField","isSortable","hasNestedColumns","indexOf","template","value","get","formatedValue","i","join","_editCell","editedCell","modelCopy","dataSource","_createNewModel","toJSON","clearTimeout","_closeCellTimeout","_restorePageSizeAfterAddChild","_edit","editedColumn","editedColumnIndex","add","lockedTable","first","_createIncellEditor","change","values","preventDefault","_current","_modelFromElement","row","getByUid","currentTarget","hasClass","isLockedCell","multiple","has","tbody","is","_renderTree","taskTree","addClass","rowHeight","_rowHeight","tasks","applyStylesFromKendoAttributes","append","remove","_setData","listWidth","plugin","window","jQuery","kendo$1"],"sources":["kendo.gantt.list.js"],"mappings":"MAAO,4BACA,kCAEP,IAAIA,SAAW,CACXC,GAAI,aACJC,KAAM,aACNC,SAAU,MACVC,YAAa,iBACbC,QAAS,CAAE,WAAY,wBACvBC,QAAQ,IAGZ,SAAUC,GACN,IAAIC,EAASD,EAAEC,OACXC,EAAMF,EAAEE,IACRC,EAAaC,MAAMD,WAEnBE,EAAKD,MAAMC,GACXC,EAAWD,EAAGC,SACdC,EAAcH,MAAMI,aACpBC,EAAgBL,MAAMM,eACtBC,EAAWP,MAAMQ,QAAQD,SAEzBE,EAAWT,MAAMU,KAAK,QACtBC,EAAUX,MAAMU,KAAK,QACrBE,EAASZ,MAAMU,KAAK,UAEpBG,EAAS,SAOTC,EAAoB,MAAQd,MAAMe,aAAaC,SAASC,SAASC,EAAI,IAErEC,EAAiB,CACbC,MAAS,QACTC,MAAS,aACTC,IAAO,WACPC,gBAAmB,SACnBC,SAAY,iBACZlC,GAAM,KACNmC,QAAW,YAGfC,EAA4B,UAAU1B,MAAMU,KAAK,2CAElCV,MAAMU,KAAK,6DAM1BiB,EAAa,CACTC,WAAY,gBACZC,gBAAiB,iBACjBC,SAAU,cACVC,aAAc,iBACdC,WAAY,mBAGhBC,EAAYhC,EAAGgC,UAAY/B,EAASL,OAAO,CAC3CqC,KAAM,SAASC,EAASC,GACgB,IAAhCC,KAAKD,QAAQE,QAAQC,QACrBF,KAAKD,QAAQE,QAAQE,KAAK,SAG9BtC,EAASuC,GAAGP,KAAKQ,KAAKL,KAAMF,EAASC,GAErCC,KAAKM,oBACLN,KAAKO,aAGTR,QAAS,CACL7C,KAAM,YACNsD,UAAU,EACVC,UAAU,EACVC,YAAY,EACZC,eAAgB,WAChBC,eAAe,EACfC,aAAa,EACbC,SAAU,CACNC,MAAM,EACNC,KAAM,UAEVC,WAAW,EACXC,eAAe,GAGnBC,QAAS,WACLtD,EAASuC,GAAGe,QAAQd,KAAKL,MACzBrC,MAAMwD,QAAQnB,KAAKF,UAGvBsB,UAAW,SAASC,GAChB,IAEIC,EACAC,EAHAC,EAAOxB,KACPyB,GAAQD,EAAKE,QAAU,IAAI5B,QAI1B2B,GAASA,EAAK,IAAOD,EAAKG,sBAI/BJ,EAAQC,EAAKI,SAASH,GACtBD,EAAKK,gBACLJ,EAAKK,YAAYxC,EAAWG,UAC5B6B,EAAKG,EAAKM,SAASD,YAAYxC,EAAW0C,SAEtCR,EAAKS,eACLT,EAAKU,YAAYZ,GAAIQ,YAAYxC,EAAW0C,SAG5CX,GACAG,EAAKW,UAGTX,EAAKY,QAAQ,aAAc,CAAEC,KAAMf,EAAIgB,KAAMf,EAAOgB,GAAI3E,IAEpD4D,EAAKS,eACLT,EAAKgB,iBAAiBlB,EAAGmB,IAAI,SAAU,IAAI,GAAIjB,EAAKU,YAAYZ,GAAImB,IAAI,SAAU,IAAI,MAI9FC,YAAa,SAASC,EAAUC,GAC5B,GAAKD,GAAaC,EAAlB,CAIA,IAAIxD,EAAUwD,EAAcxD,QACxByD,EAAW,CACX1D,SAAUyD,EAAczD,UAGxByD,EAAczD,WAAawD,EAASxD,UAAYyD,EAAcxD,QAAUuD,EAASvD,QACjFyD,EAASzD,QAAUA,EAEnByD,EAASzD,QAAUA,EAAU,EAGjCY,KAAKoC,QAAQ,UAAW,CACpBU,KAAMH,EACNI,WAAYF,MAIpBG,aAAc,SAASL,EAAUC,GAC7B,GAAKD,GAAaC,EAAlB,CAIA,IAAIxD,EAAUwD,EAAcxD,QACxByD,EAAW,CACX1D,SAAUyD,EAAczD,UAGxByD,EAAczD,WAAawD,EAASxD,UACpCyD,EAAcxD,QAAUuD,EAASvD,QAC7ByD,EAASzD,QAAUA,EAAU,EAEjCyD,EAASzD,QAAUA,EAGvBY,KAAKoC,QAAQ,UAAW,CACpBU,KAAMH,EACNI,WAAYF,MAIpBI,cAAe,WACX,IAGIC,EAHApD,EAAUE,KAAKF,QACfqD,EAAcrD,EAAQsD,KA5IxB,IA4ImC9D,EAAWE,iBAC5C6D,EAASvD,EAAQsD,KA7InB,IA6I8B9D,EAAWC,YAEvC+D,EAAY3F,MAAMQ,QAAQmF,YAE1BtD,KAAKuD,aAAazD,KAClBoD,EAASpD,EAAQoD,SAAWpF,EAAYuF,GAExCF,EAAYD,OAAOA,GAEflD,KAAKwD,oBACLF,EAAYtD,KAAKyD,MAAM,GAAGC,YAAc1D,KAAKyD,MAAM1B,SAAS,GAAG4B,YAAcL,EAAY,EACzFtD,KAAKiC,cAAciB,OAAOA,EAASI,MAK/Cd,iBAAkB,SAASoB,EAAMC,GAC7B,IAAIX,EACAY,EAAgBF,EAAKG,aACrBC,EAAgBH,EAAKE,aAErBD,EAAgBE,EAChBd,EAASY,EAAgB,KAClBA,EAAgBE,IACvBd,EAASc,EAAgB,MAGzBd,IACAU,EAAKK,MAAMf,OAASW,EAAKI,MAAMf,OAASA,IAKhDK,aAAc,SAASW,GACnB,IAAIC,EAAeC,EACnB,QAAIF,EAAG,GAAGD,MAAMf,SAGZiB,EAAgBD,EAAGhB,SAGvBgB,EAAGhB,OAAO,QACVkB,EAAYF,EAAGhB,SACfgB,EAAGhB,OAAO,IAEFiB,GAAiBC,IAG7BC,gCAAiC,WAC7B,IAAI7C,EAAOxB,KACPc,EAAWU,EAAKzB,QAAQe,SAE5BjD,EAASuC,GAAGiE,gCAAgChE,KAAKmB,GAE7CA,EAAKG,sBAA2C,IAApBb,EAASwD,QAEjCpG,IACAsD,EAAK+C,MAAQ/C,EAAKgD,QACbC,WAAW,CACRC,OAAQ,KACRC,WAAY,SAASC,GACjBpD,EAAKqD,kBAAkBD,EAAEL,QAE7BO,UAAW,SAASF,GACZA,EAAEG,MAAMC,OAAOC,UAAUC,SAAS,WAAaN,EAAEG,MAAMC,OAAOC,UAAUC,SAAS,eAGrF1D,EAAK2D,mBAAmBP,EAAEL,UAE/BjC,KAAK,gBAKxB8C,mBAAoB,WAChB,IAAIpH,EAAgBL,MAAMM,iBAEtBD,GAA0D,SAAzCA,EAAcqH,SAASC,eACxC/H,EAAES,GAAeoE,QAAQ,SAIjCmD,SAAU,WACN,IAAI/D,EAAOxB,KACPC,EAAUD,KAAKD,QAAQE,QAE3BuB,EAAKgE,gBAAiB,EAEtBvF,EAAQwF,SAAQ,SAASpD,GACjBA,EAAKqD,aACLlE,EAAKgE,gBAAiB,MAI9BhE,EAAKvB,QAAUuB,EAAKzB,QAAQE,QAAUxC,EAAIwC,EAASuB,EAAKmE,YAAYC,KAAKpE,IAEzE3D,EAASuC,GAAGmF,SAASlF,KAAKmB,IAG9BqE,cAAe,SAASC,GACpB,IAAIzH,EAAO,CACPnB,KAAQ4I,EAAOC,MACfC,UAAY,GAOhB,OAJA3H,EAAKC,GAAW,SAAWwH,EAAOC,MAClC1H,EAAKD,GAAY,OACjBC,EAAKE,GAAUZ,MAAMsI,eAAeH,EAAOI,QAEpC,SAASC,EAAWpG,GACvB,IAAIwB,EAAQxB,EAAQwB,MAEhB6E,GADQ7E,EAAM8E,OAAOP,EAAOC,QAAUxE,EAAMuE,EAAOC,QAChCK,WAEnBA,GAAcA,EAAWE,aAAe5I,EAAW0I,EAAWE,cAAgBF,EAAWG,UACzFhJ,EAAE,SAAWI,MAAMU,KAAK,OAAS,KAAOyH,EAAOC,MAAQ,6BAClDS,OACAC,SAASN,GAEd9H,EAAKV,MAAMU,KAAK,oBAAsB+H,EAAWG,SAGrDhJ,EAAE,wBACGc,KAAKA,GACLqI,UAAUP,GACVQ,oBAAoB,CAAET,OAAQnG,EAAQmG,WAInDU,mBAAoB,SAAS9G,GACzB,IAAI+G,EAAK/G,EAAQgH,QAAQ,MAErBC,EADKF,EAAG9E,SACCiF,WAAWC,MAAMJ,GAE9B,OAAO7G,KAAKC,QAAQ8G,IAGxBpB,YAAa,SAASG,GAClB,IAAItE,EAAOxB,KACPkH,EAAiB1F,EAAKzB,QAAQmH,eAC9BC,EAAanH,KAAKD,QAAQU,SA+D9B,OA3CIqF,EAAO7F,UACPuB,EAAK4F,kBAAmB,EACxBtB,EAAO7F,QAAUxC,EAAIqI,EAAO7F,QAASD,KAAK2F,YAAYC,KAAK5F,eAGpD8F,IAAWtH,IAClBsH,EAAS,CACLC,MAAOD,EACP/G,MAAOD,EAAegH,MAIN,IAApBA,EAAOhF,SACPgF,EAAOhF,SAAW,WACd,OAAO,GAGXgF,EAAOhF,SAAW,WACd,OAAO,GAIM,UAAjBgF,EAAOC,OAAsC,QAAjBD,EAAOC,QACnCD,EAAOI,OAASvI,MAAMe,aAAaC,SAASC,SAASkH,EAAOI,SAAWJ,EAAOI,QAAUzH,EAEnFqH,EAAOpE,SACJoE,EAAOI,SAAWzH,GAAqBqH,EAAOI,OAAOZ,cAAc+B,QAAQ,MAAQ,KACnFvB,EAAOpE,OAASF,EAAKqE,cAAcC,KAI3CA,EAAOC,QAAUmB,IACjBpB,EAAOrF,UAAW,EAClBqF,EAAOwB,SAAWxB,EAAOwB,UA5CP,SAASxE,GAI3B,IAHA,IAAIyE,EAAQzE,EAAK0E,IAAIN,IAAmB,GACpCO,EAAgB,GAEXC,EAAI,EAAGA,EAAIH,EAAMrH,OAAQwH,IAC9BD,EAActH,KAAKxC,MAAMuI,OAAO,YAAaqB,EAAMG,GAAGF,IAAI,QAASD,EAAMG,GAAGF,IAAI,mBAGpF,OAAOC,EAAcE,KAAK,QAsCzBnG,EAAKgE,gBAAmC,UAAjBM,EAAOC,QAC/BD,EAAOJ,YAAa,GAGpByB,IAAerB,EAAOrF,WACtBqF,EAAOrF,UAAW,GAGfjD,EAAO,IA7DF,WACRwC,KAAK+F,MAAQ,GACb/F,KAAKjB,MAAQ,GACbiB,KAAKc,SAAW,WAAa,OAAO,GACpCd,KAAKS,UAAW,GAyDOqF,IAG/B8B,UAAW,SAASnG,EAAMqE,EAAQvE,GAC9B,IAGIsG,EAHArG,EAAOxB,KACPkH,EAAiB1F,EAAKzB,QAAQmH,eAC9BY,EAAYtG,EAAKuG,WAAWC,gBAAgBzG,EAAM0G,UAGtDC,aAAa1G,EAAK2G,mBACdrC,EAAOC,QAAUmB,EAIb1F,EAAKY,QA1WH,aA0WwB,CAAEb,MAAOA,EAAO4E,UAAW1E,IACrDD,EAAKuG,WAAWK,iCAIpB5G,EAAKJ,YAELG,EAAM8G,OAAQ,EAEd7G,EAAKK,gBAELL,EAAKW,QAAQ,CACTmG,aAAcxC,EACdyC,kBAAmB9G,EAAKwF,UAG5BY,EAAarG,EAAKiC,MAAM+E,IAAIhH,EAAKiH,aAAarF,KAtXhD,IAsX2D9D,EAAWG,UAAUiJ,QAE9ElH,EAAKE,OAASF,EAAKmH,oBAAoBd,EAAY,CAC/C5H,QAAS,CAAC6F,GACVvE,MAAOA,EACPqH,OAAQ,SAAShE,GACTpD,EAAKY,QA9XlB,OA8XgC,CAAEyG,OAAQjE,EAAEiE,OAAQ1C,UAAW1E,EAAMF,MAAOA,KAC/DqD,EAAEkE,oBAMdtH,EAAKuH,SAAWlB,EAEhBrG,EAAKY,QAxYN,OAwYoB,CAAE+D,UAAW1E,EAAMF,MAAOA,KAlC7CuE,EAAOpE,OAAOD,EAAMqG,IAsC5BkB,kBAAmB,SAASlJ,GACxB,IAAImJ,EAAMnJ,EAAQgH,QAAQ,MAG1B,OAFY9G,KAAK+H,WAAWmB,SAASD,EAAI5K,KAAKV,MAAMU,KAAK,UAK7DwG,kBAAmB,SAASD,GACJrH,EAAEqH,EAAEuE,eAELC,SAAS9J,EAAWG,WACnCO,KAAKoF,sBAIbD,mBAAoB,SAASP,GACzB,IAAIpD,EAAOxB,KACP6G,EAAKtJ,EAAEqH,EAAEuE,eACTE,EAAe7H,EAAKiH,aAAe5B,EAAGC,QAAQ,SAAS,KAAOtF,EAAKiH,YAAY,GAC/E/H,EAAac,EAAKd,YAAcc,EAAKd,WAAWX,QAAQuJ,SAExDzC,EAAGuC,SAAS9J,EAAWG,WACvBoH,EAAG0C,IAAI,mBAAmBrJ,QAC1B2G,EAAG0C,IAAI,wBAAwBrJ,QAC9B2G,EAAGC,QAAQ,SAAS,KAAOtF,EAAKgI,MAAM,KAAOH,GAC9C9L,EAAEqH,EAAEI,QAAQyE,GAAG,WACflM,EAAEqH,EAAEI,QAAQyE,GAAG,WAAWnK,EAAWK,gBACrCpC,EAAEqH,EAAEI,QAAQyE,GAAG,WAAWnK,EAAWI,mBAKrC8B,EAAKE,OACDF,EAAKE,OAAOzC,QACRyB,GACAnD,EAAES,KAAiBoE,QAAQ,QAE/BZ,EAAKJ,YACLI,EAAK/B,SAASoH,IAGlBrF,EAAK/B,SAASoH,KAItB6C,YAAa,SAASC,GAClB9L,EAASuC,GAAG+B,QAAQ9B,KAAKL,MAErBA,KAAKoH,kBACLpH,KAAKF,QAAQ8J,SAAS,mCAGtBD,GAAYA,EAASzJ,SAAWyJ,EAASrB,eACrCtI,KAAKD,QAAQ8J,WACb7J,KAAK8J,WAAWH,GAGpB3J,KAAKoC,QAncJ,WAscLpC,KAAKiD,iBAGT6G,WAAY,SAASC,GACjB,IAII7G,EAJAsB,EAAUxE,KAAKwE,QACfzE,EAAUC,KAAKD,QACf8J,SAAmB9J,EAAQ8J,YAAcrL,EAASuB,EAAQ8J,UAAY9J,EAAQ8J,UAAY,KAC1FpG,EAAQlG,EAAEI,MAAMuI,OAAO7G,EAA2BwK,IAGtDlM,MAAMqM,+BAA+BvG,EAAO,CAAC,SAAU,eACvDe,EAAQyF,OAAOxG,GACfP,EAASpF,EAAY2F,EAAML,KAAK,OAChCK,EAAMyG,SAENlK,KAAKF,QAAQsD,KAAK,qBAAqBX,IAAI,SAAWsH,EAAM7J,OAASgD,EAAU,OAGnFiH,SAAU,SAASJ,GACf/J,KAAK+H,WAAWzF,KAAKyH,IAGzBxJ,UAAW,WACPP,KAAKF,QAAQsD,KAAK,wBAAwBX,IAAI,WAAYzC,KAAKD,QAAQqK,WACvEpK,KAAKwE,QAAQpB,KAAK,SAASX,IAAI,WAAYzC,KAAKD,QAAQqK,cAIhExM,EAAGyM,OAAOzK,GArfd,CAufG0K,OAAO3M,MAAM4M,QAChB,IAAIC,QAAU7M,aAEL6M","sourcesContent":["import './kendo.treelist.js';\nimport './kendo.treeview.draganddrop.js';\n\nvar __meta__ = {\n    id: \"gantt.list\",\n    name: \"Gantt List\",\n    category: \"web\",\n    description: \"The Gantt List\",\n    depends: [ \"treelist\", \"treeview.draganddrop\" ],\n    hidden: true\n};\n\n(function($) {\n    var extend = $.extend,\n        map = $.map,\n        isFunction = kendo.isFunction,\n\n        ui = kendo.ui,\n        TreeList = ui.TreeList,\n        outerHeight = kendo._outerHeight,\n        activeElement = kendo._activeElement,\n        mobileOS = kendo.support.mobileOS,\n\n        DATATYPE = kendo.attr(\"type\"),\n        BINDING = kendo.attr(\"bind\"),\n        FORMAT = kendo.attr(\"format\"),\n\n        STRING = \"string\",\n        BEFORE_EDIT = \"beforeEdit\",\n        EDIT = \"edit\",\n        SAVE = \"save\",\n        RENDER = \"render\",\n        DOT = \".\",\n\n        defaultDateFormat = \"{0:\" + kendo.getCulture().calendar.patterns.d + \"}\",\n\n        titleFromField = {\n            \"title\": \"Title\",\n            \"start\": \"Start Time\",\n            \"end\": \"End Time\",\n            \"percentComplete\": \"% Done\",\n            \"parentId\": \"Predecessor ID\",\n            \"id\": \"ID\",\n            \"orderId\": \"Order ID\"\n        },\n\n        SIZE_CALCULATION_TEMPLATE = `<table ${kendo.attr(\"style-visibility\")}=\"hidden\">` +\n            \"<tbody>\" +\n                `<tr ${kendo.attr(\"style-height\")}=\"{0}\">` +\n                    \"<td>&nbsp;</td>\" +\n                \"</tr>\" +\n            \"</tbody>\" +\n        \"</table>\",\n\n        listStyles = {\n            gridHeader: \"k-grid-header\",\n            gridContentWrap: \"k-grid-content\",\n            editCell: \"k-edit-cell\",\n            iconCollapse: \"caret-alt-down\",\n            iconExpand: \"caret-alt-right\"\n        };\n\n    var GanttList = ui.GanttList = TreeList.extend({\n        init: function(element, options) {\n            if (this.options.columns.length === 0) {\n                this.options.columns.push(\"title\");\n            }\n\n            TreeList.fn.init.call(this, element, options);\n\n            this._unbindDataSource();\n            this._setWidth();\n        },\n\n        options: {\n            name: \"GanttList\",\n            autoBind: false,\n            sortable: true,\n            selectable: true,\n            _editCellEvent: \"dblclick\",\n            _tabCycleStop: true,\n            navigatable: false,\n            editable: {\n                move: true,\n                mode: \"incell\"\n            },\n            resizable: false,\n            renderAllRows: false\n        },\n\n        destroy: function() {\n            TreeList.fn.destroy.call(this);\n            kendo.destroy(this.element);\n        },\n\n        closeCell: function(isCancel) {\n            var that = this;\n            var cell = (that.editor || {}).element;\n            var tr;\n            var model;\n\n            if (!cell || !cell[0] || !that._isIncellEditable()) {\n                return;\n            }\n\n            model = that.dataItem(cell);\n            that._cancelEditor();\n            cell.removeClass(listStyles.editCell);\n            tr = cell.parent().removeClass(listStyles.editRow);\n\n            if (that.lockedContent) {\n                that._relatedRow(tr).removeClass(listStyles.editRow);\n            }\n\n            if (isCancel) {\n                that._render();\n            }\n\n            that.trigger(\"itemChange\", { item: tr, data: model, ns: ui });\n\n            if (that.lockedContent) {\n                that._adjustRowHeight(tr.css(\"height\", \"\")[0], that._relatedRow(tr).css(\"height\", \"\")[0]);\n            }\n        },\n\n        insertAfter: function(nodeData, referenceNode) {\n            if (!nodeData || !referenceNode) {\n                return;\n            }\n\n            var orderId = referenceNode.orderId;\n            var taskInfo = {\n                parentId: referenceNode.parentId\n            };\n\n            if (referenceNode.parentId === nodeData.parentId && referenceNode.orderId > nodeData.orderId) {\n                taskInfo.orderId = orderId;\n            } else {\n                taskInfo.orderId = orderId + 1;\n            }\n\n            this.trigger(\"reorder\", {\n                task: nodeData,\n                updateInfo: taskInfo\n            });\n        },\n\n        insertBefore: function(nodeData, referenceNode) {\n            if (!nodeData || !referenceNode) {\n                return;\n            }\n\n            var orderId = referenceNode.orderId;\n            var taskInfo = {\n                parentId: referenceNode.parentId\n            };\n\n            if (referenceNode.parentId === nodeData.parentId &&\n                referenceNode.orderId > nodeData.orderId) {\n                    taskInfo.orderId = orderId - 1;\n            } else {\n                taskInfo.orderId = orderId;\n            }\n\n            this.trigger(\"reorder\", {\n                task: nodeData,\n                updateInfo: taskInfo\n            });\n        },\n\n        _adjustHeight: function() {\n            var element = this.element;\n            var contentWrap = element.find(DOT + listStyles.gridContentWrap);\n            var header = element.find(DOT + listStyles.gridHeader);\n            var height;\n            var scrollbar = kendo.support.scrollbar();\n\n            if (this._isHeightSet(element)) {\n                height = element.height() - outerHeight(header);\n\n                contentWrap.height(height);\n\n                if (this._hasLockedColumns) {\n                    scrollbar = this.table[0].offsetWidth > this.table.parent()[0].clientWidth ? scrollbar : 0;\n                    this.lockedContent.height(height - scrollbar);\n                }\n            }\n        },\n\n        _adjustRowHeight: function(row1, row2) {\n            var height;\n            var offsetHeight1 = row1.offsetHeight;\n            var offsetHeight2 = row2.offsetHeight;\n\n            if (offsetHeight1 > offsetHeight2) {\n                height = offsetHeight1 + \"px\";\n            } else if (offsetHeight1 < offsetHeight2) {\n                height = offsetHeight2 + \"px\";\n            }\n\n            if (height) {\n                row1.style.height = row2.style.height = height;\n            }\n         },\n\n        // identical code found in treelist, grid & scheduler :(\n        _isHeightSet: function(el) {\n            var initialHeight, newHeight;\n            if (el[0].style.height) {\n                return true;\n            } else {\n                initialHeight = el.height();\n            }\n\n            el.height(\"auto\");\n            newHeight = el.height();\n            el.height(\"\");\n\n            return (initialHeight != newHeight);\n        },\n\n        _attachCellEditingEventHandlers: function() {\n            var that = this,\n                editable = that.options.editable;\n\n            TreeList.fn._attachCellEditingEventHandlers.call(that);\n\n            if (that._isIncellEditable() && editable.update !== false) {\n\n                if (mobileOS) {\n                    that.touch = that.content\n                        .kendoTouch({\n                            filter: \"td\",\n                            touchstart: function(e) {\n                                that._mouseDownHandler(e.touch);\n                            },\n                            doubletap: function(e) {\n                                if (e.event.target.classList.contains(\"k-icon\") || e.event.target.classList.contains(\"k-svg-icon\")) {\n                                    return;\n                                }\n                                that._openEditorHandler(e.touch);\n                            }\n                        }).data(\"kendoTouch\");\n                }\n            }\n        },\n\n        _blurActiveElement: function() {\n            var activeElement = kendo._activeElement();\n\n            if (activeElement && activeElement.nodeName.toLowerCase() !== \"body\") {\n                $(activeElement).trigger(\"blur\");\n            }\n        },\n\n        _columns: function() {\n            var that = this,\n                columns = this.options.columns;\n\n            that._hasExpandable = false;\n\n            columns.forEach(function(item) {\n                if (item.expandable) {\n                    that._hasExpandable = true;\n                }\n            });\n\n            that.columns = that.options.columns = map(columns, that._eachColumn.bind(that));\n\n            TreeList.fn._columns.call(that);\n        },\n\n        _columnEditor: function(column) {\n            var attr = {\n                \"name\": column.field,\n                \"required\": true\n            };\n\n            attr[BINDING] = \"value:\" + column.field;\n            attr[DATATYPE] = \"date\";\n            attr[FORMAT] = kendo._extractFormat(column.format);\n\n            return function(container, options) {\n                var model = options.model,\n                    field = model.fields[column.field] || model[column.field],\n                    validation = field.validation;\n\n                if (validation && validation.dateCompare && isFunction(validation.dateCompare) && validation.message) {\n                    $('<span ' + kendo.attr(\"for\") + '=\"' + column.field + '\" class=\"k-invalid-msg\"/>')\n                        .hide()\n                        .appendTo(container);\n\n                    attr[kendo.attr(\"dateCompare-msg\")] = validation.message;\n                }\n\n                $('<input type=\"text\"/>')\n                    .attr(attr)\n                    .prependTo(container)\n                    .kendoDateTimePicker({ format: options.format });\n            };\n        },\n\n        _columnFromElement: function(element) {\n            var td = element.closest(\"td\"),\n                tr = td.parent(),\n                idx = tr.children().index(td);\n\n            return this.columns[idx];\n        },\n\n        _eachColumn: function(column) {\n            var that = this,\n                resourcesField = that.options.resourcesField,\n                isSortable = this.options.sortable;\n\n            var model = function() {\n                this.field = \"\";\n                this.title = \"\";\n                this.editable = function() { return false; };\n                this.sortable = false;\n            };\n\n            var formatResources = function(task) {\n                var value = task.get(resourcesField) || [],\n                    formatedValue = [];\n\n                for (var i = 0; i < value.length; i++) {\n                    formatedValue.push(kendo.format(\"{0} [{1}]\", value[i].get(\"name\"), value[i].get(\"formatedValue\")));\n                }\n\n                return formatedValue.join(\", \");\n            };\n\n            if (column.columns) {\n                that.hasNestedColumns = true;\n                column.columns = map(column.columns, this._eachColumn.bind(this));\n            }\n\n            if (typeof column === STRING) {\n                column = {\n                    field: column,\n                    title: titleFromField[column]\n                };\n            }\n\n            if (column.editable === true) {\n                column.editable = function() {\n                    return true;\n                };\n            } else {\n                column.editable = function() {\n                    return false;\n                };\n            }\n\n            if (column.field === \"start\" || column.field === \"end\") {\n                column.format = kendo.getCulture().calendar.patterns[column.format] || column.format || defaultDateFormat;\n\n                if (!column.editor) {\n                    if (column.format === defaultDateFormat || column.format.toLowerCase().indexOf(\"h\") > -1) {\n                        column.editor = that._columnEditor(column);\n                    }\n                }\n            }\n            if (column.field === resourcesField) {\n                column.sortable = false;\n                column.template = column.template || formatResources;\n            }\n            if (!that._hasExpandable && column.field === \"title\") {\n                column.expandable = true;\n            }\n\n            if (isSortable && !column.sortable) {\n                column.sortable = false;\n            }\n\n            return extend(new model(), column);\n        },\n\n        _editCell: function(cell, column, model) {\n            var that = this,\n                resourcesField = that.options.resourcesField,\n                modelCopy = that.dataSource._createNewModel(model.toJSON()),\n                editedCell;\n\n            clearTimeout(that._closeCellTimeout);\n            if (column.field === resourcesField) {\n                column.editor(cell, modelCopy);\n                return;\n            } else {\n                if (that.trigger(BEFORE_EDIT, { model: model, container: cell })) {\n                    that.dataSource._restorePageSizeAfterAddChild();\n                    return;\n                }\n\n                that.closeCell();\n\n                model._edit = true;\n\n                that._cancelEditor();\n\n                that._render({\n                    editedColumn: column,\n                    editedColumnIndex: cell.index()\n                });\n\n                editedCell = that.table.add(that.lockedTable).find(DOT + listStyles.editCell).first();\n\n                that.editor = that._createIncellEditor(editedCell, {\n                    columns: [column],\n                    model: model,\n                    change: function(e) {\n                        if (that.trigger(SAVE, { values: e.values, container: cell, model: model } )) {\n                            e.preventDefault();\n                        }\n                    }\n                });\n\n                // refresh the current element as the DOM element reference can be changed after render()\n                that._current = editedCell;\n\n                that.trigger(EDIT, { container: cell, model: model });\n            }\n        },\n\n        _modelFromElement: function(element) {\n            var row = element.closest(\"tr\"),\n                model = this.dataSource.getByUid(row.attr(kendo.attr(\"uid\")));\n\n            return model;\n        },\n\n        _mouseDownHandler: function(e) {\n            var currentTarget = $(e.currentTarget);\n\n            if (!currentTarget.hasClass(listStyles.editCell)) {\n                this._blurActiveElement();\n            }\n        },\n\n        _openEditorHandler: function(e) {\n            var that = this,\n                td = $(e.currentTarget),\n                isLockedCell = that.lockedTable && td.closest(\"table\")[0] === that.lockedTable[0],\n                selectable = that.selectable && that.selectable.options.multiple;\n\n            if (td.hasClass(listStyles.editCell) ||\n                td.has(\"a.k-grid-delete\").length ||\n                td.has(\"button.k-grid-delete\").length ||\n                (td.closest(\"tbody\")[0] !== that.tbody[0] && !isLockedCell) ||\n                $(e.target).is(\":input\") ||\n                $(e.target).is(`[class*=${listStyles.iconExpand}]`) ||\n                $(e.target).is(`[class*=${listStyles.iconCollapse}]`)) {\n\n                return;\n            }\n\n            if (that.editor) {\n                if (that.editor.end()) {\n                    if (selectable) {\n                        $(activeElement()).trigger(\"blur\");\n                    }\n                    that.closeCell();\n                    that.editCell(td);\n                }\n            } else {\n                that.editCell(td);\n            }\n        },\n\n        _renderTree: function(taskTree) {\n            TreeList.fn._render.call(this);\n\n            if (this.hasNestedColumns) {\n                this.element.addClass(\"k-gantt-treelist-nested-columns\");\n            }\n\n            if (taskTree && taskTree.length && !taskTree.editedColumn) {\n                if (this.options.rowHeight) {\n                    this._rowHeight(taskTree);\n                }\n\n                this.trigger(RENDER);\n            }\n\n            this._adjustHeight();\n        },\n\n        _rowHeight: function(tasks) {\n            var content = this.content,\n                options = this.options,\n                rowHeight = typeof options.rowHeight === STRING ? options.rowHeight : options.rowHeight + \"px\",\n                table = $(kendo.format(SIZE_CALCULATION_TEMPLATE, rowHeight)),\n                height;\n\n            kendo.applyStylesFromKendoAttributes(table, [\"height\", \"visibility\"]);\n            content.append(table);\n            height = outerHeight(table.find(\"tr\"));\n            table.remove();\n\n            this.element.find('[role=\"treegrid\"]').css(\"height\", (tasks.length * height) + \"px\");\n        },\n\n        _setData: function(tasks) {\n            this.dataSource.data(tasks);\n        },\n\n        _setWidth: function() {\n            this.element.find(\".k-grid-header table\").css(\"minWidth\", this.options.listWidth);\n            this.content.find(\"table\").css(\"minWidth\", this.options.listWidth);\n        }\n    });\n\n    ui.plugin(GanttList);\n\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}