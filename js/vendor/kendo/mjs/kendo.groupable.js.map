{"version":3,"file":"kendo.groupable.js","names":["__meta__","id","name","category","depends","advanced","$","undefined$1","kendo","window","Widget","ui","outerWidth","_outerWidth","kendoAttr","attr","extend","each","isRtl","ASCENDING","GROUP_SORT","DROP_CONTAINER","hint","target","title","htmlEncode","html","prepend","icon","iconClass","dropCue","removeText","element","contents","filter","this","nodeType","remove","Groupable","init","options","draggable","horizontalCuePosition","that","group","guid","intializePositions","_intializePositions","bind","_dropCuePositions","fn","call","support","Draggable","draggableElements","groupContainer","kendoDropTarget","dragenter","e","_canDrag","currentTarget","find","css","appendTo","dragleave","drop","position","targetElement","field","colID","sourceIndicator","indicator","dropCuePositions","lastCuePosition","length","method","parentLeft","parent","left","sortOptions","sort","data","dir","hasClass","_dropCuePosition","getOffset","parseInt","_canDrop","before","buildIndicator","wrapper","_setIndicatorSortOptions","_change","_messageContainer","_list","show","add","kendoDraggable","dragcancel","_dragCancel","dragstart","marginLeft","elementPosition","dragend","_dragEnd","drag","_drag","allowDrag","preventDefault","dataSource","addClass","_createList","_refreshHandler","unbind","refresh","groups","fieldAttr","titleAttr","items","hide","index","compare","_invalidateGroupContainer","destroy","off","events","messages","empty","indicators","grep","item","removeHandler","_removeIndicator","sender","clickHandler","dirIcon","newDir","kendoChip","label","removable","size","click","first","ns","aggregates","names","idx","map","cell","aggregate","member","split","push","toArray","descriptors","indicatorSortOptions","trigger","removeData","is","Math","ceil","right","marginRight","event","x","location","source","next","dropped","list","text","kendoChipList","selectable","insertBefore","plugin","jQuery","kendo$1"],"sources":["kendo.groupable.js"],"mappings":"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","sourcesContent":["import './kendo.core.js';\nimport './kendo.draganddrop.js';\nimport './kendo.chip.js';\nimport './kendo.chiplist.js';\nimport './kendo.icons.js';\n\nvar __meta__ = {\n    id: \"groupable\",\n    name: \"Groupable\",\n    category: \"framework\",\n    depends: [ \"core\", \"draganddrop\", \"icons\" ],\n    advanced: true\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        Widget = kendo.ui.Widget,\n        outerWidth = kendo._outerWidth,\n        kendoAttr = kendo.attr,\n        extend = $.extend,\n        each = $.each,\n        isRtl = false,\n\n        DIR = \"dir\",\n        FIELD = \"field\",\n        TITLE = \"title\",\n        ASCENDING = \"asc\",\n        DESCENDING = \"desc\",\n        REMOVEGROUP = \"removeGroup\",\n        GROUP_SORT = \"group-sort\",\n        DROP_CONTAINER = \"k-grouping-drop-container\",\n        NS = \".kendoGroupable\",\n        CHANGE = \"change\",\n        hint = function(target) {\n            var title = target.attr(kendo.attr(\"title\"));\n            if (title) {\n                title = kendo.htmlEncode(title);\n            }\n\n            return $('<div class=\"k-group-clue k-drag-clue\" />')\n                .html(title || target.attr(kendo.attr(\"field\")))\n                .prepend(kendo.ui.icon({ icon: \"cancel\", iconClass: \"k-drag-status\" }));\n        },\n        dropCue = $('<div class=\"k-grouping-dropclue\"/>');\n\n\n    function removeText(element) {\n        element.contents().filter(function() {\n            return this.nodeType === 3;\n        }).remove();\n    }\n\n    var Groupable = Widget.extend({\n        init: function(element, options) {\n            var that = this,\n                group = kendo.guid(),\n                intializePositions = that._intializePositions.bind(that),\n                draggable,\n                horizontalCuePosition,\n                dropCuePositions = that._dropCuePositions = [];\n\n            Widget.fn.init.call(that, element, options);\n\n            isRtl = kendo.support.isRtl(element);\n            horizontalCuePosition = isRtl ? \"right\" : \"left\";\n\n            that.draggable = draggable = that.options.draggable || new kendo.ui.Draggable(that.element, {\n                filter: that.options.draggableElements,\n                hint: hint,\n                group: group\n            });\n\n            that.groupContainer = $(that.options.groupContainer, that.element)\n                .kendoDropTarget({\n                    group: draggable.options.group,\n                    dragenter: function(e) {\n                        if (that._canDrag(e.draggable.currentTarget)) {\n                            kendo.ui.icon(e.draggable.hint.find(\".k-drag-status\"), { icon: \"plus\" });\n                            dropCue.css(horizontalCuePosition, 0).appendTo(that.groupContainer);\n                        }\n                    },\n                    dragleave: function(e) {\n                        kendo.ui.icon(e.draggable.hint.find(\".k-drag-status\"), { icon: \"cancel\" });\n\n                        dropCue.remove();\n                    },\n                    drop: function(e) {\n                        var targetElement = e.draggable.currentTarget,\n                            field = targetElement.attr(kendo.attr(\"field\")),\n                            title = targetElement.attr(kendo.attr(\"title\")),\n                            colID = targetElement.attr(\"id\"),\n                            sourceIndicator = that.indicator(field),\n                            dropCuePositions = that._dropCuePositions,\n                            lastCuePosition = dropCuePositions[dropCuePositions.length - 1],\n                            position,\n                            method = \"after\",\n                            parentLeft = isRtl || !lastCuePosition ? 0 : lastCuePosition.element.parent().position().left;\n                        var sortOptions = extend({}, that.options.sort, targetElement.data(GROUP_SORT));\n                        var dir = sortOptions.dir;\n\n                        if (!targetElement.hasClass(\"k-chip\") && !that._canDrag(targetElement)) {\n                            return;\n                        }\n                        if (lastCuePosition) {\n                            position = that._dropCuePosition(kendo.getOffset(dropCue).left + parentLeft + parseInt(lastCuePosition.element.css(\"marginLeft\"), 10) * (isRtl ? -1 : 1) + parseInt(lastCuePosition.element.css(\"marginRight\"), 10));\n                            if (position && that._canDrop($(sourceIndicator), position.element, position.left)) {\n                                if (position.before) {\n                                    method = \"before\";\n                                }\n\n                                position.element[method](sourceIndicator || that.buildIndicator(field, title, dir, colID).wrapper);\n                                that._setIndicatorSortOptions(field, sortOptions);\n                                that._change();\n                            }\n                        } else {\n                            removeText(that._messageContainer);\n                            that._list.element.show();\n                            that._list.add(that.buildIndicator(field, title, dir, colID).element);\n                            that._setIndicatorSortOptions(field, sortOptions);\n                            that._change();\n                        }\n                    }\n                })\n                .kendoDraggable({\n                    filter: \"div.k-chip\",\n                    hint: hint,\n                    group: draggable.options.group,\n                    dragcancel: that._dragCancel.bind(that),\n                    dragstart: function(e) {\n                        var element = e.currentTarget,\n                            marginLeft = parseInt(element.css(\"marginLeft\"), 10),\n                            elementPosition = element.position(),\n                            left = isRtl ? elementPosition.left - marginLeft : elementPosition.left + outerWidth(element);\n\n                        intializePositions();\n                        dropCue.css(\"left\", left).appendTo(that.groupContainer);\n                        kendo.ui.icon(this.hint.find(\".k-drag-status\"), { icon: \"plus\" });\n                    },\n                    dragend: function() {\n                        that._dragEnd(this);\n                    },\n                    drag: that._drag.bind(that)\n                });\n\n            draggable.bind([ \"dragend\", \"dragcancel\", \"dragstart\", \"drag\" ],\n            {\n                dragend: function() {\n                    that._dragEnd(this);\n                },\n                dragcancel: that._dragCancel.bind(that),\n                dragstart: function(e) {\n\n                    if (!that.options.allowDrag && !that._canDrag(e.currentTarget)) {\n                        e.preventDefault();\n                        return;\n                    }\n\n                    intializePositions();\n                },\n                drag: that._drag.bind(that)\n            });\n\n            that.dataSource = that.options.dataSource;\n            that._messageContainer = that.groupContainer.find(\".\" + DROP_CONTAINER);\n\n            if (!that._messageContainer.length) {\n                that._messageContainer = $('<div/>').addClass(DROP_CONTAINER).appendTo(that.groupContainer);\n            }\n\n            that._createList();\n\n            if (that.dataSource && that._refreshHandler) {\n                that.dataSource.unbind(CHANGE, that._refreshHandler);\n            } else {\n                that._refreshHandler = that.refresh.bind(that);\n            }\n\n            if (that.dataSource) {\n                that.dataSource.bind(\"change\", that._refreshHandler);\n                that.refresh();\n            }\n        },\n\n        refresh: function() {\n            var that = this,\n                dataSource = that.dataSource;\n            var groups = dataSource.group() || [];\n            var fieldAttr = kendoAttr(FIELD);\n            var titleAttr = kendoAttr(TITLE);\n\n            if (that.groupContainer) {\n                if (that._list) {\n                    that._list.remove(that._list.items());\n                    that._list.element.hide();\n                }\n\n                if (groups.length) {\n                    removeText(that._messageContainer);\n                }\n\n                each(groups, function(index, group) {\n                    var field = group.field;\n                    var dir = group.dir;\n                    var element = that.element\n                        .find(that.options.filter)\n                        .filter(function() {\n                            return $(this).attr(fieldAttr) === field;\n                        });\n                    var indicator = that.buildIndicator(field, element.attr(titleAttr), dir, element.attr(\"id\"));\n\n                    that._list.add(indicator.element);\n                    that._list.element.show();\n                    that._setIndicatorSortOptions(field, extend({}, that.options.sort, { dir: dir, compare: group.compare }));\n                });\n            }\n\n            that._invalidateGroupContainer();\n        },\n\n        destroy: function() {\n            var that = this;\n\n            Widget.fn.destroy.call(that);\n\n            that.groupContainer.off(NS);\n\n            if (that.groupContainer.data(\"kendoDropTarget\")) {\n                that.groupContainer.data(\"kendoDropTarget\").destroy();\n            }\n\n            if (that.groupContainer.data(\"kendoDraggable\")) {\n                that.groupContainer.data(\"kendoDraggable\").destroy();\n            }\n\n            if (!that.options.draggable) {\n                that.draggable.destroy();\n            }\n\n            if (that.dataSource && that._refreshHandler) {\n                that.dataSource.unbind(\"change\", that._refreshHandler);\n                that._refreshHandler = null;\n            }\n\n            if (that._list) {\n                that._list.destroy();\n            }\n\n            that.groupContainer = that.element = that.draggable = null;\n        },\n\n        events: [\"change\", \"removeGroup\"],\n\n        options: {\n            name: \"Groupable\",\n            filter: \"th\",\n            draggableElements: \"th\",\n            messages: {\n                empty: \"Drag a column header and drop it here to group by that column\"\n            },\n            sort: {\n                dir: ASCENDING,\n                compare: null\n            }\n        },\n\n        indicator: function(field) {\n            var indicators = $(\".k-chip\", this.groupContainer);\n            return $.grep(indicators, function(item)\n                {\n                    return $(item).attr(kendo.attr(\"field\")) === field;\n                })[0];\n        },\n\n        removeHandler: function(e) {\n            var that = this;\n\n            that._removeIndicator(e.sender.wrapper);\n        },\n\n        clickHandler: function(e) {\n            var that = this;\n            var indicator = e.sender.wrapper;\n            var dirIcon = indicator.find(\".k-chip-icon\");\n            var newDir = dirIcon.attr(kendoAttr(DIR)) === ASCENDING ? DESCENDING : ASCENDING;\n\n            dirIcon.attr(kendoAttr(DIR), newDir);\n            that._change();\n        },\n\n        buildIndicator: function(field, title, dir, id) {\n            var that = this;\n            var indicator;\n            var icon;\n            var wrapper;\n\n            dir = dir || (that.options.sort || {}).dir || ASCENDING;\n            indicator = $(`<div/>`)\n                            .kendoChip({\n                                icon: `sort-${(dir || \"asc\") == \"asc\" ? \"asc-small\" : \"desc-small\"}`,\n                                iconClass: 'k-chip-icon',\n                                label: `${title || field}`,\n                                removable: true,\n                                size: that.options.size || \"medium\",\n                                remove: that.removeHandler.bind(that),\n                                click: that.clickHandler.bind(that)\n                            }).data(\"kendoChip\");\n            wrapper = indicator.wrapper;\n            icon = wrapper.find(\".k-chip-icon\").first();\n            wrapper.attr(`data-${kendo.ns}field`, field);\n            wrapper.attr(`data-${kendo.ns}title`, title || \"\");\n\n            if (id) {\n                wrapper.attr(`data-${kendo.ns}id`, id);\n            }\n\n            icon.attr(\"title\", `(sorted ${dir == \"asc\" ? \"ascending\" : \"descending\"})`);\n            icon.attr(`data-${kendo.ns}dir`, dir);\n\n            return indicator;\n        },\n\n        _setIndicatorSortOptions: function(field, options) {\n            var indicator = $(this.indicator(field));\n            indicator.data(GROUP_SORT, options);\n        },\n\n        aggregates: function() {\n            var that = this;\n            var names;\n            var idx;\n            var length;\n\n            return that.element.find(that.options.filter).map(function() {\n                var cell = $(this),\n                    aggregate = cell.attr(kendo.attr(\"aggregates\")),\n                    member = cell.attr(kendo.attr(\"field\"));\n\n                if (aggregate && aggregate !== \"\") {\n                    names = aggregate.split(\",\");\n                    aggregate = [];\n                    for (idx = 0, length = names.length; idx < length; idx++) {\n                        aggregate.push({ field: member, aggregate: names[idx] });\n                    }\n                }\n                return aggregate;\n            }).toArray();\n        },\n\n        descriptors: function() {\n            var that = this,\n                indicators = $(\".k-chip\", that.groupContainer),\n                field,\n                aggregates = that.aggregates();\n\n            return $.map(indicators, function(item) {\n                item = $(item);\n                field = item.attr(kendo.attr(\"field\"));\n                var sortOptions = that.options.sort || {};\n                var indicatorSortOptions = item.data(GROUP_SORT) || {};\n                var dirIcon = item.find(\".k-chip-icon\");\n\n                return {\n                    field: field,\n                    dir: dirIcon.attr(kendo.attr(\"dir\")),\n                    aggregates: aggregates || [],\n                    colID: item.attr(kendo.attr(\"id\")),\n                    compare: indicatorSortOptions.compare || sortOptions.compare\n                };\n            });\n        },\n\n        _removeIndicator: function(indicator) {\n            var that = this;\n\n            that.trigger(REMOVEGROUP, {\n                field: indicator.attr(kendo.attr(\"field\")),\n                colID: indicator.attr(kendo.attr(\"id\")),\n            });\n            that._list.remove(indicator);\n            indicator.off();\n            indicator.removeData();\n            that._invalidateGroupContainer();\n            that._change();\n        },\n\n        _change: function() {\n            var that = this;\n            if (that.dataSource) {\n                var descriptors = that.descriptors();\n                if (that.trigger(\"change\", { groups: descriptors })) {\n                    that.refresh();\n                    return;\n                }\n                that.dataSource.group(descriptors);\n            }\n        },\n\n        _dropCuePosition: function(position) {\n            var that = this;\n            var dropCuePositions = this._dropCuePositions;\n            if (!dropCue.is(\":visible\") || dropCuePositions.length === 0) {\n                return;\n            }\n\n            position = Math.ceil(position);\n\n            var lastCuePosition = dropCuePositions[dropCuePositions.length - 1],\n                left = lastCuePosition.left,\n                right = lastCuePosition.right,\n                marginLeft = parseInt(lastCuePosition.element.css(\"marginLeft\"), 10),\n                marginRight = parseInt(lastCuePosition.element.css(\"marginRight\"), 10),\n                parentLeft = lastCuePosition.element.parent().position().left - parseInt(that.groupContainer.css(\"paddingLeft\"), 10);\n\n            if (position >= right && !isRtl || position < left && isRtl) {\n                position = {\n                    left: lastCuePosition.element.position().left + (!isRtl ? outerWidth(lastCuePosition.element) + marginRight : parentLeft - marginLeft),\n                    element: lastCuePosition.element,\n                    before: false\n                };\n            } else {\n                position = $.grep(dropCuePositions, function(item) {\n                    return (item.left <= position && position <= item.right) || (isRtl && position > item.right);\n                })[0];\n\n                if (position) {\n                    position = {\n                        left: isRtl ? position.element.position().left + outerWidth(position.element) + marginRight + parentLeft : position.element.position().left - marginLeft,\n                        element: position.element,\n                        before: true\n                    };\n                }\n            }\n\n            return position;\n        },\n        _drag: function(event) {\n            var position = this._dropCuePosition(event.x.location);\n\n            if (position) {\n                dropCue.css({ left: position.left, right: \"auto\" });\n            }\n        },\n        _canDrag: function(element) {\n            var field = element.attr(kendo.attr(\"field\"));\n\n            return element.attr(kendo.attr(\"groupable\")) != \"false\" &&\n                field &&\n                (element.hasClass(\"k-chip\") ||\n                    !this.indicator(field));\n        },\n        _canDrop: function(source, target, position) {\n            var next = source.next(),\n                result = source[0] !== target[0] && (!next[0] || target[0] !== next[0] || (!isRtl && position > next.position().left || isRtl && position < next.position().left));\n            return result;\n        },\n        _dragEnd: function(draggable) {\n            var that = this,\n                field = draggable.currentTarget.attr(kendo.attr(\"field\")),\n                sourceIndicator = that.indicator(field);\n\n            if (draggable !== that.options.draggable && !draggable.dropped && sourceIndicator) {\n                that._removeIndicator($(sourceIndicator));\n            }\n\n            that._dragCancel();\n        },\n        _dragCancel: function() {\n            dropCue.remove();\n            this._dropCuePositions = [];\n        },\n        _intializePositions: function() {\n            var that = this,\n                indicators = $(\".k-chip\", that.groupContainer),\n                left;\n\n            that._dropCuePositions = $.map(indicators, function(item) {\n                item = $(item);\n                left = kendo.getOffset(item).left;\n                return {\n                    left: parseInt(left, 10),\n                    right: parseInt(left + outerWidth(item), 10),\n                    element: item\n                };\n            });\n        },\n        _invalidateGroupContainer: function() {\n            var that = this;\n            var groupContainer = that.groupContainer;\n            var list = that._list;\n\n            if (groupContainer && list && list.element.is(\":empty\")) {\n                this._messageContainer.text(this.options.messages.empty);\n            }\n        },\n\n        _createList: function() {\n            var that = this;\n\n            that.groupContainer.find(\".k-chip-list\").remove();\n            that._list = $(\"<div/>\").kendoChipList({ selectable: \"none\", size: that.options.size || \"medium\" }).data(\"kendoChipList\");\n            that._list.element.insertBefore(that._messageContainer);\n        }\n    });\n\n    kendo.ui.plugin(Groupable);\n\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}