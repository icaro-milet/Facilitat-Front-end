{"version":3,"file":"kendo.html.base.js","names":["__meta__","id","name","category","description","depends","features","$","undefined$1","kendo","window","Class","html","HTMLBase","extend","init","element","options","this","_initOptions","stylingOptions","_addClasses","that","previouslyAddedClasses","wrapper","data","map","option","validFill","cssProperties","getValidClass","widget","propName","value","fillMode","length","fill","removeClass","join","addClass","outerHTML","jQuery","kendo$1"],"sources":["kendo.html.base.js"],"mappings":"MAAO,kBAEP,IAAIA,SAAW,CACXC,GAAI,YACJC,KAAM,YACNC,SAAU,MACVC,YAAa,GACbC,QAAS,CAAC,QACVC,SAAU,KAGd,SAAUC,EAAGC,GACT,IAAIC,EAAQC,OAAOD,MACfE,EAAQF,EAAME,MAElBF,EAAMG,KAAOH,EAAMG,MAAQ,GAE3B,IAAIC,EAAWF,EAAMG,OAAO,CACxBC,KAAM,SAASC,EAASC,GACTC,KACNF,QAAUT,EAAES,UACjBC,EAAUA,GAAW,IACNf,KAHJgB,KAINC,aAAaF,IAEtBA,QAAS,CACLG,eAAgB,IAEpBC,YAAa,WACT,IAAIC,EAAOJ,KACPD,EAAUK,EAAKL,QACfG,EAAiBH,EAAQG,eACzBG,EAAyBD,EAAKE,QAAQC,KAAK,iBAE/CL,EAAiBA,EAAeM,KAAI,SAASC,GACzC,IAAIC,EAEJ,MAAe,eAAXD,IACAC,EAAYnB,EAAMoB,cAAcC,cAAc,CAC1CC,OAAQd,EAAQf,KAChB8B,SAAU,WACVC,MAAOhB,EAAQiB,aAGoB,IAArBN,EAAUO,OAKzB1B,EAAMoB,cAAcC,cAAc,CACrCC,OAAQd,EAAQf,KAChB8B,SAAUL,EACVM,MAAOhB,EAAQU,GACfS,KAAMnB,EAAQiB,WARH,MAYfX,GACAD,EAAKE,QAAQa,YAAYd,EAAuBe,KAAK,MAGzDhB,EAAKE,QAAQC,KAAK,gBAAiBL,GACnCE,EAAKE,QAAQe,SAASnB,EAAekB,KAAK,OAE9C1B,KAAM,WAGF,OAFWM,KAECM,QAAQ,GAAGgB,aAI/BjC,EAAEO,OAAOL,EAAMG,KAAM,CACjBC,SAAUA,IA7DlB,CAgEGH,OAAOD,MAAMgC,QAChB,IAAIC,QAAUjC,aAELiC","sourcesContent":["import './kendo.core.js';\n\nvar __meta__ = {\n    id: \"html.base\",\n    name: \"Html.Base\",\n    category: \"web\",\n    description: \"\",\n    depends: [\"core\"],\n    features: []\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        Class = kendo.Class;\n\n    kendo.html = kendo.html || {};\n\n    var HTMLBase = Class.extend({\n        init: function(element, options) {\n            var that = this;\n            that.element = $(element);\n            options = options || {};\n            delete options.name;\n            that._initOptions(options);\n        },\n        options: {\n            stylingOptions: []\n        },\n        _addClasses: function() {\n            var that = this,\n                options = that.options,\n                stylingOptions = options.stylingOptions,\n                previouslyAddedClasses = that.wrapper.data(\"added-classes\");\n\n            stylingOptions = stylingOptions.map(function(option) {\n                var validFill;\n\n                if (option === \"themeColor\") {\n                    validFill = kendo.cssProperties.getValidClass({\n                        widget: options.name,\n                        propName: \"fillMode\",\n                        value: options.fillMode\n                    });\n\n                    if (!validFill || validFill.length === 0) {\n                        return \"\";\n                    }\n                }\n\n                return kendo.cssProperties.getValidClass({\n                    widget: options.name,\n                    propName: option,\n                    value: options[option],\n                    fill: options.fillMode\n                });\n            });\n\n            if (previouslyAddedClasses) {\n                that.wrapper.removeClass(previouslyAddedClasses.join(\" \"));\n            }\n\n            that.wrapper.data(\"added-classes\", stylingOptions);\n            that.wrapper.addClass(stylingOptions.join(\" \"));\n        },\n        html: function() {\n            var that = this;\n\n            return that.wrapper[0].outerHTML;\n        }\n    });\n\n    $.extend(kendo.html, {\n        HTMLBase: HTMLBase\n    });\n\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}