{"version":3,"file":"kendo.html.input.js","names":["__meta__","id","name","category","description","depends","features","$","undefined$1","kendo","window","HTMLBase","html","HTMLInput","extend","init","element","options","that","this","fn","call","_wrapper","_addClasses","label","labelPosition","labelId","encoded","elementId","wrapper","addClass","inputClass","prop","type","guid","labelEl","labelClass","text","attr","optional","append","optionalClass","optionalText","after","wrapperHtml","outerHTML","HTMLCheckBox","rounded","size","stylingOptions","HTMLRadioButton","renderCheckBox","arguments","isPlainObject","renderRadioButton","cssProperties","registerPrefix","registerValues","values","roundedValues","concat","jQuery","kendo$1"],"sources":["kendo.html.input.js"],"mappings":"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","sourcesContent":["import './kendo.html.base.js';\n\nvar __meta__ = {\n    id: \"html.input\",\n    name: \"Html.Input\",\n    category: \"web\",\n    description: \"HTML rendering utility for Kendo UI for jQuery.\",\n    depends: [ \"html.base\" ],\n    features: []\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        HTMLBase = kendo.html.HTMLBase;\n\n    var renderCheckBox = function(element, options) {\n        if (arguments[0] === undefined$1 || $.isPlainObject(arguments[0])) {\n            options = element;\n            element = $(\"<input />\");\n        }\n\n        return (new HTMLCheckBox(element, options)).html();\n    };\n\n    var renderRadioButton = function(element, options) {\n        if (arguments[0] === undefined$1 || $.isPlainObject(arguments[0])) {\n            options = element;\n            element = $(\"<input />\");\n        }\n\n        return (new HTMLRadioButton(element, options)).html();\n    };\n\n    var HTMLInput = HTMLBase.extend({\n        init: function(element, options) {\n            var that = this;\n            HTMLBase.fn.init.call(that, element, options);\n            that._wrapper();\n            that._addClasses();\n        },\n        options: {\n            label: null,\n            labelPosition: \"after\",\n            labelId: null,\n            encoded: true\n        },\n        _wrapper: function() {\n            var that = this,\n                element = that.element[0],\n                options = that.options,\n                elementId = element.id;\n\n            that.wrapper = that.element\n                .addClass(options.inputClass)\n                .prop(\"type\", options.type);\n\n            if (!elementId && !!options.label) {\n                element.id = elementId = kendo.guid();\n            }\n\n            if (!!options.label) {\n                that.labelEl = $(\"<label for='\" + elementId + \"' class='\" + options.labelClass + \"'>\");\n\n                if (options.encoded) {\n                    that.labelEl.text(options.label);\n                } else {\n                    that.labelEl.html(options.label);\n                }\n\n                if (options.labelId) {\n                    that.labelEl.attr(\"id\", options.labelId);\n                }\n\n                if (options.optional) {\n                    that.labelEl.append(\"<span class='\" + options.optionalClass + \"'>\" + options.optionalText + \"</span>\");\n                }\n\n                that.element[options.labelPosition](that.labelEl);\n            }\n        },\n        html: function() {\n            var that = this,\n                after = that.options.labelPosition === \"after\",\n                wrapperHtml = HTMLBase.fn.html.call(that);\n\n            if (!that.labelEl) {\n                return wrapperHtml;\n            }\n\n            if (after) {\n                return wrapperHtml + that.labelEl[0].outerHTML;\n            }\n\n            return that.labelEl[0].outerHTML + wrapperHtml;\n        }\n    });\n\n    var HTMLCheckBox = HTMLInput.extend({\n        init: function(element, options) {\n            var that = this;\n            HTMLInput.fn.init.call(that, element, options);\n            that._addClasses();\n        },\n        options: {\n            name: \"HTMLCheckBox\",\n            inputClass: \"k-checkbox\",\n            labelClass: \"k-checkbox-label\",\n            optionalClass: \"k-label-optional\",\n            optionalText: \"(Optional)\",\n            type: \"checkbox\",\n            rounded: \"medium\",\n            size: \"medium\",\n            stylingOptions: [ \"size\", \"rounded\" ]\n        }\n    });\n\n    var HTMLRadioButton = HTMLInput.extend({\n        init: function(element, options) {\n            var that = this;\n            HTMLInput.fn.init.call(that, element, options);\n            that._addClasses();\n        },\n        options: {\n            name: \"HTMLRadioButton\",\n            inputClass: \"k-radio\",\n            labelClass: \"k-radio-label\",\n            optionalClass: \"k-label-optional\",\n            optionalText: \"(Optional)\",\n            type: \"radio\",\n            size: \"medium\",\n            stylingOptions: [ \"size\"]\n        }\n    });\n\n    $.extend(kendo.html, {\n        renderCheckBox: renderCheckBox,\n        renderRadioButton: renderRadioButton,\n        HTMLInput: HTMLInput,\n        HTMLCheckBox: HTMLCheckBox,\n        HTMLRadioButton: HTMLRadioButton\n    });\n\n    kendo.cssProperties.registerPrefix(\"HTMLCheckBox\", \"k-checkbox-\");\n\n    kendo.cssProperties.registerValues(\"HTMLCheckBox\", [{\n        prop: \"rounded\",\n        values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n    }]);\n\n    kendo.cssProperties.registerPrefix(\"HTMLRadioButton\", \"k-radio-\");\n\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}