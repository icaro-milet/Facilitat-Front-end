{"version":3,"file":"kendo.pivotgrid.js","names":["Navigation","constructor","options","this","tabIndex","root","eventHandlers","update","elements","Array","from","querySelectorAll","selectors","join","first","querySelector","last","all","length","current","find","el","matches","start","eventType","mouseEvents","ev","target","Element","closest","call","undefined","addEventListener","keyboardEvents","key","stop","removeEventListener","focusElement","element","previous","removeAttribute","classList","remove","setAttribute","String","focus","preventScroll","scrollableValuesSel","scrollableColumnHeaderSel","scrollableRowHeaderSel","emptyCellSel","tableSel","cellSel","scrollables","selectors$1","onEnter","nav","icon","index","indexOf","click","preventDefault","tryScrollLeft","scrollable","elToScroll","offsetLeft","scrollLeft","tryScrollRight","offsetWidth","tryScrollUp","scrollTop","offsetTop","tryScrollDown","offsetHeight","scrollTo","scrollFunc","forEach","scroll","tableMap","table","rows","colsCount","cells","map","c","colSpan","reduce","prev","cur","row","r","curColSpan","colSp","rowSp","rowSpan","ind","findIndex","val","curInd","navigationMap","columnHeader","rowHeader","values","emptyCell","emptyCellRow","fill","i","push","concat","getTargetPos","ctrlKey","metaKey","cellAt","pos","targetPos","nextPos","next","keyboardEvents$1","keydown","ArrowLeft","ArrowRight","ArrowUp","ArrowDown","o","_target","_ev","nextElementSibling","HTMLElement","parentNode","setTimeout","confHeader","Enter","Space","Home","ro","Boolean","x","End","mouseEvents$1","hasAttribute","PivotGridNavigation","super","arguments","onEscape","pivot","previousElementSibling","confButton","pivotCell","navigate","dir","onDelete","Tab","shiftKey","Escape","Delete","Backspace","ConfiguratorNavigation","__meta__","id","name","category","description","depends","features","$","undefined$1","kendo","window","ui","encode","htmlEncode","Class","Comparer","data","Widget","DataSource","outerWidth","_outerWidth","outerHeight","_outerHeight","common","pivotgrid","fetchDiscover","normalizeFilter","Query","normalizeSort","toString","identity","extend","keys","isFunction","fetchData","createLocalDataState","createDataTree","sumAggregate","averageAggregate","minAggregate","maxAggregate","createDataState","toColumns","toRows","toTree","toData","headersReducer","RESIZE","READ","CHANGE","ERROR","PROGRESS","MEASURES","STATERESET","AUTO","DIV","NS","ROW_TOTAL_KEY","DATABINDING","DATABOUND","EXPANDMEMBER","HEADERTEMPLATE","headerClass","colspan","rowspan","expandable","iconClass","role","expanded","COLLAPSEMEMBER","STATE_EXPANDED_ICONNAME","STATE_COLLAPSED_ICONNAME","HEADER_TEMPLATE","member","caption","PIVOTGRID_TREND_ICONS_MAP","KPISTATUS_TEMPLATE","dataItem","value","KPITREND_TEMPLATE","DATACELL_TEMPLATE","fmtValue","tableStyles","normalizeMeasures","measure","descriptor","descriptors","d","type","normalizeMembers","expand","slice","normalizeName","accumulateMembers","accumulator","rootTuple","tuple","level","idx","children","members","stringify","buildPath","descriptorsForAxes","tuples","result","k","JSON","parse","descriptorsForMembers","axis","measures","firstTuple","tupleMembers","found","j","getName","hierarchy","addMissingPathMembers","tupletoSearch","findExistingTuple","tupleToDescriptors","createAggregateGetter","m","measureGetter","getter","field","aggregatorContext","state","aggregate","isNumber","isNaN","isDate","getTime","flattenSortDescriptors","split","pop","createLocalMeasure","format","measureMap","Sum","Average","Min","Max","item","bind","uniqueName","functions","sum","count","average","max","min","PivotCubeBuilder","init","dimensions","_normalizeDescriptors","keyField","fields","_rootTuples","rootNames","measureAggregators","parts","aggregatorsLength","dimensionsSchema","measureIdx","rootNamesLength","levelName","levelNum","hasChildren","parentName","_sortMap","sortDescriptors","flattenTree","mapItem","sortedMaps","sortTree","directParentName","fillSortTree","sortItemsTree","create","flatColumns","_expandedTuples","currentKeys","memberInfo","expandedNames","accumulatorKeys","isEmptyObject","_findExpandedMember","uniquePath","names","expandedIdx","_asTuples","rootInfo","expandedInfo","apply","_measuresInfo","rowAxis","aggregateNames","resultFuncs","formats","_toDataArray","measuresInfo","rowKeys","columnKeys","aggregates","n","column","columnKey","columnMeasureNames","rowMeasureNamesLength","rowMeasureNames","rowLength","columnLength","items","_addData","resultFunc","ordinal","_matchDescriptors","getters","parentField","expectedValue","_calculateAggregate","totalItem","aggregator","_processColumns","columns","rowTotal","updateColumn","path","columnIndex","childrenMap","_measureAggregators","defaultAggregate","measureDescriptors","aggregators","toLowerCase","Error","_buildGetters","_parseDescriptors","parsedDescriptors","parseDescriptors","getRootNames","mapNames","_filter","filter","expr","filters","operator","_normalizeFilter","logic","process","measuresRowAxis","measuresAxis","columnDescriptors","rowDescriptors","rowValue","rowIdx","rowDescriptor","rowName","columnsInfo","rowsInfo","aggregatedData","columnGetters","rowGetters","processed","expandedColumns","expandedRows","hasExpandedRows","sort","axes","PivotTransport","transport","discover","read","destroy","success","catalog","connection","cube","PivotDataSourceV2","schema","cubes","catalogs","hierarchies","levels","cubeSchema","_cubeSchema","fn","transportOptions","_online","XmlaTransportV2","_columns","_rows","_measuresAxis","_measures","serverSorting","serverPaging","serverFiltering","serverGrouping","serverAggregates","normalizeAxis","_mergeState","fetch","callback","that","_data","_query","done","_createSettings","settings","dimensionsSettings","displayValueFunc","sortValueFunc","displayValue","sortValue","defaultHierarchy","restoreMeasure","memberType","_pristineData","distinct","levelUniqueName","childrenCardinality","isPrevented","trigger","params","_params","deferred","Deferred","originalData","reader","columnSettings","columnAxes","rowSettings","rowAxes","stateArgs","dataTree","dataField","columnsData","reverse","_saveState","resolve","newDataState","response","_preventRefresh","error","err","promise","measureAxes","schemaMeasures","command","restrictions","catalogName","cubeName","schemaKPIs","schemaDimensions","schemaHierarchies","dimensionName","dimensionUniqueName","schemaLevels","hierarchyName","hierarchyUniqueName","schemaCubes","schemaCatalogs","schemaMembers","_columnTuples","_rowTuples","_view","PivotDataSource","cubeBuilder","_skipNormalize","_axes","memberUniqueName","schemaData","dataGetter","_rawData","treeOp","_clearAxesData","query","rowsAxisDescriptors","columnsAxisDescriptors","_expandPath","origin","other","memberToExpand","_lastExpanded","_descriptorsForAxis","_process","e","page","pageSize","group","_updateLocalData","expandColumn","expandRow","_processResult","processedData","_requestData","columnIndexes","rowIndexes","resultAxis","axisToSkip","hasColumnTuples","_rowMeasures","_normalizeTuples","_columnMeasures","_normalizeData","columnsLength","rowsLength","validateAxis","sourceTuples","targetTuples","columnIdx","dataIdx","targetColumnsLength","membersCount","measuresLength","tupleIndex","adjustDataByColumn","adjustDataByRow","_mergeAxes","_readData","newData","_createTuple","buildRoot","Number","_hasRoot","source","isRoot","sourceAxes","startIndex","columnMeasures","rowMeasures","oldRowsLength","newRowsLength","oldColumnsLength","newColumnsLength","rowIndex","dataIndex","calcIndex","indices","buildDataIndices","Math","prepareDataOnColumns","parseSource","mergedColumns","mergeTuples","targetIndex","sourceIndex","parseInt","prepareDataOnRows","mergedRows","findDataIndex","parsedRoot","memberIndex","offset","_mergeColumnData","_mergeRowData","toAdd","toJSON","drop","splice","_observe","_ranges","_addRange","_total","_pristineTotal","memberIdx","roots","indexes","tupleName","_addMissingDataItems","metadata","addEmptyDataItem","_normalizeOrdinals","lastOrdinal","converter","_handleCustomErrors","status","reject","kpis","sortFunction","currentItem","newAxis","collection","queue","shift","counter","targetMembers","sourceMembers","equalTuples","second","equal","toFind","membersLength","addMembers","len","findParentMember","parentMember","parentPath","normalizeTupleMeasures","measureIndex","measurePosition","spliceIndex","baseHierarchyPath","memberName","expandMemberDescriptor","sortDescriptor","sortDescriptorForMember","crossJoin","crossJoinCommand","tmp","measureNames","rootName","rootLength","l","child","serializeMembers","crossJoinCommands","dataSource","filterFunctionFormats","contains","doesnotcontain","startswith","endswith","eq","neq","serializeExpression","expression","serializeOptions","parentTagName","capitalize","replace","toUpperCase","xmlaDiscoverCommands","convertersMap","serializeFilters","properties","Catalog","XmlaTransport","RemoteTransport","originalOptions","url","setup","dataType","contentType","parameterMap","ajax","fetchOptions","noop","then","catch","asArray","object","translateAxis","captionGetter","unameGetter","levelNameGetter","levelNumGetter","childrenGetter","hierarchyGetter","parentNameGetter","Member","schemaDataReaderMap","groupName","displayFolder","defaultFormat","goal","trend","statusGraphic","trendGraphic","defaultMember","orderingProperty","xmlaReaderMethods","XmlaDataReader","XmlDataReader","_extend","methodName","option","xml","errors","fault","faultstring","faultcode","ordinalGetter","valueGetter","fmtValueGetter","_mapSchema","obj","transports","xmla","readers","removeExpr","expressions","PivotSettingTarget","addClass","_refreshHandler","refresh","template","actions","enabled","ns","emptyTemplate","_sortable","on","action","attr","hasClass","sortable","sortDirection","currentTarget","filterable","fieldMenu","PivotFieldMenu","messages","setting","empty","setDataSource","unbind","kendoSortable","connectWith","hint","cursor","change","add","move","newIndex","_isKPI","validate","isMeasure","isArray","sortExpressions","_sort","skipExpr","allowUnsort","html","sortIcon","_sortIcon","off","sortExpr","PivotSettingTargetV2","parent","text","navigatable","chip","keyCode","DELETE","BACKSPACE","configuratorNavigation","DOWN","altKey","LEFT","RIGHT","UP","otherTarget","PivotFieldMenuV2","events","_applyState","_sortState","_stateFilter","_savedState","_cancelChanges","deepExtend","_initialState","_redraw","_state","newState","modifyInit","blur","_savedFilter","_emptyState","enable","removeClass","_targetsHTML","menuenabled","PivotConfiguratorButton","_element","_attachEvents","configurator","setOptions","toggle","pivotEl","toggleClass","getKendoPivotGridV2","_setContentWidth","_updateDimensions","PivotContainer","_addClasses","configuratorPosition","className","PivotGridV2","_dataSource","_bindConfigurator","_ariaId","guid","_wrapper","_columnHeadersWrapper","_rowHeadersWrapper","_contentWrapper","wrapper","append","_columnBuilder","ColumnRowBuilder","columnHeaderTemplate","ariaId","_rowBuilder","rowHeaderTemplate","_contentBuilder","ContentBuilderV2","dataCellTemplate","_scrollable","button","is","isRow","paths","eventName","reducerPayLoad","payload","tree","getTree","currentAxes","newHeaders","autoBind","_aria","_initPivotGridNavigation","notify","height","columnWidth","emptyCellLabel","_windowResizeHandler","navigation","firstCell","_matchAriaAttributes","rowHeaderRows","rowHeaderCols","acc","curr","getAttribute","colHeaderRows","colHeaderCells","valueTableCells","firstColHeadersRow","firstColHeaderRowCellsIds","valueCellsIds","filterAndMap","idParts","cell","cellColIndex","colHeaderCellsIds","headerCellColIndex","headerCellColspan","arr","predicate","mapper","_progressHandler","_errorHandler","_requestStart","_error","_resize","div","scrollbar","style","setProperty","document","createElement","cssText","innerHTML","body","appendChild","scrollWidth","removeChild","columnsHeader","rowsHeader","_wheelScroll","delta","wheelDeltaY","one","css","_progress","progress","contentTable","columnTable","rowTable","width","kendoPivotConfiguratorV2","cellInfoByElement","cellInfo","contentBuilder","columnsCount","rowsCount","columnTuple","hash","rowTuple","lastFocusedCellID","_activeElement","lastCellIdWithTabIndex","setTuples","build","setRowColumnInfo","columnHeaderLeafs","getHeaderLeafs","rowHeaderLeafs","columnHeaderBreadth","getBreadth","rowHeaderDepth","plugin","PivotGrid","columnBuilder","rowBuilder","support","isRtl","_createLayout","ColumnBuilder","RowBuilder","ContentBuilder","_templates","builder","eventArgs","parseJSON","request","childrenLoaded","maxChildren","reorderable","kpiStatusTemplate","kpiTrendTemplate","measureFields","columnFields","rowFields","columnTemplate","rowTemplate","dataTemplate","useWithBlock","kendoPivotConfigurator","columnInfo","rowInfo","view","measuresTarget","rowsTarget","columnsTarget","clearTimeout","_headerReflowTimeout","_stateResetHandler","_stateReset","reset","_measureFields","_createSettingTarget","pivotOptions","getIcons","_initSettingTargets","layoutTable","leftContainer","rightContainer","gridWrapper","wrap","content","columnsHeaderTree","dom","Tree","rowsHeaderTree","contentTree","firstChild","_setSectionsWidth","_setSectionsHeight","_setContentHeight","_columnHeaderReflow","browser","mozilla","leftColumn","measureFieldsHeight","columnFieldsHeight","rowFieldsHeight","innerHeight","columnsHeight","padding","firstRowHeight","secondRowHeight","calculatedWidth","minWidth","ceil","_resetColspan","skipScrollbar","clientHeight","_colspan","_layoutTimeout","_axisMeasures","hasMeasure","columnAxis","render","_indexes","touchScroller","contentResized","movable","sender","y","htmlNode","createMetadata","maxMembers","addColElements","addRowElements","addColumCell","rowEl","rowItem","cellEl","total","headerTemplate","columnHeaderRows","treeData","headerRows","headerLeafs","breadth","rowHeaderBreadth","_tree","_breadth","_headerLeafs","tbody","_tbody","colgroup","_colGroup","_rowLength","_buildRows","_normalize","cellsLength","cellIdx","tupleAll","_rowIndex","_row","parentRow","rowKey","notFirst","collapsed","measureRow","_cell","_content","childRow","childrenLength","allCell","nextMember","cellChildren","memberCollapsed","rootLevelNum","cellIconEl","maxcolSpan","allRow","firstMemberName","tuplePath","hasChild","axisInfo","axisInfoMember","skipChildren","firstEmpty","_buildRow","templateInfo","cellContent","startIdx","PivotExcelExporter","widget","columnHeaderTable","rowHeaderTable","columnHeaderLength","rowHeaderLength","autoWidth","_cells","background","color","contentRows","columnRows","rowRows","_freezePane","colSplit","rowSplit","workbook","sheets","freezePane","PivotExcelMixin","proto","excel","saveAsExcel","proxyURL","fileName","book","ooxml","Workbook","toDataURLAsync","dataURI","saveAs","forceProxy","prototype","PDFMixin","_drawPDF","_drawPDFShadow","avoidLinks","pdf","jQuery","kendo$1"],"sources":["kendo.pivotgrid.js"],"mappings":"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","sourcesContent":["import './kendo.pivot.common.js';\nimport './kendo.dom.js';\nimport './kendo.data.js';\nimport './kendo.icons.js';\n\nclass Navigation {\n    constructor(options) {\n        this.tabIndex = 0;\n        this.root = null;\n        this.eventHandlers = {};\n        this.update = () => { };\n        this.tabIndex = options.tabIndex;\n    }\n    get elements() {\n        return this.root ? Array.from(this.root.querySelectorAll(this.selectors.join(','))) : [];\n    }\n    get first() {\n        return (this.root && this.root.querySelector(this.selectors.join(','))) || null;\n    }\n    get last() {\n        const all = this.elements;\n        return all[all.length - 1] || null;\n    }\n    get current() {\n        return this.elements.find(el => el.matches(':focus'));\n    }\n    start(root) {\n        this.root = root;\n        for (const eventType in this.mouseEvents) {\n            if (this.mouseEvents[eventType]) {\n                this.eventHandlers[eventType] = (ev => {\n                    const target = ev.target instanceof Element && ev.target.closest(this.selectors.join(','));\n                    if (target) {\n                        this.mouseEvents[eventType].call(undefined, target, this, ev);\n                    }\n                });\n                root.addEventListener(eventType, this.eventHandlers[eventType]);\n            }\n        }\n        for (const eventType in this.keyboardEvents) {\n            if (this.keyboardEvents[eventType]) {\n                this.eventHandlers[eventType] = (ev => {\n                    const target = ev.target instanceof Element && ev.target.closest(this.selectors.join(','));\n                    const key = ev.key === ' ' ? 'Space' : ev.key;\n                    if (target && this.keyboardEvents[eventType][key]) {\n                        this.keyboardEvents[eventType][key].call(undefined, target, this, ev);\n                    }\n                });\n                root.addEventListener(eventType, this.eventHandlers[eventType]);\n            }\n        }\n    }\n    stop() {\n        if (this.root) {\n            for (const eventType in this.eventHandlers) {\n                if (this.eventHandlers[eventType]) {\n                    this.root.removeEventListener(eventType, this.eventHandlers[eventType]);\n                }\n            }\n        }\n        this.root = null;\n    }\n    focusElement(element, previous) {\n        if (element) {\n            if (previous) {\n                previous.removeAttribute('tabindex');\n                previous.classList.remove('k-focus');\n            }\n            element.setAttribute('tabindex', String(this.tabIndex));\n            element.focus({ preventScroll: true });\n        }\n    }\n}\n\nconst scrollableValuesSel = '.k-pivotgrid .k-pivotgrid-values';\nconst scrollableColumnHeaderSel = '.k-pivotgrid .k-pivotgrid-column-headers';\nconst scrollableRowHeaderSel = '.k-pivotgrid .k-pivotgrid-row-headers';\nconst emptyCellSel = '.k-pivotgrid > .k-pivotgrid-empty-cell';\nconst tableSel = 'table.k-pivotgrid-table';\nconst cellSel = '.k-pivotgrid-cell';\nconst scrollables = [scrollableValuesSel, scrollableColumnHeaderSel, scrollableRowHeaderSel].join(',');\nconst selectors$1 = [\n    emptyCellSel,\n    [scrollableColumnHeaderSel, tableSel, cellSel].join(' '),\n    [scrollableRowHeaderSel, tableSel, cellSel].join(' '),\n    [scrollableValuesSel, tableSel, cellSel].join(' ')\n];\nconst onEnter = (target, nav, ev) => {\n    const icon = target.querySelector('.k-icon, .k-svg-icon');\n    if (icon) {\n        const index = nav.elements.indexOf(target);\n        nav.update = () => {\n            nav.focusElement(nav.elements[index], null);\n            nav.update = () => { };\n        };\n        icon.click();\n        ev.preventDefault();\n    }\n};\nconst tryScrollLeft = (target, scrollable, elToScroll) => {\n    if (target.offsetLeft < scrollable.scrollLeft) {\n        elToScroll.scrollLeft = target.offsetLeft;\n    }\n};\nconst tryScrollRight = (target, scrollable, elToScroll) => {\n    if (target.offsetLeft + target.offsetWidth > scrollable.scrollLeft + scrollable.offsetWidth &&\n        target.offsetWidth < scrollable.offsetWidth) {\n        elToScroll.scrollLeft = target.offsetLeft + target.offsetWidth - scrollable.offsetWidth;\n    }\n};\nconst tryScrollUp = (target, scrollable, elToScroll) => {\n    if (scrollable.scrollTop && target.offsetTop < scrollable.scrollTop) {\n        elToScroll.scrollTop = target.offsetTop;\n    }\n};\nconst tryScrollDown = (target, scrollable, elToScroll) => {\n    if (target.offsetTop + target.offsetHeight > scrollable.scrollTop + scrollable.offsetHeight &&\n        target.offsetHeight < scrollable.offsetHeight) {\n        elToScroll.scrollTop = target.offsetTop + target.offsetHeight - scrollable.offsetHeight;\n    }\n};\nconst scrollTo = (target, root, scrollFunc) => {\n    const elToScroll = root.querySelector(scrollableValuesSel);\n    const scrollable = target && target.closest(scrollables);\n    if (!elToScroll || !scrollable || !target) {\n        return;\n    }\n    scrollFunc.forEach(scroll => scroll(target, scrollable, elToScroll));\n};\nconst tableMap = (table) => {\n    const rows = Array.from(table.rows);\n    const colsCount = Array.from((rows && rows[0] && rows[0].cells) || [])\n        .map(c => c.colSpan)\n        .reduce((prev, cur) => prev + cur, 0);\n    const map = rows.map(() => new Array(colsCount));\n    rows.forEach((row, r) => {\n        let curColSpan = 0;\n        Array.from(row.cells).forEach((c) => {\n            for (let colSp = 0; colSp < c.colSpan; colSp++) {\n                for (let rowSp = 0; rowSp < c.rowSpan; rowSp++) {\n                    const ind = map[r + rowSp].findIndex((val, curInd) => curInd >= curColSpan && !val);\n                    map[r + rowSp][ind] = c;\n                }\n                curColSpan++;\n            }\n        });\n    });\n    return map;\n};\nconst navigationMap = (root) => {\n    const columnHeader = tableMap(root.querySelector([scrollableColumnHeaderSel, tableSel].join(' ')));\n    const rowHeader = tableMap(root.querySelector([scrollableRowHeaderSel, tableSel].join(' ')));\n    const values = tableMap(root.querySelector([scrollableValuesSel, tableSel].join(' ')));\n    const emptyCell = root.querySelector(emptyCellSel);\n    const emptyCellRow = new Array(rowHeader[0].length).fill(emptyCell);\n    const map = [];\n    for (let i = 0; i < columnHeader.length; i++) {\n        map.push(emptyCellRow.concat(columnHeader[i]));\n    }\n    for (let i = 0; i < rowHeader.length; i++) {\n        map.push(rowHeader[i].concat(values[i]));\n    }\n    return map;\n};\nconst getTargetPos = (map, target) => {\n    for (let r = 0; r < map.length; r++) {\n        for (let c = 0; c < map[r].length; c++) {\n            if (map[r][c] === target) {\n                return [r, c];\n            }\n        }\n    }\n    return [-1, -1];\n};\nconst ctrlKey = (ev) => ev.ctrlKey || ev.metaKey;\nconst cellAt = (root, target, pos) => {\n    const map = navigationMap(root);\n    let targetPos = getTargetPos(map, target);\n    let nextPos = [targetPos[0] + pos[0], targetPos[1] + pos[1]];\n    let next = map[nextPos[0]] && map[nextPos[0]][nextPos[1]];\n    while (next && next === target) {\n        nextPos = [nextPos[0] + pos[0], nextPos[1] + pos[1]];\n        next = map[nextPos[0]] && map[nextPos[0]][nextPos[1]];\n    }\n    return next;\n};\nconst keyboardEvents$1 = {\n    keydown: {\n        ArrowLeft: (target, nav, ev) => {\n            ev.preventDefault();\n            const next = cellAt(nav.root, target, [0, -1]);\n            nav.focusElement(next, target);\n            scrollTo(next, nav.root, [tryScrollRight, tryScrollLeft, tryScrollDown, tryScrollUp]);\n        },\n        ArrowRight: (target, nav, ev) => {\n            ev.preventDefault();\n            const next = cellAt(nav.root, target, [0, 1]);\n            nav.focusElement(next, target);\n            scrollTo(next, nav.root, [tryScrollLeft, tryScrollRight, tryScrollDown, tryScrollUp]);\n        },\n        ArrowUp: (target, nav, ev) => {\n            ev.preventDefault();\n            const next = cellAt(nav.root, target, [-1, 0]);\n            nav.focusElement(next, target);\n            scrollTo(next, nav.root, [tryScrollRight, tryScrollLeft, tryScrollDown, tryScrollUp]);\n        },\n        ArrowDown: (target, nav, ev) => {\n            ev.preventDefault();\n            const next = cellAt(nav.root, target, [1, 0]);\n            nav.focusElement(next, target);\n            scrollTo(next, nav.root, [tryScrollRight, tryScrollLeft, tryScrollUp, tryScrollDown]);\n        },\n        o: (_target, nav, _ev) => {\n            if (!nav.root) {\n                return;\n            }\n            // FIX: ADDED manually to fix an issue where depending on the order of the config element and button\n            // you either can open the configurator with Ctrl+O, or you can close the configurator with ESC\n            let next = nav.root.nextElementSibling;\n            if (!(next && next instanceof HTMLElement)) {\n                return;\n            }\n\n            if (!next.matches('div.k-pivotgrid-configurator-button')) {\n                next = next.nextElementSibling;\n            }\n\n            if (next && next instanceof HTMLElement && next.matches('div.k-pivotgrid-configurator-button')) {\n                if (!nav.root.parentNode || nav.root.parentNode.querySelector(\".k-pivotgrid-configurator.k-hidden\")) {\n                    next.click();\n                }\n\n                setTimeout(() => {\n                    if (nav.root.parentNode) {\n                        const confHeader = nav.root.parentNode.querySelector('.k-pivotgrid-configurator-content .k-form-field .k-fields-list-wrapper .k-treeview');\n                        if (confHeader instanceof HTMLElement) {\n                            confHeader.setAttribute('tabindex', String(nav.tabIndex));\n                            confHeader.focus();\n                        }\n                    }\n                }, 0);\n            }\n        },\n        Enter: onEnter,\n        Space: onEnter,\n        Home: (target, nav, ev) => {\n            const map = navigationMap(nav.root);\n            const ctrl = ctrlKey(ev);\n            let row = ctrl ? map[0] : (map.find(ro => Boolean(ro.find(x => x === target))) || []);\n            let next = row[0];\n            if (next) {\n                nav.focusElement(next, target);\n                scrollTo(next, nav.root, [tryScrollRight, tryScrollLeft, tryScrollDown, tryScrollUp]);\n                ev.preventDefault();\n            }\n        },\n        End: (target, nav, ev) => {\n            const map = navigationMap(nav.root);\n            const ctrl = ctrlKey(ev);\n            let row = ctrl ? map[map.length - 1] : (map.find(ro => Boolean(ro.find(x => x === target))) || []);\n            let next = row && row[row.length - 1] || null;\n            if (next) {\n                nav.focusElement(next, target);\n                scrollTo(next, nav.root, [tryScrollLeft, tryScrollRight, tryScrollUp, tryScrollDown]);\n                ev.preventDefault();\n            }\n        }\n    }\n};\nconst mouseEvents$1 = {\n    click: (target, nav) => {\n        if (target && target instanceof HTMLElement) {\n            const prev = nav.elements.find(c => c.hasAttribute('tabindex')) || null;\n            nav.focusElement(target, prev);\n        }\n    }\n};\n/**\n * The PivotGrid keyboard navigation functionality.\n *\n * Usage:\n *\n * On Initialize\n * const navigation = new PivotGridNavigation({ tabindex: 0 });\n *\n * Turn on\n * navigation.start(rootDomElement);\n *\n * On After Update\n * navigation.update();\n *\n * On Destroy / Turn off\n * navigation.stop();\n */\nclass PivotGridNavigation extends Navigation {\n    constructor() {\n        super(...arguments);\n        this.selectors = selectors$1;\n        this.mouseEvents = mouseEvents$1;\n        this.keyboardEvents = keyboardEvents$1;\n    }\n}\n\nconst selectors = [\n    '.k-pivotgrid-configurator-content .k-form-field .k-fields-list-wrapper .k-treeview',\n    '.k-pivotgrid-configurator-content .k-chip',\n    '.k-pivotgrid-configurator-actions button'\n];\nconst onEscape = (_target, nav, ev) => {\n    if (ev.target instanceof HTMLElement) {\n        if (nav.root) {\n            const pivot = nav.root.previousElementSibling;\n            const confButton = nav.root.nextElementSibling;\n            const pivotCell = Array.from(pivot instanceof HTMLElement ? pivot.querySelectorAll('[tabindex]') : []).find((c) => c.tabIndex >= 0);\n            if (pivotCell instanceof HTMLElement) {\n                pivotCell.focus();\n                if (confButton instanceof HTMLElement) {\n                    confButton.click();\n                }\n            }\n        }\n    }\n};\nconst navigate = (target, nav, ev, dir) => {\n    ev.preventDefault();\n    const all = nav.elements;\n    let index = all.indexOf(target) + dir;\n    if (index < 0) {\n        index = all.length - 1;\n    }\n    nav.focusElement(all[index % all.length], target);\n};\nconst onDelete = (target, nav, ev) => {\n    if (ev.target instanceof HTMLElement) {\n        const deleteButton = ev.target.querySelector('.k-icon.k-i-x-circle, .k-svg-icon.k-svg-i-x-circle');\n        if (deleteButton instanceof HTMLElement) {\n            ev.preventDefault();\n            navigate(target, nav, ev, -1);\n        }\n    }\n};\nconst keyboardEvents = {\n    keydown: {\n        Tab: (target, nav, ev) => {\n            navigate(target, nav, ev, ev.shiftKey ? -1 : 1);\n        },\n        Escape: onEscape,\n        Delete: onDelete,\n        Backspace: onDelete\n    }\n};\nconst mouseEvents = {\n    click: (target, nav) => {\n        if (target && target instanceof HTMLElement) {\n            const prev = nav.elements.find((c) => c.hasAttribute('tabindex')) || null;\n            nav.focusElement(target, prev);\n        }\n    }\n};\n/**\n * The PivotGrid Configurator keyboard navigation functionality.\n *\n * Usage:\n *\n * On Initialize\n * const navigation = new ConfiguratorNavigation({ tabindex: 0 });\n *\n * Turn on\n * navigation.start(rootDomElement);\n *\n * On After Update\n * navigation.update();\n *\n * On Destroy / Turn off\n * navigation.stop();\n */\nclass ConfiguratorNavigation extends Navigation {\n    constructor() {\n        super(...arguments);\n        this.selectors = selectors;\n        this.mouseEvents = mouseEvents;\n        this.keyboardEvents = keyboardEvents;\n    }\n}\n\nvar __meta__ = {\n    id: \"pivotgrid\",\n    name: \"PivotGrid\",\n    category: \"web\",\n    description: \"The PivotGrid widget is a data summarization tool.\",\n    depends: [ \"dom\", \"data\", \"data.xml\", \"sortable\", \"pivot.common\", \"icons\" ],\n    features: [{\n        id: \"pivotgrid-configurator\",\n        name: \"Configurator\",\n        description: \"The PivotConfigurator widget allows the user to select data slices displayed in PivotGrid\",\n        depends: [ \"pivot.configurator\" ]\n    }, {\n        id: \"pivotgrid-filtering\",\n        name: \"Filtering\",\n        description: \"Support for filtering\",\n        depends: [ \"pivot.fieldmenu\" ]\n    }, {\n        id: \"pivotgrid-excel-export\",\n        name: \"Excel export\",\n        description: \"Export pivot grid data as Excel spreadsheet\",\n        depends: [ \"ooxml\" ]\n    }, {\n        id: \"pivotgrid-pdf-export\",\n        name: \"PDF export\",\n        description: \"Export pivot grid data as PDF\",\n        depends: [ \"pdf\", \"drawing\" ]\n    }, {\n        id: \"mobile-scroller\",\n        name: \"Mobile scroller\",\n        description: \"Support for kinetic scrolling in mobile device\",\n        depends: [ \"mobile.scroller\" ]\n    }]\n};\n\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        ui = kendo.ui,\n        encode = kendo.htmlEncode,\n        Class = kendo.Class,\n        Comparer = kendo.data.Comparer,\n        Widget = ui.Widget,\n        DataSource = kendo.data.DataSource,\n        outerWidth = kendo._outerWidth,\n        outerHeight = kendo._outerHeight,\n        common = window.kendo.pivotgrid.common,\n        fetchDiscover = common.fetchDiscover,\n        normalizeFilter = kendo.data.Query.normalizeFilter,\n        normalizeSort = kendo.data.Query.normalizeSort,\n        toString = {}.toString,\n        identity = function(o) { return o; },\n        map = $.map,\n        extend = $.extend,\n        keys = kendo.keys,\n        isFunction = kendo.isFunction,\n        fetchData = common.fetchData,\n        createLocalDataState = common.createLocalDataState,\n        createDataTree = common.createDataTree,\n        sumAggregate = common.sumAggregate,\n        averageAggregate = common.averageAggregate,\n        minAggregate = common.minAggregate,\n        maxAggregate = common.maxAggregate,\n        createDataState = common.createDataState,\n        toColumns = common.toColumns,\n        toRows = common.toRows,\n        toTree = common.toTree,\n        toData = common.toData,\n        headersReducer = common.headersReducer,\n        RESIZE = \"resize\",\n        READ = \"read\",\n        CHANGE = \"change\",\n        ERROR = \"error\",\n        REQUESTSTART = \"requestStart\",\n        PROGRESS = \"progress\",\n        REQUESTEND = \"requestEnd\",\n        MEASURES = \"Measures\",\n        STATERESET = \"stateReset\",\n        AUTO = \"auto\",\n        DIV = \"<div></div>\",\n        NS = \".kendoPivotGrid\",\n        ROW_TOTAL_KEY = \"__row_total__\",\n        DATABINDING = \"dataBinding\",\n        DATABOUND = \"dataBound\",\n        EXPANDMEMBER = \"expandMember\",\n        HEADERTEMPLATE = ({ id, key, headerClass, colspan, rowspan, expandable, iconClass, role, expanded }) => `<th id=\"${id}\" role=\"${role}\" ${expandable ? `aria-expanded=\"${expanded}\"` : ''}  data-key=\"${encode(key)}\" class=\"k-table-th ${encode(headerClass)}\" ${colspan ? 'colspan=\"' + encode(colspan) + '\"' : ''} ${rowspan ? 'rowspan=\"' + encode(rowspan) + '\"' : ''}>` +\n                                    `${expandable ? kendo.ui.icon($('<span role=\"presentation\" class=\"k-pivotgrid-toggle\"></span>'), { icon: `chevron-${encode(iconClass)}` }) : ''}` +\n                                '</th>',\n        COLLAPSEMEMBER = \"collapseMember\",\n        STATE_EXPANDED_ICONNAME = \"caret-alt-down\",\n        STATE_EXPANDED_SELECTOR = `.k-i-${STATE_EXPANDED_ICONNAME},.k-svg-i-${STATE_EXPANDED_ICONNAME}`,\n        STATE_COLLAPSED_ICONNAME = \"caret-alt-right\",\n        HEADER_TEMPLATE = ({ member }) => `<span>${encode(member.caption || member.name)}</span>`,\n        PIVOTGRID_TREND_ICONS_MAP = {\n            \"kpi-trend-decrease\": \"caret-alt-down\",\n            \"kpi-trend-increase\": \"caret-alt-up\",\n            \"kpi-trend-equal\": \"minus\",\n        },\n        KPISTATUS_TEMPLATE = ({ dataItem }) => kendo.ui.icon($(`<span title=\"${encode(dataItem.value)}\"></span>`), { icon: `kpi-status-${dataItem.value > 0 ? \"open\" : dataItem.value < 0 ? \"deny\" : \"hold\"}` }),\n        KPITREND_TEMPLATE = ({ dataItem }) => kendo.ui.icon($(`<span title=\"${encode(dataItem.value)}\"></span>`), { icon: PIVOTGRID_TREND_ICONS_MAP[`kpi-trend-${dataItem.value > 0 ? \"increase\" : dataItem.value < 0 ? \"decrease\" : \"equal\"}`] }),\n        DATACELL_TEMPLATE = ({ dataItem }) => `${dataItem ? encode(dataItem.fmtValue || dataItem.value) || \"&nbsp;\" : \"&nbsp;\"}`,\n        LAYOUT_TABLE = '<table class=\"k-pivot-layout\">' +\n                            '<tr>' +\n                                '<td>' +\n                                    '<div class=\"k-pivot-rowheaders\"></div>' +\n                                '</td>' +\n                                '<td>' +\n                                    '<div class=\"k-pivot-table\"></div>' +\n                                '</td>' +\n                            '</tr>' +\n                        '</table>';\n        var AXIS_ROWS = \"rows\";\n        var AXIS_COLUMNS = \"columns\";\n\n        var tableStyles = {\n            tableRow: \"k-table-row\",\n            header: \"k-header k-table-th\",\n            headerTable: \"k-grid-header-table k-table k-table-md\",\n            table: \"k-table k-table-md\",\n            contentTable: \"k-grid-table k-table k-table-md\",\n            tbody: \"k-table-tbody\",\n            tableCell: \"k-table-td\"\n        };\n\n    function normalizeMeasures(measure) {\n        var descriptor = typeof measure === \"string\" ? [{ name: measure }] : measure;\n        var descriptors = toString.call(descriptor) === \"[object Array]\" ? descriptor : (descriptor !== undefined$1 ? [descriptor] : []);\n\n        return map(descriptors, function(d) {\n            if (typeof d === \"string\") {\n                return { name: d };\n            }\n            return $.extend(true, d, { name: d.name, type: d.type });\n        });\n    }\n\n    function normalizeMembers(member) {\n        var descriptor = typeof member === \"string\" ? [{ name: [member], expand: false }] : member;\n        var descriptors = toString.call(descriptor) === \"[object Array]\" ? descriptor : (descriptor !== undefined$1 ? [descriptor] : []);\n\n        return map(descriptors, function(d) {\n            if (typeof d === \"string\") {\n                return { name: [d], expand: false };\n            }\n            return { name: (toString.call(d.name) === \"[object Array]\" ? d.name.slice() : [d.name]), expand: d.expand };\n        });\n    }\n\n    function normalizeName(name) {\n        if (name.indexOf(\" \") !== -1) {\n            name = '[\"' + name + '\"]';\n        }\n\n        return name;\n    }\n\n    function accumulateMembers(accumulator, rootTuple, tuple, level) {\n        var idx, length;\n        var children;\n        var member;\n\n        if (!tuple) {\n            tuple = rootTuple;\n        }\n\n        if (!level) {\n            level = 0;\n        }\n\n        member = tuple.members[level];\n\n        if (!member || member.measure) { //return if no member or measure\n            return;\n        }\n\n        children = member.children;\n        length = children.length;\n\n        if (tuple === rootTuple) {\n            accumulator[kendo.stringify([member.name])] = !!length;\n        } else if (length) {\n            accumulator[kendo.stringify(buildPath(tuple, level))] = true;\n        }\n\n        if (length) {\n            for (idx = 0; idx < length; idx++) {\n                accumulateMembers(accumulator, rootTuple, children[idx], level);\n            }\n        }\n\n        accumulateMembers(accumulator, rootTuple, tuple, level + 1);\n    }\n\n    function descriptorsForAxes(tuples) {\n        var result = {};\n\n        if (tuples.length) {\n            accumulateMembers(result, tuples[0]);\n        }\n\n        var descriptors = [];\n        for (var k in result) {\n            descriptors.push({ name: JSON.parse(k), expand: result[k] });\n        }\n\n        return descriptors;\n    }\n\n    function addMissingPathMembers(members, axis) {\n        var tuples = axis.tuples || [];\n        var firstTuple = tuples[0];\n\n        if (firstTuple && members.length < firstTuple.members.length) {\n            var tupleMembers = firstTuple.members;\n\n            for (var idx = 0; idx < tupleMembers.length; idx++) {\n                if (tupleMembers[idx].measure) {\n                    continue;\n                }\n\n                var found = false;\n                for (var j = 0; j < members.length; j++) {\n                    if (getName(members[j]).indexOf(tupleMembers[idx].hierarchy) === 0) {\n                        found = true;\n                        break;\n                    }\n                }\n\n                if (!found) {\n                    members.push({ name: [tupleMembers[idx].name], expand: false }); //calling normalize here to make name from string to array\n                }\n            }\n        }\n    }\n\n    function tupleToDescriptors(tuple) {\n        var result = [];\n        var members = tuple.members;\n\n        for (var idx = 0; idx < members.length; idx++) {\n            if (members[idx].measure) {\n                continue;\n            }\n\n            //make tuple name an array\n            result.push({ name: [members[idx].name], expand: members[idx].children.length > 0 });\n        }\n\n        return result;\n    }\n\n    function descriptorsForMembers(axis, members, measures) {\n        axis = axis || {};\n\n        addMissingPathMembers(members, axis);\n\n        if (measures.length > 1) {\n            members.push({\n                name: MEASURES,\n                measure: true,\n                children: normalizeMembers(measures)\n            });\n        }\n\n        var tupletoSearch = {\n            members: members\n        };\n\n        if (axis.tuples) {\n            var result = findExistingTuple(axis.tuples, tupletoSearch);\n            if (result.tuple) {\n                members = tupleToDescriptors(result.tuple);\n            }\n        }\n\n        return members;\n    }\n\n    function createAggregateGetter(m) {\n        var measureGetter = kendo.getter(m.field, true);\n        return function(aggregatorContext, state) {\n            return m.aggregate(measureGetter(aggregatorContext.dataItem), state, aggregatorContext);\n        };\n    }\n\n    function isNumber(val) {\n        return typeof val === \"number\" && !isNaN(val);\n    }\n\n    function isDate(val) {\n        return val && val.getTime;\n    }\n\n    function getScollWidth() {\n        var scrollbar = 0;\n        var div;\n        if (document && document.createElement) {\n            div = document.createElement('div');\n\n            div.style.cssText = 'overflow:scroll;overflow-x:hidden;zoom:1;clear:both;display:block';\n            div.innerHTML = '&nbsp;';\n            document.body.appendChild(div);\n\n            scrollbar = div.offsetWidth - div.scrollWidth;\n\n            document.body.removeChild(div);\n        }\n\n        return scrollbar;\n    }\n\n    function flattenSortDescriptors(descriptors) {\n        var result = [];\n        for (var i = 0; i < descriptors.length; i++) {\n            result.push({\n                dir: descriptors[i].dir,\n                field: descriptors[i].field.split(\".\").pop()\n            });\n        }\n        return result;\n    }\n\n    function createLocalMeasure(field, key, format) {\n        var formatFunc = function(value) { return kendo.format(this.format, value); };\n        var measureMap = {\n            \"Sum\": sumAggregate,\n            \"Average\": averageAggregate,\n            \"Min\": minAggregate,\n            \"Max\": maxAggregate,\n        };\n        var valueFunc = function(item) { return item[this.field]; };\n        var measure = {\n                value: valueFunc.bind({ field: field }),\n                aggregate: measureMap[key],\n                caption: key,\n                uniqueName: key,\n                type: 2,\n                name: [key]\n            };\n        if (format) {\n            measure.aggregate.format = formatFunc.bind({ format: format });\n        }\n\n        return measure;\n    }\n\n    function getIcons(sortIcon, options, pivotOptions) {\n        var sortable = options.sortable,\n            filterable = options.filterable,\n            reorderable = pivotOptions.reorderable,\n            result = \"\";\n\n        if (sortable) {\n            result += sortIcon ? `<span class=\"k-chip-action\">${kendo.ui.icon(sortIcon + \"-sm\")}</span>` : '';\n        }\n\n        if (filterable || sortable) {\n            result += `<span class=\"k-setting-fieldmenu k-chip-action\">${kendo.ui.icon(\"more-vertical\")}</span>`;\n        }\n        if (reorderable) {\n            result += `<span class=\"k-setting-delete k-chip-action\">${kendo.ui.icon(\"x\")}</span>`;\n        }\n\n        return result;\n    }\n\n    var functions = {\n        sum: function(value, state) {\n            var accumulator = state.accumulator;\n\n            if (!isNumber(accumulator)) {\n                accumulator = value;\n            } else if (isNumber(value)) {\n                accumulator += value;\n            }\n\n            return accumulator;\n        },\n        count: function(value, state) {\n            return (state.accumulator || 0) + 1;\n        },\n        average: {\n            aggregate: function(value, state) {\n                var accumulator = state.accumulator;\n\n                if (state.count === undefined$1) {\n                    state.count = 0;\n                }\n\n                if (!isNumber(accumulator)) {\n                    accumulator = value;\n                } else if (isNumber(value)) {\n                    accumulator += value;\n                }\n\n                if (isNumber(value)) {\n                    state.count++;\n                }\n\n                return accumulator;\n            },\n            result: function(state) {\n                var accumulator = state.accumulator;\n\n                if (isNumber(accumulator)) {\n                    accumulator = accumulator / state.count;\n                }\n\n                return accumulator;\n            }\n        },\n        max: function(value, state) {\n            var accumulator = state.accumulator;\n\n            if (!isNumber(accumulator) && !isDate(accumulator)) {\n                accumulator = value;\n            }\n\n            if (accumulator < value && (isNumber(value) || isDate(value))) {\n                accumulator = value;\n            }\n            return accumulator;\n        },\n        min: function(value, state) {\n            var accumulator = state.accumulator;\n\n            if (!isNumber(accumulator) && !isDate(accumulator)) {\n                accumulator = value;\n            }\n\n            if (accumulator > value && (isNumber(value) || isDate(value))) {\n                accumulator = value;\n            }\n            return accumulator;\n        }\n    };\n\n    var PivotCubeBuilder = Class.extend({\n        init: function(options) {\n            this.options = extend({}, this.options, options);\n            this.dimensions = this._normalizeDescriptors(\"field\", this.options.dimensions);\n            this.measures = this._normalizeDescriptors(\"name\", this.options.measures);\n        },\n\n        _normalizeDescriptors: function(keyField, descriptors) {\n            descriptors = descriptors || {};\n            var fields = {};\n            var field;\n\n            if (toString.call(descriptors) === \"[object Array]\") {\n                for (var idx = 0, length = descriptors.length; idx < length; idx++) {\n                    field = descriptors[idx];\n                    if (typeof field === \"string\") {\n                        fields[field] = {};\n                    } else if (field[keyField]) {\n                        fields[field[keyField]] = field;\n                    }\n                }\n                descriptors = fields;\n            }\n\n            return descriptors;\n        },\n\n        _rootTuples: function(rootNames, measureAggregators) {\n            var aggregatorsLength = measureAggregators.length || 1;\n            var dimensionsSchema = this.dimensions || [];\n            var root, name, parts;\n            var measureIdx = 0;\n            var idx;\n\n            var rootNamesLength = rootNames.length;\n            var result = [];\n            var keys = [];\n\n            if (rootNamesLength || measureAggregators.length) {\n                for (measureIdx = 0; measureIdx < aggregatorsLength; measureIdx++) {\n\n                    root = { members: [] };\n\n                    for (idx = 0; idx < rootNamesLength; idx++) {\n                        name = rootNames[idx];\n                        parts = name.split(\"&\");\n\n                        root.members[root.members.length] = {\n                            children: [],\n                            caption: (dimensionsSchema[name] || {}).caption || \"All\",\n                            name: name,\n                            levelName: name,\n                            levelNum: \"0\",\n                            hasChildren: true,\n                            parentName: parts.length > 1 ? parts[0] : undefined$1,\n                            hierarchy: name\n                        };\n                    }\n\n                    if (aggregatorsLength > 1) {\n                        root.members[root.members.length] = {\n                            children: [],\n                            caption: (measureAggregators[measureIdx]).caption,\n                            name: measureAggregators[measureIdx].descriptor.name,\n                            levelName: \"MEASURES\",\n                            levelNum: \"0\",\n                            hasChildren: false,\n                            parentName: undefined$1,\n                            hierarchy: \"MEASURES\"\n                        };\n                    }\n\n                    result[result.length] = root;\n                }\n\n                keys.push(ROW_TOTAL_KEY);\n            }\n\n            return {\n                keys: keys,\n                tuples: result\n            };\n        },\n\n        _sortMap: function(map, sortDescriptors) {\n            var sortedMaps = [];\n            var sortTree = [];\n            var flattenTree = [];\n            var mapItem;\n            var key;\n\n            for (key in map) {\n                if (!map[key].directParentName) {\n                    sortTree.push($.extend({}, { name: key, parentName: map[key].parentName }));\n                }\n            }\n\n            //if there are no root this means that something is expanding\n            //and we should only sort that part of the tree\n            if (!sortTree.length) {\n                for (key in map) {\n                    sortTree.push($.extend({}, { name: key, parentName: map[key].parentName }));\n                }\n            }\n\n            fillSortTree(sortTree, map);\n\n            // fill tree recursive\n            for (var i = 0; i < sortDescriptors.length; i++) {\n                sortItemsTree(sortDescriptors[i].field.split(\".\").pop(), sortTree, Comparer.create({ field: \"name\", dir: sortDescriptors[i].dir }));\n            }\n\n            flattenTree = flatColumns(sortTree);\n\n            //we need to flatten the structure so the tuples can build correctly\n            for (var j = 0; j < flattenTree.length; j++) {\n                mapItem = map[flattenTree[j].name];\n                mapItem.index = j;\n                sortedMaps[j] = mapItem;\n            }\n\n            return sortedMaps;\n        },\n\n        _expandedTuples: function(map, expanded, measureAggregators, sortDescriptors) {\n            var aggregatorsLength = measureAggregators.length || 1;\n            var dimensionsSchema = this.dimensions || [];\n            var measureIdx;\n            var tuple;\n\n            var key;\n            var mapItem;\n            var current;\n            var currentKeys;\n            var accumulator = [];\n            var accumulatorKeys = [];\n            var memberInfo;\n\n            var expandedNames;\n            var parts;\n            var name;\n            var idx;\n\n            if (sortDescriptors && sortDescriptors.length && !$.isEmptyObject(map)) {\n                map = this._sortMap(map, sortDescriptors);\n            }\n\n            for (key in map) {\n                mapItem = map[key];\n                memberInfo = this._findExpandedMember(expanded, mapItem.uniquePath);\n\n                current = accumulator[memberInfo.index] || [];\n                currentKeys = accumulatorKeys[memberInfo.index] || [];\n\n                expandedNames = memberInfo.member.names;\n\n                for (measureIdx = 0; measureIdx < aggregatorsLength; measureIdx++) {\n                    tuple = { members: [] };\n                    for (idx = 0; idx < expandedNames.length; idx++) {\n                        if (idx === memberInfo.member.expandedIdx) {\n                            tuple.members[tuple.members.length] = {\n                                children: [],\n                                caption: mapItem.value,\n                                name: mapItem.name,\n                                hasChildren: false,\n                                levelNum: 1,\n                                levelName: mapItem.parentName + mapItem.name,\n                                parentName: mapItem.parentName,\n                                hierarchy: mapItem.parentName + mapItem.name\n                            };\n\n                            if (measureIdx === 0) {\n                                currentKeys.push(buildPath(tuple, idx).join(\"\"));\n                            }\n                        } else {\n                            name = expandedNames[idx];\n                            parts = name.split(\"&\");\n                            tuple.members[tuple.members.length] = {\n                                children: [],\n                                caption: (dimensionsSchema[name] || {}).caption || \"All\",\n                                name: name,\n                                levelName: name,\n                                levelNum: \"0\",\n                                hasChildren: true,\n                                parentName: parts.length > 1 ? parts[0] : undefined$1,\n                                hierarchy: name\n                            };\n                        }\n                    }\n\n                    if (aggregatorsLength > 1) {\n                        tuple.members[tuple.members.length] = {\n                            children: [],\n                            caption: measureAggregators[measureIdx].caption,\n                            name: measureAggregators[measureIdx].descriptor.name,\n                            levelName: \"MEASURES\",\n                            levelNum: \"0\",\n                            hasChildren: true,\n                            parentName: undefined$1,\n                            hierarchy: \"MEASURES\"\n                        };\n                    }\n\n                    current[current.length] = tuple;\n                }\n\n                accumulator[memberInfo.index] = current;\n                accumulatorKeys[memberInfo.index] = currentKeys;\n            }\n\n            return {\n                keys: accumulatorKeys,\n                tuples: accumulator\n            };\n        },\n\n        _findExpandedMember: function(members, parentName) {\n            for (var idx = 0; idx < members.length; idx++) {\n                if (members[idx].uniquePath === parentName) {\n                    return {\n                        member: members[idx],\n                        index: idx\n                    };\n                }\n            }\n        },\n\n        _asTuples: function(map, descriptor, measureAggregators, sortDescriptors) {\n            measureAggregators = measureAggregators || [];\n\n            var rootInfo = this._rootTuples(descriptor.root, measureAggregators);\n            var expandedInfo = this._expandedTuples(map, descriptor.expanded, measureAggregators, sortDescriptors);\n\n            return {\n                keys: [].concat.apply(rootInfo.keys, expandedInfo.keys),\n                tuples: [].concat.apply(rootInfo.tuples, expandedInfo.tuples)\n            };\n        },\n\n        _measuresInfo: function(measures, rowAxis) {\n            var idx = 0;\n            var length = measures && measures.length;\n\n            var aggregateNames = [];\n            var resultFuncs = {};\n            var formats = {};\n\n            var descriptors = (this.measures || {});\n            var measure;\n            var name;\n\n            for (; idx < length; idx++) {\n                name = measures[idx].descriptor.name;\n                measure = descriptors[name] || {};\n\n                aggregateNames.push(name);\n\n                if (measure.result) {\n                    resultFuncs[name] = measure.result;\n                }\n\n                if (measure.format) {\n                    formats[name] = measure.format;\n                }\n            }\n\n            return {\n                names: aggregateNames,\n                formats: formats,\n                resultFuncs: resultFuncs,\n                rowAxis: rowAxis\n            };\n        },\n\n        _toDataArray: function(map, measuresInfo, rowKeys, columnKeys) {\n            var result = [];\n\n            var aggregates;\n            var name, i, j, k, n;\n            var row, column, columnKey;\n\n            var rowMeasureNamesLength = 1;\n            var rowMeasureNames = [];\n            var columnMeasureNames;\n\n            var rowLength = rowKeys.length || 1;\n            var columnLength = columnKeys.length || 1;\n\n            if (measuresInfo.rowAxis) {\n                rowMeasureNames = measuresInfo.names;\n                rowMeasureNamesLength = rowMeasureNames.length;\n            } else {\n                columnMeasureNames = measuresInfo.names;\n            }\n\n            for (i = 0; i < rowLength; i++) {\n                row = map[rowKeys[i] || ROW_TOTAL_KEY];\n\n                for (n = 0; n < rowMeasureNamesLength; n++) {\n                    if (measuresInfo.rowAxis) {\n                        columnMeasureNames = [rowMeasureNames[n]];\n                    }\n\n                    for (j = 0; j < columnLength; j++) {\n                        columnKey = columnKeys[j] || ROW_TOTAL_KEY;\n                        column = row.items[columnKey];\n\n                        if (columnKey === ROW_TOTAL_KEY) {\n                            aggregates = row.aggregates;\n                        } else {\n                            aggregates = column ? column.aggregates : {};\n                        }\n\n                        for (k = 0; k < columnMeasureNames.length; k++) {\n                            name = columnMeasureNames[k];\n                            this._addData(result, aggregates[name], measuresInfo.formats[name], measuresInfo.resultFuncs[name]);\n                        }\n                    }\n                }\n            }\n\n            return result;\n        },\n\n        _addData: function(result, value, format, resultFunc) {\n            var fmtValue = \"\";\n            var ordinal;\n\n            if (value) {\n                value = resultFunc ? resultFunc(value) : value.accumulator;\n                fmtValue = format ? kendo.format(format, value) : value;\n            }\n\n            ordinal = result.length;\n\n            result[ordinal] = {\n                ordinal: ordinal,\n                value: value || \"\",\n                fmtValue: fmtValue\n            };\n        },\n\n        _matchDescriptors: function(dataItem, descriptor, getters) {\n            var parts;\n            var parentField;\n            var expectedValue;\n\n            var names = descriptor.names;\n            var idx = descriptor.expandedIdx;\n            var value;\n\n            while (idx > 0) {\n                parts = names[--idx].split(\"&\");\n                if (parts.length > 1) {\n                    parentField = parts[0];\n                    expectedValue = parts[1];\n\n                    value = getters[parentField](dataItem);\n                    value = (value !== undefined$1 && value !== null) ? value.toString() : value;\n\n                    if (value != expectedValue) {\n                        return false;\n                    }\n                }\n            }\n            return true;\n        },\n\n        _calculateAggregate: function(measureAggregators, aggregatorContext, totalItem) {\n            var result = {};\n            var state;\n            var name;\n\n            for (var measureIdx = 0; measureIdx < measureAggregators.length; measureIdx++) {\n                name = measureAggregators[measureIdx].descriptor.name;\n                state = totalItem.aggregates[name] || { };\n                state.accumulator = measureAggregators[measureIdx].aggregator(aggregatorContext, state);\n                result[name] = state;\n            }\n\n            return result;\n        },\n\n        _processColumns: function(measureAggregators, descriptors, getters, columns, aggregatorContext, rowTotal, state, updateColumn) {\n            var value;\n            var descriptor;\n            var column;\n            var totalItem;\n            var key, name, parentName, path;\n            var dataItem = aggregatorContext.dataItem;\n            var idx = 0;\n\n            for (; idx < descriptors.length; idx++) {\n                descriptor = descriptors[idx];\n\n                //checks whether the dataItem is relevant to the descriptors\n                if (!this._matchDescriptors(dataItem, descriptor, getters)) {\n                    continue;\n                }\n\n                path = descriptor.names.slice(0, descriptor.expandedIdx).join(\"\");\n                name = descriptor.names[descriptor.expandedIdx];\n\n\n                value = getters[name](dataItem);\n                value = (value !== undefined$1 && value !== null) ? value.toString() : value;\n\n                parentName = name;\n                name = name + \"&\" + value;\n                key = path + name;\n\n                column = columns[key] || {\n                    index: state.columnIndex,\n                    parentName: parentName,\n                    name: name,\n                    directParentName: path.indexOf(\"&\") !== -1 ? path : \"\",\n                    uniquePath: path + parentName,\n                    childrenMap: {},\n                    value: value\n                };\n\n                if (path && columns[path] && !columns[path].childrenMap[path + parentName + \"&\" + value]) {\n                    columns[path].childrenMap[path + parentName + \"&\" + value] = true;\n                }\n\n                totalItem = rowTotal.items[key] || {\n                    aggregates: {}\n                };\n\n                rowTotal.items[key] = {\n                    index: column.index,\n                    aggregates: this._calculateAggregate(measureAggregators, aggregatorContext, totalItem)\n                };\n\n                if (updateColumn) {\n                    if (!columns[key]) {\n                        state.columnIndex++;\n                    }\n                    columns[key] = column;\n                }\n            }\n        },\n\n        _measureAggregators: function(options) {\n            var measureDescriptors = options.measures || [];\n            var measures = this.measures || {};\n            var aggregators = [];\n            var descriptor, measure, idx, length;\n            var defaultAggregate, aggregate;\n\n            if (measureDescriptors.length) {\n                for (idx = 0, length = measureDescriptors.length; idx < length; idx++) {\n                    descriptor = measureDescriptors[idx];\n                    measure = measures[descriptor.name];\n                    defaultAggregate = null;\n\n                    if (measure) {\n                        aggregate = measure.aggregate;\n                        if (typeof aggregate === \"string\") {\n                            defaultAggregate = functions[aggregate.toLowerCase()];\n\n                            if (!defaultAggregate) {\n                                throw new Error(\"There is no such aggregate function\");\n                            }\n\n                            measure.aggregate = defaultAggregate.aggregate || defaultAggregate;\n                            measure.result = defaultAggregate.result;\n                        }\n\n\n                        aggregators.push({\n                            descriptor: descriptor,\n                            caption: measure.caption,\n                            result: measure.result,\n                            aggregator: createAggregateGetter(measure)\n                        });\n                    }\n                }\n            } else {\n                aggregators.push({\n                    descriptor: { name: \"default\" },\n                    caption: \"default\",\n                    aggregator: function() { return 1; }\n                });\n            }\n\n            return aggregators;\n        },\n\n        _buildGetters: function(names) {\n            var result = {};\n            var parts;\n            var name;\n\n            for (var idx = 0; idx < names.length; idx++) {\n                name = names[idx];\n                parts = name.split(\"&\");\n\n                if (parts.length > 1) {\n                    result[parts[0]] = kendo.getter(parts[0], true);\n                } else {\n                    result[name] = kendo.getter(normalizeName(name), true);\n                }\n            }\n\n            return result;\n        },\n\n        _parseDescriptors: function(descriptors) {\n            var parsedDescriptors = parseDescriptors(descriptors);\n            var rootNames = getRootNames(parsedDescriptors.root);\n            var expanded = parsedDescriptors.expanded;\n            var result = [];\n\n            for (var idx = 0; idx < expanded.length; idx++) {\n                result.push(mapNames(expanded[idx].name, rootNames));\n            }\n\n            return {\n                root: rootNames,\n                expanded: result\n            };\n        },\n\n        _filter: function(data, filter) {\n            if (!filter) {\n                return data;\n            }\n\n            var expr;\n            var idx = 0;\n            var filters = filter.filters;\n\n            for (; idx < filters.length; idx++) {\n                expr = filters[idx];\n\n                if (expr.operator === \"in\") {\n                    filters[idx] = this._normalizeFilter(expr);\n                }\n            }\n\n            return new kendo.data.Query(data).filter(filter).data;\n        },\n\n        _normalizeFilter: function(filter) {\n            var value = filter.value.split(\",\");\n            var result = [];\n\n            if (!value.length) {\n                return value;\n            }\n\n            for (var idx = 0; idx < value.length; idx++) {\n                result.push({\n                    field: filter.field,\n                    operator: \"eq\",\n                    value: value[idx]\n                });\n            }\n\n            return {\n                logic: \"or\",\n                filters: result\n            };\n        },\n\n        process: function(data, options) {\n            data = data || [];\n            options = options || {};\n\n            data = this._filter(data, options.filter);\n\n            var measures = options.measures || [];\n\n            var measuresRowAxis = options.measuresAxis === \"rows\";\n\n            var columnDescriptors = options.columns || [];\n            var rowDescriptors = options.rows || [];\n\n            if (!columnDescriptors.length && rowDescriptors.length && (!measures.length || (measures.length && measuresRowAxis))) {\n                columnDescriptors = rowDescriptors;\n                rowDescriptors = [];\n                measuresRowAxis = false;\n            }\n\n            if (!columnDescriptors.length && !rowDescriptors.length) {\n                measuresRowAxis = false;\n            }\n\n            if (!columnDescriptors.length && measures.length) {\n                columnDescriptors = normalizeMembers(options.measures);\n            }\n\n            columnDescriptors = this._parseDescriptors(columnDescriptors);\n            rowDescriptors = this._parseDescriptors(rowDescriptors);\n\n            var aggregatedData = {};\n            var columns = {};\n            var rows = {};\n\n            var rowValue;\n            var state = { columnIndex: 0 };\n\n            var measureAggregators = this._measureAggregators(options);\n\n            var columnGetters = this._buildGetters(columnDescriptors.root);\n            var rowGetters = this._buildGetters(rowDescriptors.root);\n\n            var processed = false;\n\n            var expandedColumns = columnDescriptors.expanded;\n            var expandedRows = rowDescriptors.expanded;\n\n            var dataItem;\n            var aggregatorContext;\n            var hasExpandedRows = expandedRows.length !== 0;\n\n            var rowIdx, rowDescriptor, rowName, rowTotal;\n            var key, path, parentName, value;\n            var columnsInfo, rowsInfo;\n            var length = data.length;\n            var idx = 0;\n\n            if (columnDescriptors.root.length || rowDescriptors.root.length) {\n                processed = true;\n\n                for (idx = 0; idx < length; idx++) {\n                    dataItem = data[idx];\n\n                    aggregatorContext = {\n                        dataItem: dataItem,\n                        index: idx\n                    };\n\n                    rowTotal = aggregatedData[ROW_TOTAL_KEY] || {\n                        items: {},\n                        aggregates: {}\n                    };\n\n                    this._processColumns(measureAggregators, expandedColumns, columnGetters, columns, aggregatorContext, rowTotal, state, !hasExpandedRows);\n\n                    rowTotal.aggregates = this._calculateAggregate(measureAggregators, aggregatorContext, rowTotal);\n                    aggregatedData[ROW_TOTAL_KEY] = rowTotal;\n\n                    for (rowIdx = 0; rowIdx < expandedRows.length; rowIdx++) {\n                        rowDescriptor = expandedRows[rowIdx];\n\n                        if (!this._matchDescriptors(dataItem, rowDescriptor, rowGetters)) {\n                            this._processColumns(measureAggregators, expandedColumns, columnGetters, columns, aggregatorContext, { items: {}, aggregates: {} }, state, true);\n                            continue;\n                        }\n\n                        path = rowDescriptor.names.slice(0, rowDescriptor.expandedIdx).join(\"\");\n                        rowName = rowDescriptor.names[rowDescriptor.expandedIdx];\n\n                        parentName = rowName;\n\n                        rowValue = rowGetters[rowName](dataItem);\n                        rowValue = rowValue !== undefined$1 ? rowValue.toString() : rowValue;\n\n                        rowName = rowName + \"&\" + rowValue;\n                        key = path + rowName;\n\n                        rows[key] = {\n                            uniquePath: path + parentName,\n                            parentName: parentName,\n                            name: rowName,\n                            value: rowValue\n                        };\n\n                        value = aggregatedData[key] || {\n                            items: {},\n                            aggregates: {}\n                        };\n\n                        this._processColumns(measureAggregators, expandedColumns, columnGetters, columns, aggregatorContext, value, state, true);\n\n                        value.aggregates = this._calculateAggregate(measureAggregators, aggregatorContext, value);\n                        aggregatedData[key] = value;\n                    }\n                }\n            }\n\n            if (processed && length) {\n                if (measureAggregators.length > 1 && (!options.columns || !options.columns.length)) {\n                    columnDescriptors = {\n                        root: [],\n                        expanded: []\n                    };\n                }\n\n                columnsInfo = this._asTuples(columns, columnDescriptors, measuresRowAxis ? [] : measureAggregators, options.sort ? options.sort : []);\n                rowsInfo = this._asTuples(rows, rowDescriptors, measuresRowAxis ? measureAggregators : [], options.sort ? options.sort : []);\n\n                columns = columnsInfo.tuples;\n                rows = rowsInfo.tuples;\n\n                aggregatedData = this._toDataArray(aggregatedData, this._measuresInfo(measureAggregators, measuresRowAxis), rowsInfo.keys, columnsInfo.keys);\n            } else {\n                aggregatedData = columns = rows = [];\n            }\n\n            return {\n                axes: {\n                    columns: { tuples: columns },\n                    rows: { tuples: rows }\n                },\n                data: aggregatedData\n            };\n        }\n    });\n\n    var PivotTransport = Class.extend({\n        init: function(options, transport) {\n            this.transport = transport;\n            this.options = transport.options || {};\n\n            if (!this.transport.discover) {\n                if (isFunction(options.discover)) {\n                    this.discover = options.discover;\n                }\n            }\n        },\n        read: function(options) {\n            return this.transport.read(options);\n        },\n        update: function(options) {\n            return this.transport.update(options);\n        },\n        create: function(options) {\n            return this.transport.create(options);\n        },\n        destroy: function(options) {\n            return this.transport.destroy(options);\n        },\n        discover: function(options) {\n            if (this.transport.discover) {\n                return this.transport.discover(options);\n            }\n            options.success({});\n        },\n        catalog: function(val) {\n            var options = this.options || {};\n\n            if (val === undefined$1) {\n                return (options.connection || {}).catalog;\n\n            }\n\n            var connection = options.connection || {};\n            connection.catalog = val;\n\n            this.options.connection = connection;\n            $.extend(this.transport.options, { connection: connection });\n        },\n        cube: function(val) {\n            var options = this.options || {};\n\n            if (val === undefined$1) {\n                return (options.connection || {}).cube;\n            }\n\n            var connection = options.connection || {};\n            connection.cube = val;\n\n            this.options.connection = connection;\n            extend(true, this.transport.options, { connection: connection });\n        }\n    });\n\n    var PivotDataSourceV2 = DataSource.extend({\n        init: function(options) {\n\n            var cube = ((options || {}).schema || {}).cube;\n\n            var schema = {\n                axes: identity,\n                cubes: identity,\n                catalogs: identity,\n                measures: identity,\n                dimensions: identity,\n                hierarchies: identity,\n                levels: identity,\n                members: identity\n            };\n\n            if (cube) {\n                this.cubeSchema = $.extend(schema, this._cubeSchema(cube));\n            }\n\n            DataSource.fn.init.call(this, extend(true, {}, {\n                //schema: schema\n            }, options));\n\n            var transportOptions = this.options.transport || {};\n            if ((this.options.type || \"xmla\").toLowerCase() === \"xmla\") {\n                this._online = true;\n                this.transport = new XmlaTransportV2(transportOptions);\n            }\n\n            this._columns = normalizeMembers(this.options.columns);\n            this._rows = normalizeMembers(this.options.rows);\n\n            var measures = this.cubeSchema ? this.cubeSchema.measures() : this.options.measures || [];\n\n            if (toString.call(measures) === \"[object Object]\") {\n                this._measuresAxis = measures.axis || \"columns\";\n                measures = measures.values || [];\n            }\n\n            this._measures = normalizeMeasures(measures);\n        },\n\n        options: {\n            serverSorting: true,\n            serverPaging: true,\n            serverFiltering: true,\n            serverGrouping: true,\n            serverAggregates: true\n        },\n\n        axes: function() {\n            return {\n                columns: normalizeAxis(this.columns()),\n                rows: normalizeAxis(this.rows())\n            };\n        },\n\n        catalog: function(val) {\n            if (val === undefined$1) {\n                return this.transport.catalog();\n            }\n\n            this.transport.catalog(val);\n            this._mergeState({});// clears current state\n            this.read();\n        },\n\n        cube: function(val) {\n            if (val === undefined$1) {\n                return this.transport.cube();\n            }\n\n            this.transport.cube(val);\n            this._mergeState({});// clears current state\n            this.read();\n        },\n\n        measuresAxis: function() {\n            return this._measuresAxis || \"columns\";\n        },\n\n        fetch: function(callback) {\n            var that = this;\n            if (this._data === undefined$1 || this._data.length === 0) {\n                var fn = function() {\n                    if (isFunction(callback)) {\n                        callback.call(that);\n                    }\n                };\n\n                return this._query().done(fn);\n            }\n        },\n\n        _createSettings: function(axes) {\n            var settings = [];\n            var key;\n            var dimensions = this.cubeSchema.dimensionsSettings();\n            var displayValueFunc = function(item) { return item[this.key]; };\n            var sortValueFunc = function(value) { return value; };\n            for (var i = 0; i < axes.length; i++) {\n                key = axes[i].name[0];\n                settings.push({\n                    key: key,\n                    displayValue: displayValueFunc.bind({ key: key }),\n                    sortValue: sortValueFunc,\n                    caption: (dimensions[key] || {}).caption || key\n                });\n            }\n            return settings;\n        },\n\n        _cubeSchema: function(cube) {\n            return {\n                dimensionsSettings: function() {\n                    return cube.dimensions;\n                },\n                dimensions: function() {\n                    var result = [];\n                    var dimensions = cube.dimensions;\n\n                    for (var key in dimensions) {\n                        result.push({\n                            name: key,\n                            caption: dimensions[key].caption || key,\n                            uniqueName: key,\n                            defaultHierarchy: key,\n                            type: 1\n                        });\n                    }\n\n                    if (cube.measures) {\n                        result.push({\n                            name: MEASURES,\n                            caption: MEASURES,\n                            uniqueName: MEASURES,\n                            type: 2\n                        });\n                    }\n\n                    return result;\n                },\n                restoreMeasure: function(measures, measure) {\n                    for (var i = 0; i < measures.length; i++) {\n                        if (!measures[i].aggregate) {\n                            measures[i].aggregate = measure.aggregate;\n                            measures[i].value = measure.value;\n                            measures[i].caption = measure.caption;\n                            measures[i].uniqueName = measure.uniqueName;\n                            measures[i].type = 2;\n                        }\n                    }\n                },\n                measures: function() {\n                    var result = [];\n                    var measures = cube.measures;\n\n                    for (var key in measures) {\n                        result.push(createLocalMeasure(measures[key].field, key, measures[key].format));\n                    }\n\n                    return result;\n                },\n                memberType: function(name) {\n                    var getter = kendo.getter(normalizeName(name), true);\n                    var data = this.options.data || this._pristineData || [];\n                    if (!data.length) {\n                        return null;\n                    }\n\n                    return typeof getter(data[0]);\n                }.bind(this),\n                members: function(name) {\n                    var data = this.options.data || this._pristineData || [];\n                    var result = [];\n                    var distinct = {};\n                    var getter;\n                    var value;\n                    var idx = 0;\n\n                    if (name.indexOf(\"[(ALL)]\") !== -1) {\n                        return [\n                            {\n                                caption: cube.dimensions[name.split(\".\")[0]].caption || name,\n                                levelUniqueName: name,\n                                name: name,\n                                childrenCardinality: 1,\n                                uniqueName: name\n                            }\n                        ];\n                    }\n\n                    getter = kendo.getter(normalizeName(name), true);\n\n                    for (; idx < data.length; idx++) {\n                        value = getter(data[idx]);\n                        if ((value || value === 0 || value === false) && !distinct[value]) {\n                            distinct[value] = true;\n\n                            result.push({\n                                caption: value + \"\",\n                                name: value + \"\",\n                                childrenCardinality: 0,\n                                uniqueName: value\n                            });\n                        }\n                    }\n\n                    return result;\n                }.bind(this)\n            };\n        },\n\n        read: function(data) {\n            var that = this;\n            var isPrevented = that.trigger(REQUESTSTART, { type: READ });\n            var params = that._params(data);\n            var deferred = $.Deferred();\n            if (!isPrevented) {\n                that.trigger(PROGRESS);\n\n                if (that.options.data) {\n\n                    var originalData = (this.reader.data(this.options.data) || []).slice(0);\n                    if (originalData && !this._pristineData) {\n                        this._pristineData = originalData;\n                    }\n                    var columnSettings = that._createSettings(params.columnAxes);\n                    var rowSettings = that._createSettings(params.rowAxes);\n                    var measures = that.measures();\n                    var dataTree = createDataTree(that.options.data, rowSettings, columnSettings, measures, { dataField: \"aggregate\", columnsData: \"columns\" }, that.filter() || []);\n\n                    var stateArgs = {\n                        dataTree: dataTree,\n                        columnSettings: columnSettings,\n                        rowSettings: rowSettings,\n                        columnAxes: params.columnAxes,\n                        rowAxes: params.rowAxes,\n                        measures: measures.map(function(item) { return item; }).reverse(),\n                        fields: { dataField: \"aggregate\", columnsData: \"columns\" },\n                        sort: flattenSortDescriptors(params.sort || [])\n                    };\n\n                    that._saveState(createLocalDataState(stateArgs));\n                    that.trigger(CHANGE);\n                    deferred.resolve();\n                } else {\n                    that.transport.read({\n                        data: params,\n                        success: function(newDataState) {\n                            that._saveState(newDataState);\n                            that.trigger(REQUESTEND, { response: newDataState, type: READ });\n                            that.trigger(CHANGE);\n                            if (that._preventRefresh) {\n                                that._preventRefresh = false;\n                            }\n                            deferred.resolve();\n                        },\n                        error: function(err) {\n                            that.trigger(ERROR, { error: err });\n                        }\n                    });\n                }\n            }\n            return deferred.promise();\n        },\n\n        _params: function(data) {\n            var that = this;\n            var options = DataSource.fn._params.call(that, data);\n\n            options = extend({\n                columnAxes: JSON.parse(JSON.stringify(that._columns)),\n                rowAxes: JSON.parse(JSON.stringify(that._rows)),\n                measuresAxis: that.measuresAxis(),\n                measureAxes: that._measures\n            }, options);\n\n            if ((this.options.type || \"\").toLowerCase() === \"xmla\") {\n                options.connection = that.options.transport.connection;\n            }\n\n            if (options.filter) {\n                options.filter = normalizeFilter(options.filter);\n                options.filter = (options.filter || {}).filters;\n            }\n\n            if (options.sort) {\n                options.sort = normalizeSort(options.sort);\n            }\n\n            return options;\n        },\n\n        discover: function(options) {\n            var that = this,\n                transport = that.transport;\n\n            if (transport.discover) {\n                return transport.discover(options);\n            }\n        },\n\n        schemaMeasures: function() {\n            var that = this;\n            return that.discover(\n                {\n                    command: \"schemaMeasures\",\n                    restrictions: {\n                        catalogName: that.transport.catalog(),\n                        cubeName: that.transport.cube()\n                    }\n                }, function(response) {\n                    return response;\n                });\n        },\n\n        schemaKPIs: function() {\n            var that = this;\n\n            return that.discover(\n            {\n                command: \"schemaKPIs\",\n                restrictions: {\n                    catalogName: that.transport.catalog(),\n                    cubeName: that.transport.cube()\n                }\n            }, function(response) {\n                return response;\n            });\n        },\n\n        schemaDimensions: function() {\n            var that = this;\n\n            return that.discover(\n            {\n                command: \"schemaDimensions\",\n                restrictions: {\n                    catalogName: that.transport.catalog(),\n                    cubeName: that.transport.cube()\n                }\n            }, function(response) {\n                return response;\n            });\n        },\n\n        schemaHierarchies: function(dimensionName) {\n            var that = this;\n\n            return that.discover({\n               command: \"schemaHierarchies\",\n               restrictions: {\n                   catalogName: that.transport.catalog(),\n                   cubeName: that.transport.cube(),\n                   dimensionUniqueName: dimensionName\n               }\n            }, function(response) {\n                return response;\n            });\n        },\n\n        schemaLevels: function(hierarchyName) {\n            var that = this;\n\n            return that.discover({\n                command: \"schemaLevels\",\n                restrictions: {\n                    catalogName: that.transport.catalog(),\n                    cubeName: that.transport.cube(),\n                    hierarchyUniqueName: hierarchyName\n                }\n            }, function(response) {\n                return response;\n            });\n        },\n\n        schemaCubes: function() {\n            var that = this;\n\n            return that.discover({\n                command: \"schemaCubes\",\n                restrictions: {\n                    catalogName: that.transport.catalog()\n                }\n            }, function(response) {\n                return response;\n            });\n        },\n\n        schemaCatalogs: function() {\n            var that = this;\n\n            return that.discover({\n                command: \"schemaCatalogs\"\n            }, function(response) {\n                return response;\n            });\n        },\n\n        schemaMembers: function(restrictions) {\n            var that = this;\n\n            return that.discover({\n                command: \"schemaMembers\",\n                restrictions: extend({\n                   catalogName: that.transport.catalog(),\n                   cubeName: that.transport.cube()\n                }, restrictions)\n            }, function(response) {\n                return response;\n            });\n        },\n\n        _saveState: function(state) {\n            var that = this;\n\n            that._columnTuples = state.columns;\n            that._rowTuples = state.rows;\n            that._view = that._data = state.data;\n        },\n\n        columns: function(val) {\n            if (val === undefined$1) {\n                return this._columns;\n            }\n\n            this._columns = normalizeMembers(val);\n            this.read();\n        },\n\n        rows: function(val) {\n            if (val === undefined$1) {\n                return this._rows;\n            }\n\n            this._rows = normalizeMembers(val);\n\n            this.read();\n        },\n\n        measures: function(val) {\n            if (val === undefined$1) {\n                return this._measures;\n            }\n\n            this._measures = normalizeMeasures(val);\n\n            this.read();\n        },\n\n        _mergeState: function(options) {\n            options = DataSource.fn._mergeState.call(this, options);\n\n            return options;\n        },\n\n        _query: function(options) {\n            var that = this;\n            var params = extend({}, {\n                sort: that.sort(),\n                measuresAxis: that.measuresAxis(),\n                filter: that.filter()\n            }, options);\n            this._mergeState(params);\n\n            return this.read();\n        },\n    });\n\n    var PivotDataSource = DataSource.extend({\n        init: function(options) {\n            var cube = ((options || {}).schema || {}).cube;\n            var measuresAxis = \"columns\";\n            var measures;\n\n            var schema = {\n                axes: identity,\n                cubes: identity,\n                catalogs: identity,\n                measures: identity,\n                dimensions: identity,\n                hierarchies: identity,\n                levels: identity,\n                members: identity\n            };\n\n            if (cube) {\n                schema = $.extend(schema, this._cubeSchema(cube));\n                this.cubeBuilder = new PivotCubeBuilder(cube);\n            }\n\n            DataSource.fn.init.call(this, extend(true, {}, {\n                schema: schema\n            }, options));\n\n            this.transport = new PivotTransport(this.options.transport || {}, this.transport);\n\n            this._columns = normalizeMembers(this.options.columns);\n            this._rows = normalizeMembers(this.options.rows);\n\n            measures = this.options.measures || [];\n\n            if (toString.call(measures) === \"[object Object]\") {\n                measuresAxis = measures.axis || \"columns\";\n                measures = measures.values || [];\n            }\n\n            this._measures = normalizeMeasures(measures);\n            this._measuresAxis = measuresAxis;\n\n            this._skipNormalize = 0;\n            this._axes = {};\n        },\n\n        _cubeSchema: function(cube) {\n            return {\n                dimensions: function() {\n                    var result = [];\n                    var dimensions = cube.dimensions;\n\n                    for (var key in dimensions) {\n                        result.push({\n                            name: key,\n                            caption: dimensions[key].caption || key,\n                            uniqueName: key,\n                            defaultHierarchy: key,\n                            type: 1\n                        });\n                    }\n\n                    if (cube.measures) {\n                        result.push({\n                            name: MEASURES,\n                            caption: MEASURES,\n                            uniqueName: MEASURES,\n                            type: 2\n                        });\n                    }\n\n                    return result;\n                },\n                hierarchies: function() {\n                    return [];\n                },\n                measures: function() {\n                    var result = [];\n                    var measures = cube.measures;\n\n                    for (var key in measures) {\n                        result.push({\n                            name: key,\n                            caption: key,\n                            uniqueName: key,\n                            aggregator: key\n                        });\n                    }\n\n                    return result;\n                },\n                members: function(response, restrictions) {\n                    var name = restrictions.levelUniqueName || restrictions.memberUniqueName;\n                    var schemaData = this.options.schema.data;\n                    var dataGetter = isFunction(schemaData) ? schemaData : kendo.getter(schemaData, true);\n                    var data = (this.options.data && dataGetter(this.options.data)) || this._rawData || [];\n                    var result = [];\n                    var getter;\n                    var value;\n                    var idx = 0;\n                    var distinct = {};\n\n                    if (name) {\n                        name = name.split(\".\")[0];\n                    }\n\n                    if (!restrictions.treeOp) {\n                        result.push({\n                            caption: cube.dimensions[name].caption || name,\n                            childrenCardinality: \"1\",\n                            dimensionUniqueName: name,\n                            hierarchyUniqueName: name,\n                            levelUniqueName: name,\n                            name: name,\n                            uniqueName: name\n                        });\n\n                        return result;\n                    }\n\n                    getter = kendo.getter(normalizeName(name), true);\n\n                    for (; idx < data.length; idx++) {\n                        value = getter(data[idx]);\n                        if ((value || value === 0) && !distinct[value]) {\n                            distinct[value] = true;\n\n                            result.push({\n                                caption: value,\n                                childrenCardinality: \"0\",\n                                dimensionUniqueName: name,\n                                hierarchyUniqueName: name,\n                                levelUniqueName: name,\n                                name: value,\n                                uniqueName: value\n                            });\n                        }\n                    }\n\n                    return result;\n                }.bind(this)\n            };\n        },\n\n        options: {\n            serverSorting: true,\n            serverPaging: true,\n            serverFiltering: true,\n            serverGrouping: true,\n            serverAggregates: true\n        },\n\n        catalog: function(val) {\n            if (val === undefined$1) {\n                return this.transport.catalog();\n            }\n\n            this.transport.catalog(val);\n            this._mergeState({});// clears current state\n            this._axes = {};\n            this.data([]);\n        },\n\n        cube: function(val) {\n            if (val === undefined$1) {\n                return this.transport.cube();\n            }\n\n            this.transport.cube(val);\n            this._axes = {};\n            this._mergeState({});// clears current state\n            this.data([]);\n        },\n\n        axes: function() {\n            return this._axes;\n        },\n\n        columns: function(val) {\n            if (val === undefined$1) {\n                return this._columns;\n            }\n\n            this._skipNormalize += 1;\n            this._clearAxesData = true;\n\n            this._columns = normalizeMembers(val);\n            this.query({\n                columns: val,\n                rows: this.rowsAxisDescriptors(),\n                measures: this.measures(),\n                sort: this.sort(),\n                filter: this.filter()\n            });\n        },\n\n        rows: function(val) {\n            if (val === undefined$1) {\n                return this._rows;\n            }\n\n            this._skipNormalize += 1;\n            this._clearAxesData = true;\n\n            this._rows = normalizeMembers(val);\n\n            this.query({\n                columns: this.columnsAxisDescriptors(),\n                rows: val,\n                measures: this.measures(),\n                sort: this.sort(),\n                filter: this.filter()\n            });\n        },\n\n        measures: function(val) {\n            if (val === undefined$1) {\n                return this._measures;\n            }\n\n            this._skipNormalize += 1;\n            this._clearAxesData = true;\n\n            this.query({\n                columns: this.columnsAxisDescriptors(),\n                rows: this.rowsAxisDescriptors(),\n                measures: normalizeMeasures(val),\n                sort: this.sort(),\n                filter: this.filter()\n            });\n        },\n\n        measuresAxis: function() {\n            return this._measuresAxis || \"columns\";\n        },\n\n        _expandPath: function(path, axis) {\n            var origin = axis === \"columns\" ? \"columns\" : \"rows\";\n            var other = axis === \"columns\" ? \"rows\" : \"columns\";\n\n            var members = normalizeMembers(path);\n            var memberToExpand = getName(members[members.length - 1]);\n\n            this._lastExpanded = origin;\n\n            members = descriptorsForMembers(this.axes()[origin], members, this.measures());\n\n            for (var idx = 0; idx < members.length; idx++) {\n                var memberName = getName(members[idx]);\n\n                if (memberName === memberToExpand) {\n                    if (members[idx].expand) {\n                        return;\n                    }\n                    members[idx].expand = true;\n                } else {\n                    members[idx].expand = false;\n                }\n            }\n\n            var descriptors = {};\n            descriptors[origin] = members;\n            descriptors[other] = this._descriptorsForAxis(other);\n\n            this._query(descriptors);\n        },\n\n        _descriptorsForAxis: function(axis) {\n            var axes = this.axes();\n            var descriptors = this[axis]() || [];\n\n            if (axes && axes[axis] && axes[axis].tuples && axes[axis].tuples[0]) {\n                descriptors = descriptorsForAxes(axes[axis].tuples || []);\n            }\n            return descriptors;\n        },\n\n        columnsAxisDescriptors: function() {\n            return this._descriptorsForAxis(\"columns\");\n        },\n\n        rowsAxisDescriptors: function() {\n            return this._descriptorsForAxis(\"rows\");\n        },\n\n        _process: function(data, e) {\n            this._view = data;\n\n            e = e || {};\n            e.items = e.items || this._view;\n\n            this.trigger(CHANGE, e);\n        },\n\n        _query: function(options) {\n            var that = this;\n\n            if (!options) {\n                this._skipNormalize += 1;\n                this._clearAxesData = true;\n            }\n\n            return that.query(extend({}, {\n                page: that.page(),\n                pageSize: that.pageSize(),\n                sort: that.sort(),\n                filter: that.filter(),\n                group: that.group(),\n                aggregate: that.aggregate(),\n                columns: this.columnsAxisDescriptors(),\n                rows: this.rowsAxisDescriptors(),\n                measures: this.measures()\n            }, options));\n        },\n\n        query: function(options) {\n            var state = this._mergeState(options);\n\n            if (this._data.length && this.cubeBuilder) {\n                this._params(state);\n                this._updateLocalData(this._pristineData);\n\n                return $.Deferred().resolve().promise();\n            }\n\n            return this.read(state);\n        },\n\n        _mergeState: function(options) {\n            options = DataSource.fn._mergeState.call(this, options);\n\n            if (options !== undefined$1) {\n                this._measures = normalizeMeasures(options.measures);\n\n                if (options.columns) {\n                    options.columns = normalizeMembers(options.columns);\n                } else if (!options.columns) {\n                    this._columns = [];\n                }\n\n                if (options.rows) {\n                    options.rows = normalizeMembers(options.rows);\n                } else if (!options.rows) {\n                    this._rows = [];\n                }\n            }\n            return options;\n        },\n\n        filter: function(val) {\n            if (val === undefined$1) {\n                return this._filter;\n            }\n\n            this._skipNormalize += 1;\n            this._clearAxesData = true;\n            this._query({ filter: val, page: 1 });\n        },\n\n        expandColumn: function(path) {\n            this._expandPath(path, \"columns\");\n        },\n\n        expandRow: function(path) {\n            this._expandPath(path, \"rows\");\n        },\n\n        success: function(data) {\n            var originalData;\n            if (this.cubeBuilder) {\n                originalData = (this.reader.data(data) || []).slice(0);\n            }\n            DataSource.fn.success.call(this, data);\n            if (originalData) {\n                this._pristineData = originalData;\n            }\n        },\n\n        _processResult: function(data, axes) {\n            if (this.cubeBuilder) {\n                var processedData = this.cubeBuilder.process(data, this._requestData);\n\n                data = processedData.data;\n                axes = processedData.axes;\n            }\n\n            var columnIndexes, rowIndexes;\n            var tuples, resultAxis, measures, axisToSkip;\n            var columnDescriptors = this.columns();\n            var rowDescriptors = this.rows();\n            var hasColumnTuples = axes.columns && axes.columns.tuples;\n\n            if (!columnDescriptors.length && rowDescriptors.length && hasColumnTuples && (this._rowMeasures().length || !this.measures().length)) {\n                axes = {\n                    columns: {},\n                    rows: axes.columns\n                };\n            }\n\n            if (!columnDescriptors.length && !rowDescriptors.length && this.measuresAxis() === \"rows\" && hasColumnTuples) {\n                axes = {\n                    columns: {},\n                    rows: axes.columns\n                };\n            }\n\n            this._axes = {\n                columns: normalizeAxis(this._axes.columns),\n                rows: normalizeAxis(this._axes.rows)\n            };\n\n            axes = {\n                columns: normalizeAxis(axes.columns),\n                rows: normalizeAxis(axes.rows)\n            };\n\n            columnIndexes = this._normalizeTuples(axes.columns.tuples, this._axes.columns.tuples, columnDescriptors, this._columnMeasures());\n            rowIndexes = this._normalizeTuples(axes.rows.tuples, this._axes.rows.tuples, rowDescriptors, this._rowMeasures());\n\n            if (this._skipNormalize > 0) {\n                this._skipNormalize -= 1;\n            }\n\n            if (!this.cubeBuilder) {\n                data = this._normalizeData({\n                    columnsLength: axes.columns.tuples.length,\n                    rowsLength: axes.rows.tuples.length,\n                    columnIndexes: columnIndexes,\n                    rowIndexes: rowIndexes,\n                    data: data\n                });\n            }\n\n            if (this._lastExpanded == \"rows\") {\n                tuples = axes.columns.tuples;\n                measures = this._columnMeasures();\n                resultAxis = validateAxis(axes.columns, this._axes.columns, measures);\n\n                if (resultAxis) {\n                    axisToSkip = \"columns\";\n                    axes.columns = resultAxis;\n                    adjustDataByColumn(tuples, resultAxis.tuples, axes.rows.tuples.length, measures, data);\n                    if (!this.cubeBuilder) {\n                        data = this._normalizeData({\n                            columnsLength: membersCount(axes.columns.tuples, measures),\n                            rowsLength: axes.rows.tuples.length,\n                            data: data\n                        });\n                    }\n                }\n            } else if (this._lastExpanded == \"columns\") {\n                tuples = axes.rows.tuples;\n                measures = this._rowMeasures();\n                resultAxis = validateAxis(axes.rows, this._axes.rows, measures);\n\n                if (resultAxis) {\n                    axisToSkip = \"rows\";\n                    axes.rows = resultAxis;\n                    adjustDataByRow(tuples, resultAxis.tuples, axes.columns.tuples.length, measures, data);\n\n                    if (!this.cubeBuilder) {\n                        data = this._normalizeData({\n                            columnsLength: membersCount(axes.rows.tuples, measures),\n                            rowsLength: axes.columns.tuples.length,\n                            data: data\n                        });\n                    }\n                }\n            }\n\n            this._lastExpanded = null;\n\n            var result = this._mergeAxes(axes, data, axisToSkip);\n            this._axes = result.axes;\n\n            return result.data;\n        },\n\n        _readData: function(data) {\n            var axes = this.reader.axes(data);\n            var newData = this.reader.data(data);\n\n            if (this.cubeBuilder) {\n                this._rawData = newData;\n            }\n\n            return this._processResult(newData, axes);\n        },\n\n        _createTuple: function(tuple, measure, buildRoot) {\n            var members = tuple.members;\n            var length = members.length;\n            var root = { members: [] };\n            var levelName, levelNum;\n            var name, parentName;\n            var hasChildren;\n            var hierarchy;\n            var caption;\n            var member;\n            var idx = 0;\n\n            if (measure) {\n                length -= 1;\n            }\n\n            for (; idx < length; idx++) {\n                member = members[idx];\n                levelNum = Number(member.levelNum);\n\n                name = member.name;\n                parentName = member.parentName;\n                caption = member.caption || name;\n                hasChildren = member.hasChildren;\n                hierarchy = member.hierarchy;\n                levelName = member.levelName;\n\n                if (buildRoot) {\n                    caption = \"All\";\n                    if (levelNum === 0) {\n                        parentName = member.name;\n                    } else {\n                        levelNum -= 1;\n                    }\n\n                    hasChildren = true;\n                    name = hierarchy = levelName = parentName;\n                }\n\n                root.members.push({\n                    name: name,\n                    children: [],\n                    caption: caption,\n                    levelName: levelName,\n                    levelNum: levelNum.toString(),\n                    hasChildren: hasChildren,\n                    hierarchy: hierarchy,\n                    parentName: !buildRoot ? parentName : \"\"\n                });\n            }\n\n            if (measure) {\n                root.members.push({\n                    name: measure.name,\n                    children: []\n                });\n            }\n\n            return root;\n        },\n\n        _hasRoot: function(target, source, descriptors) {\n            if (source.length) {\n                return findExistingTuple(source, target).tuple;\n            }\n\n            var members = target.members;\n            var member;\n            var descriptor;\n\n            var isRoot = true;\n            var levelNum;\n\n            for (var idx = 0, length = members.length; idx < length; idx++) {\n                member = members[idx];\n                levelNum = Number(member.levelNum) || 0;\n                descriptor = descriptors[idx];\n\n                if (!(levelNum === 0 || (descriptor && member.name === getName(descriptor)))) {\n                    isRoot = false;\n                    break;\n                }\n            }\n\n            return isRoot;\n        },\n\n        _mergeAxes: function(sourceAxes, data, axisToSkip) {\n            var columnMeasures = this._columnMeasures();\n            var rowMeasures = this._rowMeasures();\n            var axes = this.axes();\n            var startIndex, tuples;\n\n            var oldRowsLength = membersCount(axes.rows.tuples, rowMeasures);\n            var newRowsLength = sourceAxes.rows.tuples.length;\n\n            var oldColumnsLength = membersCount(axes.columns.tuples, columnMeasures);\n            var newColumnsLength = sourceAxes.columns.tuples.length;\n\n            if (axisToSkip == \"columns\") {\n                newColumnsLength = oldColumnsLength;\n                tuples = sourceAxes.columns.tuples;\n            } else {\n                tuples = parseSource(sourceAxes.columns.tuples, columnMeasures);\n                data = prepareDataOnColumns(tuples, data);\n            }\n\n            var mergedColumns = mergeTuples(axes.columns.tuples, tuples, columnMeasures);\n\n            if (axisToSkip == \"rows\") {\n                newRowsLength = membersCount(sourceAxes.rows.tuples, rowMeasures);\n                tuples = sourceAxes.rows.tuples;\n            } else {\n                tuples = parseSource(sourceAxes.rows.tuples, rowMeasures);\n                data = prepareDataOnRows(tuples, data);\n            }\n            var mergedRows = mergeTuples(axes.rows.tuples, tuples, rowMeasures);\n\n            axes.columns.tuples = mergedColumns.tuples;\n            axes.rows.tuples = mergedRows.tuples;\n\n            if (oldColumnsLength !== membersCount(axes.columns.tuples, columnMeasures)) {\n                //columns are expanded\n                startIndex = mergedColumns.index + findDataIndex(mergedColumns.parsedRoot, mergedColumns.memberIndex, columnMeasures);\n                var offset = oldColumnsLength + newColumnsLength;\n                data = this._mergeColumnData(data, startIndex, newRowsLength, newColumnsLength, offset);\n            } else if (oldRowsLength !== membersCount(axes.rows.tuples, rowMeasures)) {\n                //rows are expanded\n                startIndex = mergedRows.index + findDataIndex(mergedRows.parsedRoot, mergedRows.memberIndex, rowMeasures);\n                data = this._mergeRowData(data, startIndex, newRowsLength, newColumnsLength);\n            }\n\n            if (axes.columns.tuples.length === 0 && axes.rows.tuples.length === 0) {\n                data = [];\n            }\n\n            return {\n                axes: axes,\n                data: data\n            };\n        },\n\n        _mergeColumnData: function(newData, columnIndex, rowsLength, columnsLength, offset) {\n            var data = this.data().toJSON();\n            var rowIndex, index, drop = 0, toAdd;\n            var columnMeasures = Math.max(this._columnMeasures().length, 1);\n\n            rowsLength = Math.max(rowsLength, 1);\n\n            if (data.length > 0) {\n                //if there is already data, drop the first new data item\n                drop = columnMeasures;\n                offset -= columnMeasures;\n            }\n\n            for (rowIndex = 0; rowIndex < rowsLength; rowIndex++) {\n                index = columnIndex + (rowIndex * offset);\n                toAdd = newData.splice(0, columnsLength);\n                toAdd.splice(0, drop);\n                [].splice.apply(data, [index, 0].concat(toAdd));\n            }\n\n            return data;\n        },\n\n        _mergeRowData: function(newData, rowIndex, rowsLength, columnsLength) {\n            var data = this.data().toJSON();\n            var idx, dataIndex, toAdd;\n            var rowMeasures = Math.max(this._rowMeasures().length, 1);\n\n            columnsLength = Math.max(columnsLength, 1);\n            if (data.length > 0) {\n                //if there is already data, drop the first new data item\n                rowsLength -= rowMeasures;\n                newData.splice(0, columnsLength * rowMeasures);\n            }\n\n            for (idx = 0; idx < rowsLength; idx++) {\n                toAdd = newData.splice(0, columnsLength);\n                dataIndex = (rowIndex * columnsLength) + (idx * columnsLength);\n                [].splice.apply(data, [dataIndex, 0].concat(toAdd));\n            }\n\n            return data;\n        },\n\n        _columnMeasures: function() {\n            var measures = this.measures();\n            var columnMeasures = [];\n\n            if (this.measuresAxis() === \"columns\") {\n                if (this.columns().length === 0) {\n                    columnMeasures = measures;\n                } else if (measures.length > 1) {\n                    columnMeasures = measures;\n                }\n            }\n\n            return columnMeasures;\n        },\n\n        _rowMeasures: function() {\n            var measures = this.measures();\n            var rowMeasures = [];\n\n            if (this.measuresAxis() === \"rows\") {\n                if (this.rows().length === 0) {\n                    rowMeasures = measures;\n                } else if (measures.length > 1) {\n                    rowMeasures = measures;\n                }\n            }\n\n            return rowMeasures;\n        },\n\n        _updateLocalData: function(data, state) {\n            if (this.cubeBuilder) {\n                if (state) {\n                    this._requestData = state;\n                }\n                data = this._processResult(data);\n            }\n\n            this._data = this._observe(data);\n\n            this._ranges = [];\n            this._addRange(this._data);\n\n            this._total = this._data.length;\n            this._pristineTotal = this._total;\n            this._process(this._data);\n        },\n\n        data: function(value) {\n            var that = this;\n            if (value !== undefined$1) {\n                this._pristineData = value.slice(0);\n                this._updateLocalData(value, {\n                        columns: this.columns(),\n                        rows: this.rows(),\n                        measures: this.measures()\n                    });\n            } else {\n                return that._data;\n            }\n        },\n\n        _normalizeTuples: function(tuples, source, descriptors, measures) {\n            var length = measures.length || 1;\n            var idx = 0;\n\n            var roots = [];\n            var indexes = {};\n            var measureIdx = 0;\n            var tuple, memberIdx, last;\n\n            if (!tuples.length) {\n                return;\n            }\n\n            if (this._skipNormalize <= 0 && !this._hasRoot(tuples[0], source, descriptors)) {\n                this._skipNormalize = 0;\n                for (; idx < length; idx++) {\n                    roots.push(this._createTuple(tuples[0], measures[idx], true));\n                    indexes[idx] = idx;\n                }\n\n                tuples.splice.apply(tuples, [0, tuples.length].concat(roots).concat(tuples));\n                idx = length;\n            }\n\n            if (measures.length) {\n                last = tuple = tuples[idx];\n                memberIdx = tuple.members.length - 1;\n\n                while (tuple) {\n                    if (measureIdx >= length) {\n                        measureIdx = 0;\n                    }\n\n                    if (tuple.members[memberIdx].name !== measures[measureIdx].name) {\n                        tuples.splice(idx, 0, this._createTuple(tuple, measures[measureIdx]));\n                        indexes[idx] = idx;\n                    }\n\n                    idx += 1;\n                    measureIdx += 1;\n                    tuple = tuples[idx];\n\n                    if (length > measureIdx && (!tuple || tupleName(last, memberIdx - 1) !== tupleName(tuple, memberIdx - 1))) {\n                        for (; measureIdx < length; measureIdx++) {\n                            tuples.splice(idx, 0, this._createTuple(last, measures[measureIdx]));\n                            indexes[idx] = idx;\n                            idx += 1;\n                        }\n                        tuple = tuples[idx];\n                    }\n                    last = tuple;\n                }\n            }\n\n            return indexes;\n        },\n\n        _addMissingDataItems: function(result, metadata) {\n            while (metadata.rowIndexes[parseInt(result.length / metadata.columnsLength, 10)] !== undefined$1) {\n                for (var idx = 0; idx < metadata.columnsLength; idx++) {\n                    result = addEmptyDataItem(result);\n                }\n            }\n\n            while (metadata.columnIndexes[result.length % metadata.columnsLength] !== undefined$1) {\n                result = addEmptyDataItem(result);\n            }\n\n            return result;\n        },\n\n        _normalizeOrdinals: function(result, dataItem, metadata) {\n            var lastOrdinal = metadata.lastOrdinal;\n\n            if (!dataItem) {\n                return addEmptyDataItem(result);\n            }\n\n            if ((dataItem.ordinal - lastOrdinal) > 1) {\n                lastOrdinal += 1;\n\n                while (lastOrdinal < dataItem.ordinal && result.length < metadata.length) {\n                    result = this._addMissingDataItems(addEmptyDataItem(result), metadata);\n                    lastOrdinal += 1;\n                }\n            }\n\n            dataItem.ordinal = result.length;\n            result[result.length] = dataItem;\n\n            return result;\n        },\n\n        _normalizeData: function(options) {\n            var data = options.data;\n            var dataIdx = 0;\n            var dataItem;\n            var result = [];\n            var lastOrdinal;\n            var length;\n\n            options.lastOrdinal = 0;\n            options.columnIndexes = options.columnIndexes || {};\n            options.rowIndexes = options.rowIndexes || {};\n            options.columnsLength = options.columnsLength || 1;\n            options.rowsLength = options.rowsLength || 1;\n            options.length = options.columnsLength * options.rowsLength;\n            length = options.length;\n\n            if (data.length === length) {\n                return data;\n            }\n\n            while (result.length < length) {\n                dataItem = data[dataIdx++];\n                if (dataItem) {\n                    lastOrdinal = dataItem.ordinal;\n                }\n\n                result = this._normalizeOrdinals(this._addMissingDataItems(result, options), dataItem, options);\n\n                options.lastOrdinal = lastOrdinal;\n            }\n\n            return result;\n        },\n\n        discover: function(options, converter) {\n            var that = this,\n                transport = that.transport;\n\n            return $.Deferred(function(deferred) {\n                transport.discover(extend({\n                    success: function(response) {\n                       response = that.reader.parse(response);\n\n                        if (that._handleCustomErrors(response)) {\n                            return;\n                        }\n\n                        if (converter) {\n                            response = converter(response);\n                        }\n                        deferred.resolve(response);\n                    },\n                    error: function(response, status, error) {\n                        deferred.reject(response);\n                        that.error(response, status, error);\n                    }\n                }, options));\n            }).promise().done(function() {\n                that.trigger(\"schemaChange\");\n            });\n        },\n\n        schemaMeasures: function() {\n            var that = this;\n\n            return that.discover({\n                data: {\n                    command: \"schemaMeasures\",\n                    restrictions: {\n                        catalogName: that.transport.catalog(),\n                        cubeName: that.transport.cube()\n                    }\n                }\n            }, function(response) {\n                return that.reader.measures(response);\n            });\n        },\n\n        schemaKPIs: function() {\n            var that = this;\n\n            return that.discover({\n                data: {\n                    command: \"schemaKPIs\",\n                    restrictions: {\n                        catalogName: that.transport.catalog(),\n                        cubeName: that.transport.cube()\n                    }\n                }\n            }, function(response) {\n                return that.reader.kpis(response);\n            });\n        },\n\n        schemaDimensions: function() {\n            var that = this;\n\n            return that.discover({\n                data: {\n                    command: \"schemaDimensions\",\n                    restrictions: {\n                        catalogName: that.transport.catalog(),\n                        cubeName: that.transport.cube()\n                    }\n                }\n            }, function(response) {\n                return that.reader.dimensions(response);\n            });\n        },\n\n        schemaHierarchies: function(dimensionName) {\n            var that = this;\n\n            return that.discover({\n                data: {\n                    command: \"schemaHierarchies\",\n                    restrictions: {\n                        catalogName: that.transport.catalog(),\n                        cubeName: that.transport.cube(),\n                        dimensionUniqueName: dimensionName\n                    }\n                }\n            }, function(response) {\n                return that.reader.hierarchies(response);\n            });\n        },\n\n        schemaLevels: function(hierarchyName) {\n            var that = this;\n\n            return that.discover({\n                data: {\n                    command: \"schemaLevels\",\n                    restrictions: {\n                        catalogName: that.transport.catalog(),\n                        cubeName: that.transport.cube(),\n                        hierarchyUniqueName: hierarchyName\n                    }\n                }\n            }, function(response) {\n                return that.reader.levels(response);\n            });\n        },\n\n        schemaCubes: function() {\n            var that = this;\n\n            return that.discover({\n                data: {\n                    command: \"schemaCubes\",\n                    restrictions: {\n                        catalogName: that.transport.catalog()\n                    }\n                }\n            }, function(response) {\n                return that.reader.cubes(response);\n            });\n        },\n\n        schemaCatalogs: function() {\n            var that = this;\n\n            return that.discover({\n                data: {\n                    command: \"schemaCatalogs\"\n                }\n            }, function(response) {\n                return that.reader.catalogs(response);\n            });\n        },\n\n        schemaMembers: function(restrictions) {\n            var that = this;\n            var success = (function(restrictions) {\n                return function(response) {\n                    return that.reader.members(response, restrictions);\n                };\n            }(restrictions));\n\n            return that.discover({\n                data: {\n                    command: \"schemaMembers\",\n                    restrictions: extend({\n                       catalogName: that.transport.catalog(),\n                       cubeName: that.transport.cube()\n                   }, restrictions)\n                }\n            }, success);\n        },\n\n        _params: function(data) {\n            if (this._clearAxesData) {\n                this._axes = {};\n                this._data = this._observe([]);\n                this._clearAxesData = false;\n                this.trigger(STATERESET);\n            }\n\n            var options = DataSource.fn._params.call(this, data);\n\n            options = extend({\n                measures: this.measures(),\n                measuresAxis: this.measuresAxis(),\n                columns: this.columns(),\n                rows: this.rows()\n            }, options);\n\n            if (this.cubeBuilder) {\n                this._requestData = options;\n            }\n\n            return options;\n        }\n    });\n\n    function flatColumns(columns) {\n        var result = [];\n        for (var idx = 0; idx < columns.length; idx++) {\n            result.push(columns[idx]);\n            if (columns[idx].children) {\n                result = result.concat(flatColumns(columns[idx].children));\n            }\n        }\n\n        return result;\n    }\n\n    function sortItemsTree(field, items, sortFunction) {\n        for (var i = 0; i < items.length; i++) {\n            if (items[i].children && items[i].children.length) {\n                sortItemsTree(field, items[i].children, sortFunction);\n            }\n        }\n        if (items[0].parentName != field) {\n            return;\n        }\n        items = items.sort(sortFunction);\n    }\n\n    function fillSortTree(items, map) {\n        for (var i = 0; i < items.length; i++) {\n            var currentItem = map[items[i].name];\n\n            if (!$.isEmptyObject(currentItem.childrenMap)) {\n                items[i].children = [];\n                for (var name in currentItem.childrenMap) {\n                    items[i].children.push($.extend({}, { name: name, parentName: map[name].parentName }));\n                }\n\n                fillSortTree(items[i].children, map);\n            }\n        }\n    }\n\n    function addEmptyDataItem(result) {\n        result[result.length] = { value: \"\", fmtValue: \"\", ordinal: result.length };\n        return result;\n    }\n\n    function validateAxis(newAxis, axis, measures) {\n        if (newAxis.tuples.length < membersCount(axis.tuples, measures)) {\n\n            return axis;\n        }\n\n        return;\n    }\n\n    function adjustDataByColumn(sourceTuples, targetTuples, rowsLength, measures, data) {\n        var columnIdx, rowIdx, dataIdx;\n        var columnsLength = sourceTuples.length;\n        var targetColumnsLength = membersCount(targetTuples, measures);\n        var measuresLength = measures.length || 1;\n\n        for (rowIdx = 0; rowIdx < rowsLength; rowIdx++) {\n            for (columnIdx = 0; columnIdx < columnsLength; columnIdx++) {\n                dataIdx = tupleIndex(sourceTuples[columnIdx], targetTuples) * measuresLength;\n                dataIdx += columnIdx % measuresLength;\n\n                data[rowIdx * columnsLength + columnIdx].ordinal = rowIdx * targetColumnsLength + dataIdx;\n            }\n        }\n    }\n\n    function adjustDataByRow(sourceTuples, targetTuples, columnsLength, measures, data) {\n        var columnIdx, rowIdx, dataIdx;\n        var rowsLength = sourceTuples.length;\n        var measuresLength = measures.length || 1;\n\n        for (rowIdx = 0; rowIdx < rowsLength; rowIdx++) {\n            dataIdx = tupleIndex(sourceTuples[rowIdx], targetTuples);\n            dataIdx *= measuresLength;\n            dataIdx += rowIdx % measuresLength;\n\n            for (columnIdx = 0; columnIdx < columnsLength; columnIdx++) {\n                data[rowIdx * columnsLength + columnIdx].ordinal = dataIdx * columnsLength + columnIdx;\n            }\n        }\n    }\n\n    function tupleIndex(tuple, collection) {\n        return findExistingTuple(collection, tuple).index;\n    }\n\n    function membersCount(tuples, measures) {\n        if (!tuples.length) {\n            return 0;\n        }\n\n        var queue = tuples.slice();\n        var current = queue.shift();\n        var result = 1;\n\n        while (current) {\n            if (current.members) {\n                [].push.apply(queue, current.members);\n            } else if (current.children) {\n                if (!current.measure) {\n                    result += current.children.length;\n                }\n                [].push.apply(queue, current.children);\n            }\n\n            current = queue.shift();\n        }\n\n        if (measures.length) {\n            result = result * measures.length;\n        }\n\n        return result;\n    }\n\n    function normalizeAxis(axis) {\n        if (!axis) {\n            axis = {\n                tuples: []\n            };\n        }\n\n        if (!axis.tuples) {\n            axis.tuples = [];\n        }\n\n        return axis;\n    }\n\n    function findDataIndex(tuple, memberIndex, measures) {\n        if (!tuple) {\n            return 0;\n        }\n\n        var measuresLength = Math.max(measures.length, 1);\n        var tuples = tuple.members.slice(0, memberIndex);\n        var current = tuples.shift();\n\n        //the initial value is equal to the total number of measures\n        //as the measures member is not extracted from the members of the starting tuple\n        //but should be calculated in the final result\n        var counter = measuresLength;\n\n        while (current) {\n            if (current.name === MEASURES) {\n                //subtract 1 as the measures member has been already counted as a single standard member\n                //but we are interested in the total number of measures instead\n                counter += (measuresLength - 1);\n            } else if (current.children) {\n                //is member\n                [].push.apply(tuples, current.children);\n            } else {\n                //is tuple\n                counter ++;\n                [].push.apply(tuples, current.members);\n            }\n\n            current = tuples.shift();\n        }\n\n        return counter;\n    }\n\n    function mergeTuples(target, source, measures) {\n        if (!source[0]) {\n            return {\n                parsedRoot: null,\n                tuples: target,\n                memberIndex: 0,\n                index: 0\n            };\n        }\n\n        var result = findExistingTuple(target, source[0]);\n\n        if (!result.tuple) {\n            return {\n                parsedRoot: null,\n                tuples: source,\n                memberIndex: 0,\n                index: 0\n            };\n        }\n\n        var targetMembers = result.tuple.members;\n        var sourceMembers = source[0].members;\n        var memberIndex = -1;\n\n        if (targetMembers.length !== sourceMembers.length) {\n            return {\n                parsedRoot: null,\n                tuples: source,\n                memberIndex: 0,\n                index: 0\n            };\n        }\n\n        for (var idx = 0, length = targetMembers.length; idx < length; idx++) {\n            if (!targetMembers[idx].measure && sourceMembers[idx].children[0]) {\n                if (memberIndex == -1 && sourceMembers[idx].children.length) {\n                    memberIndex = idx;\n                }\n\n                targetMembers[idx].children = sourceMembers[idx].children;\n            }\n        }\n\n        measures = Math.max(measures.length, 1);\n\n        return {\n            parsedRoot: result.tuple,\n            index: result.index * measures,\n            memberIndex: memberIndex,\n            tuples: target\n        };\n    }\n\n    function equalTuples(first, second) {\n        var equal = true;\n        var idx, length;\n\n        first = first.members;\n        second = second.members;\n\n        for (idx = 0, length = first.length; idx < length; idx++) {\n            if (first[idx].measure || second[idx].measure) {\n                continue;\n            }\n\n            equal = equal && (getName(first[idx]) === getName(second[idx]));\n        }\n\n        return equal;\n    }\n\n    function findExistingTuple(tuples, toFind) {\n        var idx, length, tuple, found, counter = 0;\n        var memberIndex, membersLength, member;\n\n        for (idx = 0, length = tuples.length; idx < length; idx++) {\n            tuple = tuples[idx];\n            if (equalTuples(tuple, toFind)) {\n                return {\n                    tuple: tuple,\n                    index: counter\n                };\n            }\n\n            counter ++;\n\n            for (memberIndex = 0, membersLength = tuple.members.length; memberIndex < membersLength; memberIndex++) {\n                member = tuple.members[memberIndex];\n                if (member.measure) {\n                    //counter += member.children.length;\n                    continue;\n                }\n                found = findExistingTuple(member.children, toFind);\n                counter += found.index;\n                if (found.tuple) {\n                    return {\n                        tuple: found.tuple,\n                        index: counter\n                    };\n                }\n            }\n        }\n\n        return {\n            index: counter\n        };\n    }\n\n    function addMembers(members, map) {\n        var member, i, len, path = \"\";\n        for (i = 0, len = members.length; i < len; i++) {\n            member = members[i];\n            path += member.name;\n            if (!map[path]) {\n                map[path] = member;\n            }\n        }\n    }\n\n\n    function findParentMember(tuple, map) {\n        var members = tuple.members;\n        var i, len, member, path = \"\";\n        var parentPath = \"\";\n        var parentMember;\n\n        for (i = 0, len = members.length; i < len; i++) {\n            member = members[i];\n            if (parentMember) {\n                if (map[path + member.name]) {\n                    path += member.name;\n                    parentMember = map[path];\n                    continue;\n                } else if (map[path + member.parentName]) {\n                    return map[path + member.parentName];\n                } else if (map[parentPath + member.parentName]) {\n                    return map[parentPath + member.parentName];\n                } else {\n                    return map[parentPath];\n                }\n            }\n\n            path += member.name;\n            parentMember = map[member.parentName];\n\n            if (!parentMember) {\n                parentMember = map[path];\n                if (!parentMember) {\n                    return null;\n                }\n            }\n\n            if (parentMember) {\n                parentPath += parentMember.name;\n            }\n        }\n\n        return parentMember;\n    }\n\n    function measurePosition(tuple, measures) {\n        if (measures.length === 0) {\n            return -1;\n        }\n\n        var measure = measures[0];\n        var members = tuple.members;\n        for (var idx = 0, len = members.length; idx < len; idx ++) {\n            if (members[idx].name == measure.name) {\n                return idx;\n            }\n        }\n    }\n\n    function normalizeTupleMeasures(tuple, index) {\n        if (index < 0) {\n            return;\n        }\n        var member = {\n            name: MEASURES,\n            measure: true,\n            children: [\n                $.extend({ members: [], dataIndex: tuple.dataIndex }, tuple.members[index])\n            ]\n        };\n        tuple.members.splice(index, 1, member);\n        tuple.dataIndex = undefined$1;\n    }\n\n    function parseSource(tuples, measures) {\n        if (tuples.length < 1) {\n            return [];\n        }\n        var result = [];\n        var map = { };\n        var measureIndex = measurePosition(tuples[0], measures);\n\n        for (var i = 0; i < tuples.length; i++) {\n            var tuple = tuples[i];\n\n            //keep the old data index of the tuple\n            tuple.dataIndex = i;\n\n            normalizeTupleMeasures(tuple, measureIndex);\n            var parentMember = findParentMember(tuple, map);\n\n            if (parentMember) {\n                if (measureIndex < 0 || !parentMember.measure) {\n                    parentMember.children.push(tuple);\n                } else {\n                    parentMember.children.push(tuple.members[measureIndex].children[0]);\n                }\n            } else {\n                result.push(tuple);\n            }\n\n            addMembers(tuple.members, map);\n        }\n\n        return result;\n    }\n\n    function prepareDataOnRows(tuples, data) {\n        if (!tuples || !tuples.length) {\n            return data;\n        }\n\n        var result = [];\n        var indices = buildDataIndices(tuples);\n        var rowsLength = indices.length;\n        var columnsLength = Math.max(data.length / rowsLength, 1);\n        var rowIndex, columnIndex, targetIndex, sourceIndex;\n        var calcIndex;\n\n        for (rowIndex = 0; rowIndex < rowsLength; rowIndex++) {\n            targetIndex = columnsLength * rowIndex;\n            sourceIndex = columnsLength * indices[rowIndex];\n            for (columnIndex = 0; columnIndex < columnsLength; columnIndex++) {\n                calcIndex = parseInt(sourceIndex + columnIndex, 10);\n                result[parseInt(targetIndex + columnIndex, 10)] = data[calcIndex] || { value: \"\", fmtValue: \"\", ordinal: calcIndex };\n            }\n        }\n\n        return result;\n    }\n\n    function prepareDataOnColumns(tuples, data) {\n        if (!tuples || !tuples.length) {\n            return data;\n        }\n\n        var result = [];\n        var indices = buildDataIndices(tuples);\n        var columnsLength = indices.length;\n        var rowsLength = Math.max(data.length / columnsLength, 1);\n        var columnIndex, rowIndex, dataIndex, calcIndex;\n\n        for (rowIndex = 0; rowIndex < rowsLength; rowIndex++) {\n            dataIndex = columnsLength * rowIndex;\n            for (columnIndex = 0; columnIndex < columnsLength; columnIndex++) {\n                calcIndex = indices[columnIndex] + dataIndex;\n                result[dataIndex + columnIndex] = data[calcIndex] || { value: \"\", fmtValue: \"\", ordinal: calcIndex };\n            }\n        }\n\n        return result;\n    }\n\n    function buildDataIndices(tuples) {\n        tuples = tuples.slice();\n        var result = [];\n        var tuple = tuples.shift();\n        var idx, length, spliceIndex, children, member;\n\n        while (tuple) {\n            //required for multiple measures\n            if (tuple.dataIndex !== undefined$1) {\n                result.push(tuple.dataIndex);\n            }\n\n            spliceIndex = 0;\n            for (idx = 0, length = tuple.members.length; idx < length; idx++) {\n                member = tuple.members[idx];\n                children = member.children;\n                if (member.measure) {\n                    [].splice.apply(tuples, [0, 0].concat(children));\n                } else {\n                    [].splice.apply(tuples, [spliceIndex, 0].concat(children));\n                }\n                spliceIndex += children.length;\n            }\n\n            tuple = tuples.shift();\n        }\n\n        return result;\n    }\n\n    PivotDataSourceV2.create = function(options) {\n        options = options && options.push ? { data: options } : options;\n\n        var dataSource = options || {},\n            data = dataSource.data;\n\n        dataSource.data = data;\n\n        if (!(dataSource instanceof PivotDataSourceV2) && dataSource instanceof kendo.data.DataSource) {\n            throw new Error(\"Incorrect DataSource type. Only PivotDataSource instances are supported\");\n        }\n\n        return dataSource instanceof PivotDataSourceV2 ? dataSource : new PivotDataSourceV2(dataSource);\n    };\n\n    PivotDataSource.create = function(options) {\n        options = options && options.push ? { data: options } : options;\n\n        var dataSource = options || {},\n            data = dataSource.data;\n\n        dataSource.data = data;\n\n        if (!(dataSource instanceof PivotDataSource) && dataSource instanceof kendo.data.DataSource) {\n            throw new Error(\"Incorrect DataSource type. Only PivotDataSource instances are supported\");\n        }\n\n        return dataSource instanceof PivotDataSource ? dataSource : new PivotDataSource(dataSource);\n    };\n\n    function baseHierarchyPath(memberName) {\n        var parts = memberName.split(\".\");\n        if (parts.length > 2) {\n            return parts[0] + \".\" + parts[1];\n        }\n        return memberName;\n    }\n\n    function expandMemberDescriptor(names, sort) {\n        var idx = names.length - 1;\n        var name = names[idx];\n        var sortDescriptor;\n\n        sortDescriptor = sortDescriptorForMember(sort, name);\n\n        if (sortDescriptor && sortDescriptor.dir) {\n            name = \"ORDER(\" + name + \".Children,\" + sortDescriptor.field + \".CurrentMember.MEMBER_CAPTION,\" + sortDescriptor.dir + \")\";\n        } else {\n            name += \".Children\";\n        }\n\n        names[idx] = name;\n\n        return names;\n    }\n\n    function sortDescriptorForMember(sort, member) {\n        for (var idx = 0, length = sort.length; idx < length; idx++) {\n            if (member.indexOf(sort[idx].field) === 0) {\n                return sort[idx];\n            }\n        }\n        return null;\n    }\n\n    function crossJoin(names) {\n        var result = \"CROSSJOIN({\";\n        var r;\n\n        if (names.length > 2) {\n            r = names.pop();\n            result += crossJoin(names);\n        } else {\n            result += names.shift();\n            r = names.pop();\n        }\n\n        result += \"},{\";\n        result += r;\n        result += \"})\";\n        return result;\n    }\n\n    function crossJoinCommand(members, measures) {\n        var tmp = members.slice(0);\n\n        if (measures.length > 1) {\n            tmp.push(\"{\" + measureNames(measures).join(\",\") + \"}\");\n        }\n\n        return crossJoin(tmp);\n    }\n\n    function measureNames(measures) {\n        var idx = 0;\n        var length = measures.length;\n        var result = [];\n        var measure;\n\n        for (; idx < length; idx++) {\n            measure = measures[idx];\n            result.push(measure.name !== undefined$1 ? measure.name : measure);\n        }\n\n        return result;\n    }\n\n    function indexOf(name, items) {\n        var idx, length, index = -1;\n\n        for (idx = 0, length = items.length; idx < length; idx++) {\n            if (getName(items[idx]) === name) {\n                index = idx;\n                break;\n            }\n        }\n        return index;\n    }\n\n    function getName(name) {\n        name = name.name || name;\n\n        if (toString.call(name) === \"[object Array]\") {\n            name = name[name.length - 1];\n        }\n\n        return name;\n    }\n\n    function getRootNames(members) {\n        var length = members.length;\n        var names = [];\n        var idx = 0;\n\n        for (; idx < length; idx++) {\n            names.push(members[idx].name[0]);\n        }\n\n        return names;\n    }\n\n    function mapNames(names, rootNames) {\n        var name;\n        var rootName;\n\n        var j;\n        var idx = 0;\n        var length = names.length;\n        var rootLength = rootNames.length;\n\n        rootNames = rootNames.slice(0);\n\n        for (; idx < length; idx++) {\n            name = names[idx];\n\n            for (j = 0; j < rootLength; j++) {\n                rootName = baseHierarchyPath(rootNames[j]);\n\n                if (name.indexOf(rootName) !== -1) {\n                    rootNames[j] = name;\n                    break;\n                }\n            }\n        }\n\n        return {\n            names: rootNames,\n            expandedIdx: j,\n            uniquePath: rootNames.slice(0, j + 1).join(\"\")\n        };\n    }\n\n    function parseDescriptors(members) {\n        var expanded = [];\n        var child = [];\n        var root = [];\n        var member;\n\n        var j, l;\n        var idx = 0;\n        var length = members.length;\n\n        var name;\n        var hierarchyName;\n\n        var found;\n\n        for (; idx < length; idx++) {\n            member = members[idx];\n            name = member.name;\n            found = false;\n\n            if (toString.call(name) !== \"[object Array]\") {\n                member.name = name = [name];\n            }\n\n            if (name.length > 1) {\n                child.push(member);\n            } else {\n                hierarchyName = baseHierarchyPath(name[0]);\n\n                for (j = 0, l = root.length; j < l; j++) {\n                    if (root[j].name[0].indexOf(hierarchyName) === 0) {\n                        found = true;\n                        break;\n                    }\n                }\n\n                if (!found) {\n                    root.push(member);\n                }\n\n                if (member.expand) {\n                    expanded.push(member);\n                }\n            }\n        }\n\n        expanded = expanded.concat(child);\n\n        return {\n            root: root,\n            expanded: expanded\n        };\n    }\n\n    function serializeMembers(members, measures, sort) {\n        var command = \"\";\n\n        members = members || [];\n\n        var expanded = parseDescriptors(members);\n        var root = expanded.root;\n\n        var rootNames = getRootNames(root);\n        var crossJoinCommands = [];\n\n        expanded = expanded.expanded;\n\n        var length = expanded.length;\n        var idx = 0;\n\n        var memberName;\n        var names = [];\n\n        if (rootNames.length > 1 || measures.length > 1) {\n            crossJoinCommands.push(crossJoinCommand(rootNames, measures));\n\n            for (; idx < length; idx++) {\n                memberName = expandMemberDescriptor(expanded[idx].name, sort);\n                names = mapNames(memberName, rootNames).names;\n\n                crossJoinCommands.push(crossJoinCommand(names, measures));\n            }\n\n            command += crossJoinCommands.join(\",\");\n        } else {\n            for (; idx < length; idx++) {\n                memberName = expandMemberDescriptor(expanded[idx].name, sort);\n                names.push(memberName[0]); //check if this is ok\n            }\n\n            command += rootNames.concat(names).join(\",\");\n        }\n\n        return command;\n    }\n\n    var filterFunctionFormats = {\n        contains: \", InStr({0}.CurrentMember.MEMBER_CAPTION,\\\"{1}\\\") > 0\",\n        doesnotcontain: \", InStr({0}.CurrentMember.MEMBER_CAPTION,\\\"{1}\\\")\",\n        startswith: \", Left({0}.CurrentMember.MEMBER_CAPTION,Len(\\\"{1}\\\"))=\\\"{1}\\\"\",\n        endswith: \", Right({0}.CurrentMember.MEMBER_CAPTION,Len(\\\"{1}\\\"))=\\\"{1}\\\"\",\n        eq: \", {0}.CurrentMember.MEMBER_CAPTION = \\\"{1}\\\"\",\n        neq: \", {0}.CurrentMember.MEMBER_CAPTION = \\\"{1}\\\"\"\n    };\n\n    function serializeExpression(expression) {\n        var command = \"\";\n        var value = expression.value;\n        var field = expression.field;\n        var operator = expression.operator;\n\n        if (operator == \"in\") {\n            command += \"{\";\n            command += value;\n            command += \"}\";\n        } else {\n            command += operator == \"neq\" || operator == \"doesnotcontain\" ? \"-\" : \"\";\n            command += \"Filter(\";\n            command += field + \".MEMBERS\";\n            command += kendo.format(filterFunctionFormats[operator], field, value);\n            command += \")\";\n        }\n\n        return command;\n    }\n\n    function serializeFilters(filter, cube) {\n        var command = \"\", current;\n        var filters = filter.filters;\n        var length = filters.length;\n        var idx;\n\n        for (idx = length - 1; idx >= 0; idx--) {\n\n            current = \"SELECT (\";\n            current += serializeExpression(filters[idx]);\n            current += \") ON 0\";\n\n            if (idx == length - 1) {\n                current += \" FROM [\" + cube + \"]\";\n                command = current;\n            } else {\n                command = current + \" FROM ( \" + command + \" )\";\n            }\n        }\n\n        return command;\n    }\n\n    function serializeOptions(parentTagName, options, capitalize) {\n        var result = \"\";\n\n        if (options) {\n            result += \"<\" + parentTagName + \">\";\n            var value;\n            for (var key in options) {\n                value = options[key];\n                if (capitalize) {\n                    key = key.replace(/([A-Z]+(?=$|[A-Z][a-z])|[A-Z]?[a-z]+)/g, \"$1_\").toUpperCase().replace(/_$/, \"\");\n                }\n                result += \"<\" + key + \">\" + value + \"</\" + key + \">\";\n            }\n            result += \"</\" + parentTagName + \">\";\n        } else {\n            result += \"<\" + parentTagName + \"/>\";\n        }\n        return result;\n    }\n\n    var xmlaDiscoverCommands = {\n        schemaCubes: \"MDSCHEMA_CUBES\",\n        schemaCatalogs: \"DBSCHEMA_CATALOGS\",\n        schemaMeasures: \"MDSCHEMA_MEASURES\",\n        schemaDimensions: \"MDSCHEMA_DIMENSIONS\",\n        schemaHierarchies: \"MDSCHEMA_HIERARCHIES\",\n        schemaLevels: \"MDSCHEMA_LEVELS\",\n        schemaMembers: \"MDSCHEMA_MEMBERS\",\n        schemaKPIs: \"MDSCHEMA_KPIS\"\n    };\n\n    var convertersMap = {\n        read: function(options) {\n            var command = '<Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\"><Header/><Body><Execute xmlns=\"urn:schemas-microsoft-com:xml-analysis\"><Command><Statement>';\n\n            command += \"SELECT NON EMPTY {\";\n\n            var columns = options.columns || [];\n            var rows = options.rows || [];\n\n            var measures = options.measures || [];\n            var measuresRowAxis = options.measuresAxis === \"rows\";\n            var sort = options.sort || [];\n\n            if (!columns.length && rows.length && (!measures.length || (measures.length && measuresRowAxis))) {\n                columns = rows;\n                rows = [];\n                measuresRowAxis = false;\n            }\n\n            if (!columns.length && !rows.length) {\n                measuresRowAxis = false;\n            }\n\n            if (columns.length) {\n                command += serializeMembers(columns, !measuresRowAxis ? measures : [], sort);\n            } else if (measures.length && !measuresRowAxis) {\n                command += measureNames(measures).join(\",\");\n            }\n\n            command += \"} DIMENSION PROPERTIES CHILDREN_CARDINALITY, PARENT_UNIQUE_NAME ON COLUMNS\";\n\n            if (rows.length || (measuresRowAxis && measures.length > 1)) {\n                command += \", NON EMPTY {\";\n\n                if (rows.length) {\n                    command += serializeMembers(rows, measuresRowAxis ? measures : [], sort);\n                } else {\n                    command += measureNames(measures).join(\",\");\n                }\n\n                command += \"} DIMENSION PROPERTIES CHILDREN_CARDINALITY, PARENT_UNIQUE_NAME ON ROWS\";\n            }\n\n            if (options.filter) {\n                command += \" FROM \";\n                command += \"(\";\n                command += serializeFilters(options.filter, options.connection.cube);\n                command += \")\";\n            } else {\n                command += \" FROM [\" + options.connection.cube + \"]\";\n            }\n\n            if (measures.length == 1 && columns.length) {\n                command += \" WHERE (\" + measureNames(measures).join(\",\") + \")\";\n            }\n\n            command += '</Statement></Command><Properties><PropertyList><Catalog>' + options.connection.catalog + '</Catalog><Format>Multidimensional</Format></PropertyList></Properties></Execute></Body></Envelope>';\n            return command.replace(/\\&/g, \"&amp;\");\n        },\n        discover: function(options) {\n            options = options || {};\n\n            var command = '<Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\"><Header/><Body><Discover xmlns=\"urn:schemas-microsoft-com:xml-analysis\">';\n            command += \"<RequestType>\" + (xmlaDiscoverCommands[options.command] || options.command) + \"</RequestType>\";\n\n            command += \"<Restrictions>\" + serializeOptions(\"RestrictionList\", options.restrictions, true) + \"</Restrictions>\";\n\n            if (options.connection && options.connection.catalog) {\n                options.properties = $.extend({}, {\n                    Catalog: options.connection.catalog\n                }, options.properties);\n            }\n\n            command += \"<Properties>\" + serializeOptions(\"PropertyList\", options.properties) + \"</Properties>\";\n\n            command += '</Discover></Body></Envelope>';\n            return command;\n        }\n    };\n\n    var XmlaTransport = kendo.data.RemoteTransport.extend({\n        init: function(options) {\n            var originalOptions = options;\n\n            options = this.options = extend(true, {}, this.options, options);\n\n            kendo.data.RemoteTransport.call(this, options);\n\n            if (isFunction(originalOptions.discover)) {\n                this.discover = originalOptions.discover;\n            } else if (typeof originalOptions.discover === \"string\") {\n                this.options.discover = {\n                    url: originalOptions.discover\n                };\n            } else if (!originalOptions.discover) {\n                this.options.discover = this.options.read;\n            }\n        },\n        setup: function(options, type) {\n            options.data = options.data || {};\n            $.extend(true, options.data, { connection: this.options.connection });\n\n            return kendo.data.RemoteTransport.fn.setup.call(this, options, type);\n        },\n        options: {\n            read: {\n                dataType: \"text\",\n                contentType: \"text/xml\",\n                type: \"POST\"\n            },\n            discover: {\n                dataType: \"text\",\n                contentType: \"text/xml\",\n                type: \"POST\"\n            },\n            parameterMap: function(options, type) {\n                return convertersMap[type](options,type);\n            }\n        },\n\n        discover: function(options) {\n            return $.ajax(this.setup(options, \"discover\"));\n        }\n    });\n\n    var XmlaTransportV2 = Class.extend({\n        init: function(options) {\n            options = this.options = extend(true, {}, this.options, options);\n        },\n        setup: function(options) {\n            return $.extend(true, options || {}, { connection: this.options.connection });\n        },\n        read: function(options) {\n            var that = this,\n                success,\n                error;\n\n            var fetchOptions = that.setup(options.data, READ);\n\n            success = options.success || $.noop;\n            error = options.error || $.noop;\n\n            if (options.parameterMap) {\n                fetchOptions = that.parameterMap(fetchOptions, READ);\n            }\n\n            fetchData({ url: that.options.read }, fetchOptions)\n            .then(createDataState)\n            .then(function(newDataState) {\n                success(newDataState);\n            })\n            .catch(function(err) { error(err); });\n        },\n\n        catalog: function(val) {\n            var options = this.options || {};\n\n            if (val === undefined$1) {\n                return (options.connection || {}).catalog;\n\n            }\n\n            var connection = options.connection || {};\n            connection.catalog = val;\n\n            this.options.connection = connection;\n            $.extend(this.transport.options, { connection: connection });\n        },\n        cube: function(val) {\n            var options = this.options || {};\n\n            if (val === undefined$1) {\n                return (options.connection || {}).cube;\n            }\n\n            var connection = options.connection || {};\n            connection.cube = val;\n\n            this.options.connection = connection;\n            extend(true, this.transport.options, { connection: connection });\n        },\n\n        discover: function(options) {\n            return fetchDiscover({ url: this.options.read }, options);\n        }\n    });\n\n    function asArray(object) {\n        if (object == null) {\n            return [];\n        }\n\n        var type = toString.call(object);\n        if (type !== \"[object Array]\") {\n            return [object];\n        }\n\n        return object;\n    }\n\n    function translateAxis(axis) {\n        var result = { tuples: [] };\n        var tuples = asArray(kendo.getter(\"Tuples.Tuple\", true)(axis));\n        var captionGetter = kendo.getter(\"Caption['#text']\");\n        var unameGetter = kendo.getter(\"UName['#text']\");\n        var levelNameGetter = kendo.getter(\"LName['#text']\");\n        var levelNumGetter = kendo.getter(\"LNum['#text']\");\n        var childrenGetter = kendo.getter(\"CHILDREN_CARDINALITY['#text']\", true);\n        var hierarchyGetter = kendo.getter(\"['@Hierarchy']\");\n        var parentNameGetter = kendo.getter(\"PARENT_UNIQUE_NAME['#text']\", true);\n\n        for (var idx = 0; idx < tuples.length; idx++) {\n            var members = [];\n            var member = asArray(tuples[idx].Member);\n            for (var memberIdx = 0; memberIdx < member.length; memberIdx++) {\n                members.push({\n                    children: [],\n                    caption: captionGetter(member[memberIdx]),\n                    name: unameGetter(member[memberIdx]),\n                    levelName: levelNameGetter(member[memberIdx]),\n                    levelNum: levelNumGetter(member[memberIdx]),\n                    hasChildren: parseInt(childrenGetter(member[memberIdx]), 10) > 0,\n                    parentName: parentNameGetter(member[memberIdx]),\n                    hierarchy: hierarchyGetter(member[memberIdx])\n                });\n            }\n\n            result.tuples.push({ members: members });\n        }\n        return result;\n    }\n\n    var schemaDataReaderMap = {\n        cubes: {\n            name: kendo.getter(\"CUBE_NAME['#text']\", true),\n            caption: kendo.getter(\"CUBE_CAPTION['#text']\", true),\n            description: kendo.getter(\"DESCRIPTION['#text']\", true),\n            type: kendo.getter(\"CUBE_TYPE['#text']\", true)\n        },\n        catalogs: {\n            name: kendo.getter(\"CATALOG_NAME['#text']\", true),\n            description: kendo.getter(\"DESCRIPTION['#text']\", true)\n        },\n        measures: {\n            name: kendo.getter(\"MEASURE_NAME['#text']\", true),\n            caption: kendo.getter(\"MEASURE_CAPTION['#text']\", true),\n            uniqueName: kendo.getter(\"MEASURE_UNIQUE_NAME['#text']\", true),\n            description: kendo.getter(\"DESCRIPTION['#text']\", true),\n            aggregator: kendo.getter(\"MEASURE_AGGREGATOR['#text']\", true),\n            groupName: kendo.getter(\"MEASUREGROUP_NAME['#text']\", true),\n            displayFolder: kendo.getter(\"MEASURE_DISPLAY_FOLDER['#text']\", true),\n            defaultFormat: kendo.getter(\"DEFAULT_FORMAT_STRING['#text']\", true)\n        },\n        kpis: {\n            name: kendo.getter(\"KPI_NAME['#text']\", true),\n            caption: kendo.getter(\"KPI_CAPTION['#text']\", true),\n            value: kendo.getter(\"KPI_VALUE['#text']\", true),\n            goal: kendo.getter(\"KPI_GOAL['#text']\", true),\n            status: kendo.getter(\"KPI_STATUS['#text']\", true),\n            trend: kendo.getter(\"KPI_TREND['#text']\", true),\n            statusGraphic: kendo.getter(\"KPI_STATUS_GRAPHIC['#text']\", true),\n            trendGraphic: kendo.getter(\"KPI_TREND_GRAPHIC['#text']\", true),\n            description: kendo.getter(\"KPI_DESCRIPTION['#text']\", true),\n            groupName: kendo.getter(\"MEASUREGROUP_NAME['#text']\", true)\n        },\n        dimensions: {\n            name: kendo.getter(\"DIMENSION_NAME['#text']\", true),\n            caption: kendo.getter(\"DIMENSION_CAPTION['#text']\", true),\n            description: kendo.getter(\"DESCRIPTION['#text']\", true),\n            uniqueName: kendo.getter(\"DIMENSION_UNIQUE_NAME['#text']\", true),\n            defaultHierarchy: kendo.getter(\"DEFAULT_HIERARCHY['#text']\", true),\n            type: kendo.getter(\"DIMENSION_TYPE['#text']\", true)\n//unknown = 0; time = 1; measure = 2; other = 3; quantitative = 5; accounts = 6; customers = 7; products = 8; scenario = 9; utility = 10; currency = 11; rates = 12; channel = 13; promotion = 14; organization = 15; billOfMaterials = 16; geography = 17;\n\n        },\n        hierarchies: {\n            name: kendo.getter(\"HIERARCHY_NAME['#text']\", true),\n            caption: kendo.getter(\"HIERARCHY_CAPTION['#text']\", true),\n            description: kendo.getter(\"DESCRIPTION['#text']\", true),\n            uniqueName: kendo.getter(\"HIERARCHY_UNIQUE_NAME['#text']\", true),\n            dimensionUniqueName: kendo.getter(\"DIMENSION_UNIQUE_NAME['#text']\", true),\n            displayFolder: kendo.getter(\"HIERARCHY_DISPLAY_FOLDER['#text']\", true),\n            origin: kendo.getter(\"HIERARCHY_ORIGIN['#text']\", true),\n            defaultMember: kendo.getter(\"DEFAULT_MEMBER['#text']\", true)\n        },\n        levels: {\n            name: kendo.getter(\"LEVEL_NAME['#text']\", true),\n            caption: kendo.getter(\"LEVEL_CAPTION['#text']\", true),\n            description: kendo.getter(\"DESCRIPTION['#text']\", true),\n            uniqueName: kendo.getter(\"LEVEL_UNIQUE_NAME['#text']\", true),\n            dimensionUniqueName: kendo.getter(\"DIMENSION_UNIQUE_NAME['#text']\", true),\n            displayFolder: kendo.getter(\"LEVEL_DISPLAY_FOLDER['#text']\", true),\n            orderingProperty: kendo.getter(\"LEVEL_ORDERING_PROPERTY['#text']\", true),\n            origin: kendo.getter(\"LEVEL_ORIGIN['#text']\", true),\n            hierarchyUniqueName: kendo.getter(\"HIERARCHY_UNIQUE_NAME['#text']\", true)\n        },\n        members: {\n            name: kendo.getter(\"MEMBER_NAME['#text']\", true),\n            caption: kendo.getter(\"MEMBER_CAPTION['#text']\", true),\n            uniqueName: kendo.getter(\"MEMBER_UNIQUE_NAME['#text']\", true),\n            dimensionUniqueName: kendo.getter(\"DIMENSION_UNIQUE_NAME['#text']\", true),\n            hierarchyUniqueName: kendo.getter(\"HIERARCHY_UNIQUE_NAME['#text']\", true),\n            levelUniqueName: kendo.getter(\"LEVEL_UNIQUE_NAME['#text']\", true),\n            childrenCardinality: kendo.getter(\"CHILDREN_CARDINALITY['#text']\", true)\n        }\n    };\n\n    var xmlaReaderMethods = [\"axes\", \"catalogs\", \"cubes\", \"dimensions\", \"hierarchies\", \"levels\", \"measures\"];\n\n    var XmlaDataReader = kendo.data.XmlDataReader.extend({\n        init: function(options) {\n            kendo.data.XmlDataReader.call(this, options);\n\n            this._extend(options);\n        },\n        _extend: function(options) {\n            var idx = 0;\n            var length = xmlaReaderMethods.length;\n            var methodName;\n            var option;\n\n            for (; idx < length; idx++) {\n                methodName = xmlaReaderMethods[idx];\n                option = options[methodName];\n\n                if (option && option !== identity) {\n                    this[methodName] = option;\n                }\n            }\n        },\n        parse: function(xml) {\n            var result = kendo.data.XmlDataReader.fn.parse(xml.replace(/<(\\/?)(\\w|-)+:/g, \"<$1\"));\n            return kendo.getter(\"['Envelope']['Body']\", true)(result);\n        },\n        errors: function(root) {\n            var fault = kendo.getter(\"['Fault']\", true)(root);\n            if (fault) {\n                return [{\n                    faultstring: kendo.getter(\"faultstring['#text']\", true)(fault),\n                    faultcode: kendo.getter(\"faultcode['#text']\", true)(fault)\n                }];\n            }\n            return null;\n        },\n        axes: function(root) {\n            root = kendo.getter(\"ExecuteResponse[\\\"return\\\"].root\", true)(root);\n\n            var axes = asArray(kendo.getter(\"Axes.Axis\", true)(root));\n            var axis;\n\n            var result = {\n                columns: {},\n                rows: {}\n            };\n\n            for (var idx = 0; idx < axes.length; idx++) {\n                axis = axes[idx];\n\n                if (axis[\"@name\"].toLowerCase() !== \"sliceraxis\") {\n                    if (!result.columns.tuples) {\n                        result.columns = translateAxis(axis);\n                    } else {\n                        result.rows = translateAxis(axis);\n                    }\n                }\n            }\n\n            return result;\n        },\n        data: function(root) {\n            root = kendo.getter(\"ExecuteResponse[\\\"return\\\"].root\", true)(root);\n\n            var cells = asArray(kendo.getter(\"CellData.Cell\", true)(root));\n\n            var result = [];\n            var ordinalGetter = kendo.getter(\"['@CellOrdinal']\");\n            var valueGetter = kendo.getter(\"Value['#text']\");\n            var fmtValueGetter = kendo.getter(\"FmtValue['#text']\");\n\n            for (var idx = 0; idx < cells.length; idx++) {\n                result.push({\n                    value: valueGetter(cells[idx]),\n                    fmtValue: fmtValueGetter(cells[idx]),\n                    ordinal: parseInt(ordinalGetter(cells[idx]), 10)\n                });\n            }\n\n            return result;\n        },\n        _mapSchema: function(root, getters) {\n            root = kendo.getter(\"DiscoverResponse[\\\"return\\\"].root\", true)(root);\n            var rows = asArray(kendo.getter(\"row\", true)(root));\n\n            var result = [];\n\n            for (var idx = 0; idx < rows.length; idx++) {\n                var obj = {};\n                for (var key in getters) {\n                    obj[key] = getters[key](rows[idx]);\n                }\n                result.push(obj);\n            }\n\n            return result;\n        },\n        measures: function(root) {\n            return this._mapSchema(root, schemaDataReaderMap.measures);\n        },\n        kpis: function(root) {\n            return this._mapSchema(root, schemaDataReaderMap.kpis);\n        },\n        hierarchies: function(root) {\n            return this._mapSchema(root, schemaDataReaderMap.hierarchies);\n        },\n        levels: function(root) {\n            return this._mapSchema(root, schemaDataReaderMap.levels);\n        },\n        dimensions: function(root) {\n            return this._mapSchema(root, schemaDataReaderMap.dimensions);\n        },\n        cubes: function(root) {\n            return this._mapSchema(root, schemaDataReaderMap.cubes);\n        },\n        catalogs: function(root) {\n            return this._mapSchema(root, schemaDataReaderMap.catalogs);\n        },\n        members: function(root) {\n            return this._mapSchema(root, schemaDataReaderMap.members);\n        }\n    });\n\n    extend(true, kendo.data, {\n       PivotDataSource: PivotDataSource,\n       PivotDataSourceV2: PivotDataSourceV2,\n       XmlaTransport: XmlaTransport,\n       XmlaDataReader: XmlaDataReader,\n       PivotCubeBuilder: PivotCubeBuilder,\n       transports: {\n           xmla: XmlaTransport\n       },\n       readers: {\n           xmla: XmlaDataReader\n       }\n    });\n\n    var sortExpr = function(expressions, name) {\n        if (!expressions) {\n            return null;\n        }\n\n        for (var idx = 0, length = expressions.length; idx < length; idx++) {\n            if (expressions[idx].field === name) {\n                return expressions[idx];\n            }\n        }\n\n        return null;\n    };\n\n    var removeExpr = function(expressions, name) {\n        var result = [];\n\n        for (var idx = 0, length = expressions.length; idx < length; idx++) {\n            if (expressions[idx].field !== name) {\n                result.push(expressions[idx]);\n            }\n        }\n\n        return result;\n    };\n\n    kendo.ui.PivotSettingTarget = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            Widget.fn.init.call(that, element, options);\n\n            that.element.addClass(\"k-pivot-setting\");\n\n            that.dataSource = kendo.data.PivotDataSource.create(options.dataSource);\n\n            that._refreshHandler = that.refresh.bind(that);\n            that.dataSource.first(CHANGE, that._refreshHandler);\n\n            if (!options.template) {\n                var actions = '';\n\n                if (that.options.enabled) {\n                    actions = `<span class=\"k-setting-delete k-chip-action\">${kendo.ui.icon(\"x\")}</span>`;\n                }\n\n                that.options.template = (data) => ''\n                    + `<span class=\"k-chip k-chip-md k-rounded-full k-chip-solid k-chip-solid-base\" data-${kendo.ns}name=\"${data.name || data}\">`\n                        + '<span class=\"k-chip-content\">'\n                            + `<span class=\"k-chip-text\">${data.name || data}</span>`\n                        + '</span>'\n                        + '<span class=\"k-chip-actions\">' + actions + '</span>'\n                    + '</span>';\n            }\n\n            that.template = kendo.template(that.options.template);\n            that.emptyTemplate = kendo.template(that.options.emptyTemplate);\n\n            that._sortable();\n\n            that.element.on(\"click\" + NS, '.k-chip, .k-button' , function(e) {\n                var target = $(e.target).closest(\":not(path,svg)\");\n                var action = target.closest('.k-chip-action');\n                var name = target.closest(\"[\" + kendo.attr(\"name\") + \"]\")\n                                 .attr(kendo.attr(\"name\"));\n\n                if (!name) {\n                    return;\n                }\n\n                if (action.hasClass(\"k-setting-delete\")) {\n                    that.remove(name);\n                    return;\n                }\n\n                if (target.closest('.k-chip-actions').length > 0) {\n                    return;\n                }\n\n                if (that.options.sortable) {\n                    var sortDirection = $(e.currentTarget).closest(\":not(path,svg)\").find('.k-i-sort-asc-small,.k-svg-i-sort-asc-small').length ? 'desc' : 'asc';\n\n                    that.sort({\n                        field: name,\n                        dir: sortDirection\n                    });\n                }\n            });\n\n            if (options.filterable || options.sortable) {\n                that.fieldMenu = new ui.PivotFieldMenu(that.element, {\n                    messages: that.options.messages.fieldMenu,\n                    filter: \".k-setting-fieldmenu\",\n                    filterable: options.filterable,\n                    sortable: options.sortable,\n                    dataSource: that.dataSource\n                });\n            }\n\n            that.refresh();\n        },\n\n        options: {\n            name: \"PivotSettingTarget\",\n            template: null,\n            filterable: false,\n            sortable: false,\n            emptyTemplate: (data) => `<div class='k-empty'>${data}</div>`,\n            setting: \"columns\",\n            enabled: true,\n            messages: {\n                empty: \"Drop Fields Here\"\n            }\n        },\n        setDataSource: function(dataSource) {\n            this.dataSource.unbind(CHANGE, this._refreshHandler);\n            this.dataSource = this.options.dataSource = dataSource;\n\n            if (this.fieldMenu) {\n                this.fieldMenu.setDataSource(dataSource);\n            }\n            dataSource.first(CHANGE, this._refreshHandler);\n\n            this.refresh();\n        },\n\n        _sortable: function() {\n            var that = this;\n\n            if (that.options.enabled) {\n                this.sortable = this.element.kendoSortable({\n                    connectWith: this.options.connectWith,\n                    hint: that.options.hint,\n                    filter: \">*:not(.k-empty)\",\n                    cursor: \"move\",\n                    start: function(e) {\n                        e.item.trigger(\"focus\").trigger(\"blur\");\n                    },\n                    change: function(e) {\n                        var name = e.item.attr(kendo.attr(\"name\"));\n\n                        if (e.action == \"receive\") {\n                            that.add(name);\n                        } else if (e.action == \"remove\") {\n                            that.remove(name);\n                        } else if (e.action == \"sort\") {\n                            that.move(name, e.newIndex);\n                        }\n                    }\n                }).data(\"kendoSortable\");\n            }\n        },\n\n        _isKPI: function(data) {\n            return data.type === \"kpi\" || data.measure;\n        },\n\n        validate: function(data) {\n            var isMeasure = (data.type == 2 || \"aggregator\" in data || this._isKPI(data));\n\n            if (isMeasure) {\n                return this.options.setting === \"measures\";\n            }\n\n            if (this.options.setting === \"measures\") {\n                return isMeasure;\n            }\n\n            var items = this.dataSource[this.options.setting]();\n            var name = data.defaultHierarchy || data.uniqueName;\n            if (indexOf(name, items) > -1) {\n                return false;\n            }\n\n            items = this.dataSource[this.options.setting === \"columns\" ? \"rows\" : \"columns\"]();\n            if (indexOf(name, items) > -1) {\n                return false;\n            }\n\n            return true;\n        },\n\n        add: function(name) {\n            var items = this.dataSource[this.options.setting]();\n            var i, l;\n\n            name = Array.isArray(name) ? name.slice(0) : [name];\n\n            for (i = 0, l = name.length; i < l; i++) {\n                if (indexOf(name[i], items) !== -1) {\n                    name.splice(i, 1);\n                    i -= 1;\n                    l -= 1;\n                }\n            }\n\n            if (name.length) {\n                items = items.concat(name);\n                this.dataSource[this.options.setting](items);\n            }\n        },\n\n        move: function(name, index) {\n            var items = this.dataSource[this.options.setting]();\n            var idx = indexOf(name, items);\n\n            if (idx > -1) {\n                name = items.splice(idx, 1)[0];\n\n                items.splice(index, 0, name);\n\n                this.dataSource[this.options.setting](items);\n            }\n        },\n\n        remove: function(name) {\n            var items = this.dataSource[this.options.setting]();\n            var idx = indexOf(name, items);\n            var sortExpressions = this.dataSource.sort();\n            var filter = this.dataSource.filter();\n\n            if (idx > -1) {\n                if (filter) {\n                    filter.filters = removeExpr(filter.filters, name);\n                    this.dataSource._filter.filters = filter.filters;\n                    if (!filter.filters.length) {\n                        this.dataSource._filter = null;\n                    }\n                }\n                if (sortExpressions) {\n                    sortExpressions = removeExpr(sortExpressions, name);\n                    this.dataSource._sort = sortExpressions;\n                }\n                items.splice(idx, 1);\n                this.dataSource[this.options.setting](items);\n            }\n        },\n\n        sort: function(expr) {\n            var sortable = this.options.sortable;\n            var allowUnsort = sortable === true || sortable.allowUnsort;\n            var skipExpr = allowUnsort && expr.dir === \"asc\";\n\n            var expressions = (this.dataSource.sort() || []);\n            var result = removeExpr(expressions, expr.field);\n\n            if (skipExpr && expressions.length !== result.length) {\n                expr = null;\n            }\n\n            if (expr) {\n                result.push(expr);\n            }\n\n            this.dataSource.sort(result);\n        },\n\n        refresh: function() {\n            var html = \"\";\n            var items = this.dataSource[this.options.setting]();\n            var length = items.length;\n            var idx = 0;\n            var item;\n\n            if (length) {\n                for (; idx < length; idx++) {\n                    item = items[idx];\n                    item = item.name === undefined$1 ? { name: item } : item;\n\n                    html += this.template(extend({ sortIcon: this._sortIcon(item.name) }, item));\n                }\n            } else {\n                html = this.emptyTemplate(this.options.messages.empty);\n            }\n\n            this.element.html(html);\n        },\n\n        destroy: function() {\n            Widget.fn.destroy.call(this);\n\n            this.dataSource.unbind(CHANGE, this._refreshHandler);\n            this.element.off(NS);\n\n            if (this.sortable) {\n                this.sortable.destroy();\n            }\n\n            if (this.fieldMenu) {\n                this.fieldMenu.destroy();\n            }\n\n            this.element = null;\n            this._refreshHandler = null;\n        },\n\n        _sortIcon: function(name) {\n            var expressions = this.dataSource.sort();\n            var expr = sortExpr(expressions, getName(name));\n            var icon = \"\";\n\n            if (expr) {\n                icon = \"sort-\" + expr.dir;\n            }\n\n            return icon;\n        }\n    });\n\n    kendo.ui.PivotSettingTargetV2 = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            Widget.fn.init.call(that, element, options);\n\n            that.dataSource = kendo.data.PivotDataSourceV2.create(options.dataSource);\n\n            that._refreshHandler = that.refresh.bind(that);\n            that.dataSource.first(CHANGE, that._refreshHandler);\n\n            that.template = kendo.template(that.options.template);\n\n            that._sortable();\n\n            that.element.on(\"click\" + NS, \".k-i-x-circle,.k-svg-i-x-circle\", function(e) {\n                var target = $(e.target).closest(\":not(path,svg)\");\n                var parent = target.closest(\".k-chip\");\n                var name = parent.find(\".k-chip-label\").text();\n\n                if (!name) {\n                    return;\n                }\n\n                that.remove(name);\n                parent.remove();\n                that.trigger(\"remove\", { name: name });\n            });\n\n            if (that.options.navigatable) {\n                that.element.on(\"keydown\" + NS, \".k-chip\", function(ev) {\n                    var chip = $(ev.target),\n                        key = ev.keyCode,\n                        name = chip.find(\".k-chip-label\").text();\n\n                    if (key === keys.DELETE || key === keys.BACKSPACE) {\n                        const targetIndex = that.options.configuratorNavigation ? that.options.configuratorNavigation.elements.indexOf(chip[0]) : -1;\n                        chip.find(\".k-i-x-circle,.k-svg-i-x-circle\").trigger(\"click\");\n                        if (!that.options.configuratorNavigation) {\n                            return;\n                        }\n\n                        that.options.configuratorNavigation.focusElement(\n                            that.options.configuratorNavigation.elements[targetIndex - 1],\n                        );\n                    } else if (key === keys.DOWN && ev.altKey) {\n                        chip.find(\".k-i-more-vertical,.k-svg-i-more-vertical\").trigger(\"click\");\n                    } else if (ev.ctrlKey && ev.shiftKey) {\n                        if (key == keys.LEFT) {\n                            that.move(name, Math.max(0, chip.index() - 1));\n\n                            if (!that.options.configuratorNavigation) {\n                                return;\n                            }\n\n                            that.options.configuratorNavigation.focusElement(\n                                that.element.find(\".k-chip .k-chip-label\")\n                                    .filter((ind, el) => $(el).text() == name)\n                                    .closest(\".k-chip\")[0]\n                            );\n                        } else if (key == keys.RIGHT) {\n                            that.move(name, Math.min(chip.index() + 1, chip.parent().find(\"> .k-chip\").length - 1));\n\n                            if (!that.options.configuratorNavigation) {\n                                return;\n                            }\n\n                            that.options.configuratorNavigation.focusElement(\n                                that.element.find(\".k-chip .k-chip-label\")\n                                    .filter((ind, el) => $(el).text() == name)\n                                    .closest(\".k-chip\")[0]\n                            );\n                        } else if ((key == keys.UP && that.options.setting == \"rows\") ||\n                            (key == keys.DOWN && that.options.setting == \"columns\")) {\n\n                            let otherTarget = that.sortable.options.connectWith.data(\"kendoPivotSettingTargetV2\");\n                            if (!otherTarget) {\n                                return;\n                            }\n\n                            that.remove(name);\n                            otherTarget.add(name);\n                            if (!that.options.configuratorNavigation) {\n                                return;\n                            }\n\n                            that.options.configuratorNavigation.focusElement(\n                                otherTarget.element.find(\".k-chip\").last()[0]\n                            );\n                        }\n                    }\n                });\n            }\n\n            if (options.filterable || options.sortable) {\n                that.fieldMenu = new ui.PivotFieldMenuV2(that.element, {\n                    messages: that.options.messages.fieldMenu,\n                    filterable: options.filterable,\n                    filter: \".k-i-more-vertical,.k-svg-i-more-vertical\",\n                    sortable: options.sortable,\n                    dataSource: that.dataSource\n                });\n            }\n\n            that.refresh();\n        },\n\n        events: [\"remove\"],\n\n        options: {\n            name: \"PivotSettingTargetV2\",\n            template: null,\n            filterable: false,\n            sortable: false,\n            setting: \"columns\",\n            enabled: true,\n            messages: {\n                empty: \"Drop Fields Here\"\n            }\n        },\n        setDataSource: function(dataSource) {\n            this.dataSource.unbind(CHANGE, this._refreshHandler);\n            this.dataSource = this.options.dataSource = dataSource;\n\n            if (this.fieldMenu) {\n                this.fieldMenu.setDataSource(dataSource);\n            }\n            dataSource.first(CHANGE, this._refreshHandler);\n\n            this.refresh();\n        },\n\n        _applyState: function() {\n            if (this._sortState !== undefined$1) {\n                this.dataSource._sort = this._sortState;\n                this._sortState = undefined$1;\n            }\n\n            if (this._stateFilter !== undefined$1) {\n                this.dataSource._filter = this._stateFilter;\n                this._stateFilter = undefined$1;\n            }\n\n            this.dataSource[\"_\" + this.options.setting] = this.options.setting === \"measures\" ? normalizeMeasures(this._savedState) : normalizeMembers(this._savedState);\n        },\n\n        _cancelChanges: function() {\n            this._sortState = undefined$1;\n            this._stateFilter = undefined$1;\n            this._savedState = kendo.deepExtend([], this._initialState);\n            this._redraw();\n        },\n\n        _state: function(newState, modifyInit) {\n            var that = this;\n\n            if (!newState) {\n                return that._savedState || [];\n            } else {\n                if (!that._savedState || modifyInit) {\n                    that._initialState = kendo.deepExtend([], newState);\n                }\n                that._savedState = kendo.deepExtend([], newState);\n            }\n        },\n\n        _sortable: function() {\n            var that = this;\n\n            this.sortable = this.element.kendoSortable({\n                connectWith: this.options.connectWith,\n                hint: that.options.hint,\n                filter: \">*:not(.k-empty)\",\n                cursor: \"move\",\n                start: function(e) {\n                    e.item.focus().blur();\n                },\n                change: function(e) {\n                    var name = e.item.find(\".k-chip-label\").text();\n\n                    if (e.action == \"receive\") {\n                        that.add(name);\n                    } else if (e.action == \"remove\") {\n                        that.remove(name);\n                    } else if (e.action == \"sort\") {\n                        that.move(name, e.newIndex);\n                    }\n                }\n            }).data(\"kendoSortable\");\n        },\n\n        add: function(name) {\n            var items = this._state();\n            var i, l;\n\n            name = Array.isArray(name) ? name.slice(0) : [name];\n\n            for (i = 0, l = name.length; i < l; i++) {\n                if (indexOf(name[i], items) !== -1) {\n                    name.splice(i, 1);\n                    i -= 1;\n                    l -= 1;\n                }\n            }\n\n            if (name.length) {\n                items = items.concat(name);\n                this._state(items);\n                this._redraw();\n            }\n        },\n\n        move: function(name, index) {\n            var items = this._state();\n            var idx = indexOf(name, items);\n\n            if (idx > -1) {\n                name = items.splice(idx, 1)[0];\n\n                items.splice(index, 0, name);\n\n                this._state(items);\n                this._redraw();\n            }\n        },\n\n        remove: function(name) {\n            var items = this._state();\n            var idx = indexOf(name, items);\n            var sortExpressions = this.dataSource.sort();\n            var filter = this.dataSource.filter();\n\n            if (idx > -1) {\n                if (filter) {\n                    filter.filters = removeExpr(filter.filters, name);\n                    this._savedFilter = this.dataSource._filter;\n                    this._savedFilter.filters = filter.filters;\n                    if (!filter.filters.length) {\n                        this._savedFilter = null;\n                    }\n                }\n                if (sortExpressions) {\n                    sortExpressions = removeExpr(sortExpressions, name);\n                    this._sortState = sortExpressions;\n                }\n                items.splice(idx, 1);\n                this._state(items);\n                this._redraw();\n            }\n        },\n\n        _emptyState: function(enable) {\n            var that = this;\n            if (enable) {\n                that.element.html(this.options.messages.empty)\n                    .addClass(\"k-settings-description\")\n                    .removeClass(\"k-chip-list\");\n            } else {\n                that.element\n                    .removeClass(\"k-settings-description\")\n                    .addClass(\"k-chip-list\");\n            }\n        },\n\n        _redraw: function() {\n            var items = this._state() || [];\n            this._emptyState(!items.length);\n            if (items.length) {\n                this.element.html(this._targetsHTML(items));\n            }\n        },\n\n        _targetsHTML: function(items) {\n            var item;\n            var html = \"\";\n            var idx = 0;\n            var options = this.options;\n            var enabled = false;\n\n            if (this.options.setting != \"measures\") {\n                enabled = options.filterable || options.sortable;\n            }\n\n            if (items.length) {\n                for (; idx < items.length; idx++) {\n                    item = items[idx];\n                    item = item.name === undefined$1 ? { name: item } : item;\n\n                    html += this.template({ name: item.name, menuenabled: enabled });\n                }\n            }\n            return html;\n        },\n\n        refresh: function() {\n            if (this.dataSource._preventRefresh) {\n                return;\n            }\n            var items = this.dataSource[this.options.setting]();\n            this._state(items, true);\n            this._emptyState(!this._state().length);\n            if (items.length) {\n                this.element.html(this._targetsHTML(items));\n            }\n        },\n\n        destroy: function() {\n            Widget.fn.destroy.call(this);\n\n            this.dataSource.unbind(CHANGE, this._refreshHandler);\n            this.element.off(NS);\n\n            if (this.sortable) {\n                this.sortable.destroy();\n            }\n\n            if (this.fieldMenu) {\n                this.fieldMenu.destroy();\n            }\n\n            this.element = null;\n            this._refreshHandler = null;\n        }\n    });\n\n    var PivotConfiguratorButton = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n            Widget.fn.init.call(that, element, options);\n            that.element = $(element);\n\n            that._element();\n            that._attachEvents();\n        },\n\n        options: {\n            name: \"PivotConfiguratorButton\",\n            text: \"Change settings\",\n            configurator: \"\"\n        },\n\n        destroy: function() {\n            this.element.off(NS);\n        },\n\n        setOptions: function(options) {\n            var that = this;\n            kendo.deepExtend(that.options, options);\n            this.init(this.element, this.options);\n        },\n\n        toggle: function() {\n            var attr = kendo.attr(\"role\");\n            var pivotEl = this.element\n                .closest(\"[\" + attr + \"=pivotcontainer]\")\n                .find(\"[\" + attr + \"=pivotgridv2]\");\n            var pivot;\n\n            $(\"#\" + this.options.configurator).toggleClass(\"k-hidden\");\n\n            if (pivotEl.length) {\n                pivot = pivotEl.getKendoPivotGridV2();\n                pivot._setContentWidth();\n                pivot._updateDimensions();\n            }\n        },\n\n        _attachEvents: function() {\n            this.element.on(\"click\" + NS, this.toggle.bind(this));\n        },\n\n        _element: function() {\n            var options = this.options;\n            this.element.addClass(\"k-pivotgrid-configurator-button\");\n            this.element.html(kendo.format(\"<span>{0}<span class='k-icon k-i-gear'></span></span>\",options.text));\n        }\n    });\n\n    var PivotContainer = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n            Widget.fn.init.call(that, element, options);\n            that.element = $(element);\n            that.options = options;\n\n\n            that._addClasses();\n        },\n\n        options: {\n            name: \"PivotContainer\",\n            configuratorPosition: \"left\"\n        },\n\n        setOptions: function(options) {\n            var that = this;\n            kendo.deepExtend(that.options, options);\n            this.init(this.element, this.options);\n        },\n\n        _addClasses: function() {\n            var options = this.options;\n            var className;\n            this.element.removeClass(\"k-flex-row k-flex-row-reverse k-flex-column k-flex-column-reverse\");\n\n            switch (options.configuratorPosition) {\n                case \"right\":\n                    className = \"k-flex-row\";\n                    break;\n                case \"left\":\n                    className = \"k-flex-row-reverse\";\n                    break;\n                case \"bottom\":\n                    className = \"k-flex-column\";\n                    break;\n                case \"top\":\n                    className = \"k-flex-column-reverse\";\n                    break;\n                default:\n                    className = \"k-flex-row\";\n            }\n\n            this.element\n                .addClass(\"k-d-flex k-pos-relative\")\n                .addClass(className);\n        }\n    });\n\n    var PivotGridV2 = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            Widget.fn.init.call(that, element, options);\n\n            that._dataSource();\n\n            that._bindConfigurator();\n\n            that._ariaId = that.element.attr(\"id\") || kendo.guid();\n            that._wrapper();\n\n            that._columnHeadersWrapper = $('<div class=\"k-pivotgrid-column-headers\"></div>');\n            that._rowHeadersWrapper = $('<div class=\"k-pivotgrid-row-headers\"></div>');\n            that._contentWrapper = $('<div class=\"k-pivotgrid-values\"></div>');\n\n            that.wrapper.append(that._columnHeadersWrapper);\n            that.wrapper.append(that._rowHeadersWrapper);\n            that.wrapper.append(that._contentWrapper);\n\n            that._columnBuilder = new ColumnRowBuilder( { template: this.options.columnHeaderTemplate, axes: \"columns\", ariaId: that._ariaId });\n            that._rowBuilder = new ColumnRowBuilder( { template: this.options.rowHeaderTemplate, axes: \"rows\", ariaId: that._ariaId });\n            that._contentBuilder = new ContentBuilderV2( { template: this.options.dataCellTemplate || DATACELL_TEMPLATE, ariaId: that._ariaId });\n\n            that._scrollable();\n            that._rowHeadersWrapper\n                .add(that._columnHeadersWrapper)\n                .on(\"click\", \"span.k-icon,span.k-svg-icon\", function() {\n                    var button = $(this);\n                    var path = button.parent().attr(kendo.attr(\"key\"));\n                    var expanded = button.is(\".k-i-chevron-up,.k-svg-i-chevron-up\");\n                    var isRow = button.closest(\".k-pivotgrid-row-headers\").length !== 0;\n                    var paths = path.split(\",\");\n                    var eventName = expanded ? COLLAPSEMEMBER : EXPANDMEMBER;\n\n                    if (that.trigger(eventName, { path: paths, axis: isRow ? \"rows\" : \"columns\" })) {\n                        return;\n                    }\n\n                    var reducerPayLoad = {\n                        type: \"HEADERS_ACTION_TOGGLE\",\n                        payload: paths,\n                        tree: isRow ? that._rowBuilder.getTree() : that._columnBuilder.getTree()\n                    };\n                    var currentAxes = isRow ? that.dataSource._rows : that.dataSource._columns;\n                    var newHeaders = headersReducer(currentAxes, reducerPayLoad);\n\n                    that.dataSource._preventRefresh = true;\n\n                    if (isRow) {\n                        that.dataSource.rows(newHeaders);\n                    } else {\n                        that.dataSource.columns(newHeaders);\n                    }\n                 });\n\n            if (that.options.autoBind) {\n                that.dataSource.fetch();\n            }\n\n            that._aria();\n\n            if (that.options.navigatable) {\n                that._initPivotGridNavigation();\n            }\n\n            kendo.notify(that);\n        },\n\n        events: [\n            DATABINDING,\n            DATABOUND,\n            EXPANDMEMBER,\n            COLLAPSEMEMBER\n        ],\n\n        options: {\n            name: \"PivotGridV2\",\n            autoBind: true,\n            height: null,\n            columnWidth: null,\n            configurator: \"\",\n            columnHeaderTemplate: null,\n            rowHeaderTemplate: null,\n            dataCellTemplate: null,\n            messages: {\n                emptyCellLabel: \"PivotGrid Empty Cell\"\n            }\n        },\n\n        destroy: function() {\n            var that = this;\n            Widget.fn.destroy.call(that);\n\n            if (that._windowResizeHandler) {\n                $(window).off(RESIZE + NS, that._windowResizeHandler);\n                that._windowResizeHandler = null;\n            }\n        },\n\n        _aria: function() {\n            var that = this;\n            that.element.attr(\"role\", \"grid\");\n        },\n\n        _initPivotGridNavigation: function() {\n            var that = this;\n\n            that.navigation = new PivotGridNavigation({ tabIndex: 0 });\n            that.navigation.start(that.element[0]);\n\n            const firstCell = that.navigation.first;\n\n            if (firstCell) {\n                firstCell.setAttribute('tabindex', '0');\n            }\n        },\n\n        _matchAriaAttributes: function(wrapper) {\n            var that = this;\n            const rowHeaderRows = wrapper.querySelectorAll(\n                \".k-pivotgrid-row-headers .k-pivotgrid-row\"\n            );\n            const rowHeaderCols = !rowHeaderRows[0] ? [] : Array.from(rowHeaderRows[0].children).reduce(\n                (acc, curr) => (acc += curr.getAttribute(\"colspan\") !== null ? +curr.getAttribute(\"colspan\") : 1),\n                0\n            );\n            const colHeaderRows = wrapper.querySelectorAll(\n                \".k-pivotgrid-column-headers tr\"\n            );\n            const colHeaderCells = wrapper.querySelectorAll(\n                \".k-pivotgrid-column-headers th\"\n            );\n            const valueTableCells = wrapper.querySelectorAll(\".k-pivotgrid-values td\");\n            const emptyCell = wrapper.querySelector(\".k-pivotgrid-empty-cell\");\n\n            emptyCell.setAttribute(\"aria-rowspan\", colHeaderRows.length.toString());\n            emptyCell.setAttribute(\"aria-colspan\", rowHeaderCols.toString());\n\n            const firstColHeadersRow = colHeaderRows[0];\n            const firstColHeaderRowCellsIds = !firstColHeadersRow ? [] : Array.from(firstColHeadersRow.children)\n                .map(el => el.getAttribute(\"id\"))\n                .join(\" \");\n            firstColHeadersRow.setAttribute(\n                \"aria-owns\",\n                `${emptyCell.getAttribute(\"id\")} ${firstColHeaderRowCellsIds}`\n            );\n\n            rowHeaderRows.forEach((row, index) => {\n                const valueCellsIds = that.filterAndMap(\n                    Array.from(valueTableCells),\n                    c => {\n                        const idParts = c.getAttribute(\"id\").split(\"-\");\n                        return idParts[idParts.length - 2] === (index + 1).toString();\n                    },\n                    c => c.getAttribute(\"id\")\n                );\n\n                row.setAttribute(\"aria-owns\", valueCellsIds.join(\" \"));\n            });\n\n            valueTableCells.forEach(cell => {\n                const idParts = cell.getAttribute(\"id\").split(\"-\");\n                const cellColIndex = +idParts[idParts.length - 1];\n                const colHeaderCellsIds = that.filterAndMap(\n                    Array.from(colHeaderCells),\n                    c => {\n                        const idParts = c.getAttribute(\"id\").split(\"-\");\n                        const headerCellColIndex = +idParts[idParts.length - 1];\n                        const headerCellColspan = +c.getAttribute(\"colspan\");\n                        const colIndexIsEqual = cellColIndex === headerCellColIndex;\n                        const cellColIndexIsWithinHeaderCellRange =\n                            headerCellColspan > 1 &&\n                            headerCellColIndex < cellColIndex &&\n                            headerCellColIndex + headerCellColspan - 1 >= cellColIndex;\n\n                        return colIndexIsEqual || cellColIndexIsWithinHeaderCellRange;\n                    },\n                    c => c.getAttribute(\"id\")\n                );\n\n                cell.setAttribute(\"aria-describedby\", colHeaderCellsIds.join(\" \"));\n            });\n        },\n\n        filterAndMap: function(arr, predicate, mapper) {\n            return arr.reduce(\n                (acc, curr) => (predicate(curr) ? [...acc, mapper(curr)] : acc),\n                []\n            );\n        },\n\n        _dataSource: function() {\n            var that = this;\n            var dataSource = that.options.dataSource;\n\n            dataSource = Array.isArray(dataSource) ? { data: dataSource } : dataSource;\n\n            if (that.dataSource && this._refreshHandler) {\n                that.dataSource.unbind(CHANGE, that._refreshHandler)\n                               .unbind(PROGRESS, that._progressHandler)\n                               .unbind(ERROR, that._errorHandler);\n            } else {\n                that._refreshHandler = that.refresh.bind(that);\n                that._progressHandler = that._requestStart.bind(that);\n                that._errorHandler = that._error.bind(that);\n            }\n\n            that.dataSource = kendo.data.PivotDataSourceV2.create(dataSource)\n                                   .bind(CHANGE, that._refreshHandler)\n                                   .bind(PROGRESS, that._progressHandler)\n                                   .bind(ERROR, that._errorHandler);\n        },\n\n        _resize: function() {\n            var that = this;\n            that.wrapper[0].style.setProperty('--kendo-scrollbar-width', kendo.format(\"{0}px\", getScollWidth()));\n        },\n\n        _scrollable: function() {\n            var that = this;\n            var columnsHeader = that._columnHeadersWrapper;\n            var rowsHeader = that._rowHeadersWrapper;\n\n            that._resize();\n            that._windowResizeHandler = that._resize.bind(that);\n\n            that._contentWrapper.scroll(function() {\n                kendo.scrollLeft(columnsHeader, this.scrollLeft);\n                rowsHeader.scrollTop(this.scrollTop);\n            });\n\n            rowsHeader.bind(\"DOMMouseScroll\" + NS + \" mousewheel\" + NS, that._wheelScroll.bind(that));\n            $(window).on(RESIZE + NS, that._windowResizeHandler);\n        },\n\n        _wheelScroll: function(e) {\n            if (e.ctrlKey) {\n                return;\n            }\n\n            var delta = kendo.wheelDeltaY(e);\n            var scrollTop = this._contentWrapper.scrollTop();\n\n            if (delta) {\n                e.preventDefault();\n                $(e.currentTarget).one(\"wheel\" + NS, false);\n\n                this._rowHeadersWrapper.scrollTop(scrollTop + (-delta));\n                this._contentWrapper.scrollTop(scrollTop + (-delta));\n            }\n        },\n\n        _wrapper: function() {\n            var height = this.options.height;\n\n            this.wrapper = this.element.addClass(\"k-pivotgrid\");\n            var emptyCell = $(`<span class=\"k-pivotgrid-empty-cell\" id=\"${this._ariaId}-empty-cell\" role=\"columnheader\"><span class=\"k-sr-only\">${this.options.messages.emptyCellLabel}</span></span>`);\n            this.wrapper.append(emptyCell);\n\n            if (height) {\n                this.wrapper.css(\"height\", height);\n            }\n        },\n\n        _progress: function(toggle) {\n            kendo.ui.progress(this.wrapper, toggle);\n        },\n\n        _error: function() {\n            this._progress(false);\n        },\n\n        _requestStart: function() {\n            this._progress(true);\n        },\n\n        _updateDimensions: function() {\n            var that = this;\n            that.wrapper.css({\n                \"grid-template-columns\": kendo.format(\"{0}px 1fr\", that._rowHeadersWrapper.find(\".k-pivotgrid-table\")[0].offsetWidth),\n                \"grid-template-rows\": kendo.format(\"{0}px 1fr\", that._columnHeadersWrapper.find(\".k-pivotgrid-table\")[0].offsetHeight),\n            });\n        },\n\n        _setContentWidth: function() {\n            if (!this.options.columnWidth) {\n                return;\n            }\n            var contentTable = this._contentWrapper.find(\"table\");\n            var columnTable = this._columnHeadersWrapper.children(\"table\");\n            var rowTable = this._rowHeadersWrapper.children(\"table\");\n\n            contentTable.add(columnTable).add(rowTable).find(\"col\").width(this.options.columnWidth);\n        },\n\n        _bindConfigurator: function() {\n            var configurator = this.options.configurator;\n            if (configurator) {\n                $(configurator).kendoPivotConfiguratorV2(\"setDataSource\", this.dataSource);\n            }\n        },\n\n        cellInfoByElement: function(element) {\n            element = $(element);\n\n            return this.cellInfo(element.index(), element.parent(\"tr\").index());\n        },\n\n        cellInfo: function(columnIndex, rowIndex) {\n            var contentBuilder = this._contentBuilder;\n            var dataIndex;\n            var dataItem;\n\n            if (columnIndex >= contentBuilder.columnsCount || columnIndex < 0 ||\n                rowIndex >= contentBuilder.rowsCount || rowIndex < 0) {\n                return null;\n            }\n\n            dataIndex = rowIndex * contentBuilder.columnsCount + columnIndex;\n            dataItem = contentBuilder.hash[dataIndex < 0 ? 0 : dataIndex];\n\n            return {\n                columnTuple: dataItem.columnTuple,\n                rowTuple: dataItem.rowTuple,\n                dataItem: dataItem.data\n            };\n        },\n\n        refresh: function() {\n            var that = this;\n\n            var dataSource = that.dataSource;\n            if (that.trigger(DATABINDING, { action: \"rebind\" } )) {\n                return;\n            }\n\n            var lastFocusedCellID = kendo._activeElement() ? kendo._activeElement().id : null;\n            var lastCellIdWithTabIndex = that.wrapper.find(\"[tabindex=0]\").attr(\"id\");\n            that._columnBuilder.setTuples(dataSource._columnTuples);\n            that._columnHeadersWrapper.html(that._columnBuilder.build());\n\n            that._rowBuilder.setTuples(dataSource._rowTuples);\n            that._rowHeadersWrapper.html(that._rowBuilder.build());\n\n            that._contentBuilder.setRowColumnInfo({\n                columnHeaderLeafs: that._columnBuilder.getHeaderLeafs(),\n                rowHeaderLeafs: that._rowBuilder.getHeaderLeafs(),\n                columnHeaderBreadth: that._columnBuilder.getBreadth(),\n                rowHeaderDepth: that._rowBuilder.getBreadth(),\n                data: dataSource._view\n            });\n\n            that._contentWrapper.html(that._contentBuilder.build());\n\n\n            that._setContentWidth();\n            that._updateDimensions();\n\n            that._progress(false);\n\n            that.trigger(DATABOUND);\n            that._matchAriaAttributes(that.wrapper[0]);\n\n            if (!that.navigation) {\n                return;\n            }\n\n            if (lastCellIdWithTabIndex && that.element.find(`#${lastCellIdWithTabIndex}`).length > 0) {\n                that.element.find(`#${lastCellIdWithTabIndex}`).attr('tabindex', '0');\n            } else {\n                const firstCell = that.navigation.first;\n\n                if (firstCell) {\n                    firstCell.setAttribute('tabindex', '0');\n                }\n            }\n\n            if (lastFocusedCellID && lastFocusedCellID.indexOf(that._ariaId) == 0) {\n                that.navigation.focusElement(that.element.find(`#${lastFocusedCellID}`)[0]);\n            }\n        }\n    });\n\n    ui.plugin(PivotConfiguratorButton);\n    ui.plugin(PivotContainer);\n    ui.plugin(PivotGridV2);\n\n    var PivotGrid = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n            var columnBuilder;\n            var rowBuilder;\n\n            Widget.fn.init.call(that, element, options);\n\n            STATE_COLLAPSED_ICONNAME = kendo.support.isRtl(that.element) ? \"caret-alt-left\" : \"caret-alt-right\";\n\n            that._dataSource();\n\n            that._bindConfigurator();\n\n            that._wrapper();\n            that._createLayout();\n\n            that._columnBuilder = columnBuilder = new ColumnBuilder();\n            that._rowBuilder = rowBuilder = new RowBuilder();\n            that._contentBuilder = new ContentBuilder();\n\n            that._templates();\n\n            that.columnsHeader\n                .add(that.rowsHeader)\n                .on(\"click\", \"span.k-icon,span.k-svg-icon\", function() {\n                    var button = $(this);\n                    var builder = columnBuilder;\n                    var action = \"expandColumn\";\n                    var eventName;\n                    var path = button.attr(kendo.attr(\"path\"));\n                    var eventArgs = {\n                        axis: \"columns\",\n                        path: $.parseJSON(path)\n                    };\n\n                    if (button.parent().is(\"td\")) {\n                        builder = rowBuilder;\n                        action = \"expandRow\";\n                        eventArgs.axis = \"rows\";\n                    }\n\n                    var expanded = button.is(STATE_EXPANDED_SELECTOR);\n                    var metadata = builder.metadata[path];\n                    var request = metadata.expanded === undefined$1;\n\n                    eventName = expanded ? COLLAPSEMEMBER : EXPANDMEMBER;\n                    eventArgs.childrenLoaded = metadata.maxChildren > metadata.children;\n\n                    if (that.trigger(eventName, eventArgs)) {\n                        return;\n                    }\n\n                    builder.metadata[path].expanded = !expanded;\n                    kendo.ui.icon(button,{ icon: !expanded ? STATE_EXPANDED_ICONNAME : STATE_COLLAPSED_ICONNAME });\n\n                    if (!expanded && request) {\n                        that.dataSource[action](eventArgs.path);\n                    } else {\n                        that.refresh();\n                    }\n                });\n\n            that._scrollable();\n\n            if (that.options.autoBind) {\n                that.dataSource.fetch();\n            }\n\n            kendo.notify(that);\n        },\n\n        events: [\n            DATABINDING,\n            DATABOUND,\n            EXPANDMEMBER,\n            COLLAPSEMEMBER\n        ],\n\n        options: {\n            name: \"PivotGrid\",\n            autoBind: true,\n            reorderable: true,\n            filterable: false,\n            sortable: false,\n            navigatable: false,\n            height: null,\n            columnWidth: 100,\n            configurator: \"\",\n            columnHeaderTemplate: null,\n            rowHeaderTemplate: null,\n            dataCellTemplate: null,\n            kpiStatusTemplate: null,\n            kpiTrendTemplate: null,\n            messages: {\n                measureFields: \"Drop Data Fields Here\",\n                columnFields: \"Drop Column Fields Here\",\n                rowFields: \"Drop Rows Fields Here\"\n            }\n        },\n\n        _templates: function() {\n            var columnTemplate = this.options.columnHeaderTemplate;\n            var rowTemplate = this.options.rowHeaderTemplate;\n            var dataTemplate = this.options.dataCellTemplate;\n            var kpiStatusTemplate = this.options.kpiStatusTemplate;\n            var kpiTrendTemplate = this.options.kpiTrendTemplate;\n\n            this._columnBuilder.template = kendo.template(columnTemplate || HEADER_TEMPLATE, { useWithBlock: !!columnTemplate });\n            this._contentBuilder.dataTemplate = kendo.template(dataTemplate || DATACELL_TEMPLATE, { useWithBlock: !!dataTemplate });\n            this._contentBuilder.kpiStatusTemplate = kendo.template(kpiStatusTemplate || KPISTATUS_TEMPLATE, { useWithBlock: !!kpiStatusTemplate });\n            this._contentBuilder.kpiTrendTemplate = kendo.template(kpiTrendTemplate || KPITREND_TEMPLATE, { useWithBlock: !!kpiTrendTemplate });\n            this._rowBuilder.template = kendo.template(rowTemplate || HEADER_TEMPLATE, { useWithBlock: !!rowTemplate });\n        },\n\n        _bindConfigurator: function() {\n            var configurator = this.options.configurator;\n            if (configurator) {\n                $(configurator).kendoPivotConfigurator(\"setDataSource\", this.dataSource);\n            }\n        },\n\n        cellInfoByElement: function(element) {\n            element = $(element);\n\n            return this.cellInfo(element.index(), element.parent(\"tr\").index());\n        },\n\n        cellInfo: function(columnIndex, rowIndex) {\n            var contentBuilder = this._contentBuilder;\n            var columnInfo = contentBuilder.columnIndexes[columnIndex || 0];\n            var rowInfo = contentBuilder.rowIndexes[rowIndex || 0];\n            var dataIndex;\n\n            if (!columnInfo || !rowInfo) {\n                return null;\n            }\n\n            dataIndex = (rowInfo.index * contentBuilder.rowLength) + columnInfo.index;\n\n            return {\n                columnTuple: columnInfo.tuple,\n                rowTuple: rowInfo.tuple,\n                measure: columnInfo.measure || rowInfo.measure,\n                dataItem: this.dataSource.view()[dataIndex]\n            };\n        },\n\n        setDataSource: function(dataSource) {\n            this.options.dataSource = dataSource;\n\n            this._dataSource();\n\n            if (this.measuresTarget) {\n                this.measuresTarget.setDataSource(dataSource);\n            }\n\n            if (this.rowsTarget) {\n                this.rowsTarget.setDataSource(dataSource);\n            }\n\n            if (this.columnsTarget) {\n                this.columnsTarget.setDataSource(dataSource);\n            }\n\n            this._bindConfigurator();\n\n            if (this.options.autoBind) {\n                dataSource.fetch();\n            }\n        },\n\n        setOptions: function(options) {\n            Widget.fn.setOptions.call(this, options);\n\n            this._templates();\n        },\n\n        destroy: function() {\n            Widget.fn.destroy.call(this);\n\n            clearTimeout(this._headerReflowTimeout);\n        },\n\n        _dataSource: function() {\n            var that = this;\n            var dataSource = that.options.dataSource;\n\n            dataSource = Array.isArray(dataSource) ? { data: dataSource } : dataSource;\n\n            if (that.dataSource && this._refreshHandler) {\n                that.dataSource.unbind(CHANGE, that._refreshHandler)\n                               .unbind(STATERESET, that._stateResetHandler)\n                               .unbind(PROGRESS, that._progressHandler)\n                               .unbind(ERROR, that._errorHandler);\n            } else {\n                that._refreshHandler = that.refresh.bind(that);\n                that._progressHandler = that._requestStart.bind(that);\n                that._stateResetHandler = that._stateReset.bind(that);\n                that._errorHandler = that._error.bind(that);\n            }\n\n            that.dataSource = kendo.data.PivotDataSource.create(dataSource)\n                                   .bind(CHANGE, that._refreshHandler)\n                                   .bind(PROGRESS, that._progressHandler)\n                                   .bind(STATERESET, that._stateResetHandler)\n                                   .bind(ERROR, that._errorHandler);\n        },\n\n        _error: function() {\n            this._progress(false);\n        },\n\n        _requestStart: function() {\n            this._progress(true);\n        },\n\n        _stateReset: function() {\n            this._columnBuilder.reset();\n            this._rowBuilder.reset();\n        },\n\n        _wrapper: function() {\n            var height = this.options.height;\n\n            this.wrapper = this.element.addClass(\"k-pivot\");\n\n            if (height) {\n                this.wrapper.css(\"height\", height);\n            }\n        },\n\n        _measureFields: function() {\n            this.measureFields = $(DIV).addClass(\"k-pivot-toolbar k-toolbar k-toolbar-md k-settings-measures\");\n\n            this.measuresTarget = this._createSettingTarget(this.measureFields, {\n                setting: \"measures\",\n                messages: {\n                    empty: this.options.messages.measureFields\n                }\n            });\n        },\n\n        _createSettingTarget: function(element, options) {\n            var template,\n                pivotOptions = this.options;\n\n            template = ({ sortIcon, name }) => ''\n                + `<span class=\"k-chip k-chip-md k-rounded-full k-chip-solid k-chip-solid-base\" tabindex=\"0\" data-${kendo.ns}name=\"${name}\">`\n                    + '<span class=\"k-chip-content\">'\n                        + `<span class=\"k-chip-text\">${name}</span>`\n                    + '</span>'\n                    + '<span class=\"k-chip-actions k-field-actions\">'\n                        + getIcons(sortIcon, options, pivotOptions)\n                    + '</span>'\n                + '</span>';\n\n            return new kendo.ui.PivotSettingTarget(element, $.extend({\n                dataSource: this.dataSource,\n                template: template,\n                emptyTemplate: (data) => `<span class=\"k-empty\">${data}</span>`,\n                enabled: this.options.reorderable\n            }, options));\n        },\n\n        _initSettingTargets: function() {\n            this.columnsTarget = this._createSettingTarget(this.columnFields, {\n                connectWith: this.rowFields,\n                setting: \"columns\",\n                filterable: this.options.filterable,\n                sortable: this.options.sortable,\n                messages: {\n                    empty: this.options.messages.columnFields,\n                    fieldMenu: this.options.messages.fieldMenu\n                }\n            });\n\n            this.rowsTarget = this._createSettingTarget(this.rowFields, {\n                connectWith: this.columnFields,\n                setting: \"rows\",\n                filterable: this.options.filterable,\n                sortable: this.options.sortable,\n                messages: {\n                    empty: this.options.messages.rowFields,\n                    fieldMenu: this.options.messages.fieldMenu\n                }\n            });\n        },\n\n        _createLayout: function() {\n            var that = this;\n            var layoutTable = $(LAYOUT_TABLE);\n            var leftContainer = layoutTable.find(\".k-pivot-rowheaders\");\n            var rightContainer = layoutTable.find(\".k-pivot-table\");\n            var gridWrapper = $(DIV).addClass(\"k-grid\");\n\n            that._measureFields();\n            that.columnFields = $(DIV).addClass(\"k-pivot-toolbar k-toolbar k-toolbar-md k-settings-columns\");\n\n            that.rowFields = $(DIV).addClass(\"k-pivot-toolbar k-toolbar k-toolbar-md k-settings-rows\");\n            that.columnsHeader = $('<div class=\"k-grid-header-wrap\" />')\n                                    .wrap('<div class=\"k-grid-header\" />');\n\n            that.columnsHeader.parent().css(\"padding-right\", kendo.support.scrollbar());\n\n            that.rowsHeader = $('<div class=\"k-grid k-alt\"/>');\n            that.content = $('<div class=\"k-grid-content\" />');\n\n            leftContainer.append(that.measureFields);\n            leftContainer.append(that.rowFields);\n            leftContainer.append(that.rowsHeader);\n\n            gridWrapper.append(that.columnsHeader.parent());\n            gridWrapper.append(that.content);\n\n            rightContainer.append(that.columnFields);\n            rightContainer.append(gridWrapper);\n\n            that.wrapper.append(layoutTable);\n\n            that.columnsHeaderTree = new kendo.dom.Tree(that.columnsHeader[0]);\n            that.rowsHeaderTree = new kendo.dom.Tree(that.rowsHeader[0]);\n            that.contentTree = new kendo.dom.Tree(that.content[0]);\n\n            that._initSettingTargets();\n        },\n\n        _progress: function(toggle) {\n            kendo.ui.progress(this.wrapper, toggle);\n        },\n\n        _resize: function() {\n            if (this.content[0].firstChild) {\n                this._setSectionsWidth();\n                this._setSectionsHeight();\n                this._setContentWidth();\n                this._setContentHeight();\n                this._columnHeaderReflow();\n            }\n        },\n\n        _columnHeaderReflow: function() {\n            var columnTable = this.columnsHeader.children(\"table\");\n\n            if (!kendo.support.browser.mozilla) {\n                return;\n            }\n\n            clearTimeout(this._headerReflowTimeout);\n\n            columnTable.css(\"table-layout\", \"auto\");\n\n            this._headerReflowTimeout = setTimeout(function() {\n                columnTable.css(\"table-layout\", \"\");\n            });\n        },\n\n        _setSectionsWidth: function() {\n            var rowsHeader = this.rowsHeader;\n            var leftColumn = rowsHeader.parent(\".k-pivot-rowheaders\").width(AUTO);\n            var width;\n\n            width = Math.max(outerWidth(this.measureFields), outerWidth(this.rowFields));\n            width = Math.max(rowsHeader.children(\"table\").width(), width);\n\n            leftColumn.width(width);\n        },\n\n        _setSectionsHeight: function() {\n            var measureFieldsHeight = this.measureFields.height(AUTO).height();\n            var columnFieldsHeight = this.columnFields.height(AUTO).height();\n            var rowFieldsHeight = this.rowFields.height(AUTO).innerHeight();\n            var columnsHeight = this.columnsHeader.height(AUTO).innerHeight();\n\n            var padding = rowFieldsHeight - this.rowFields.height();\n\n            var firstRowHeight = columnFieldsHeight > measureFieldsHeight ? columnFieldsHeight : measureFieldsHeight;\n            var secondRowHeight = columnsHeight > rowFieldsHeight ? columnsHeight : rowFieldsHeight;\n\n            this.measureFields.height(firstRowHeight);\n            this.columnFields.height(firstRowHeight);\n            this.rowFields.height(secondRowHeight - padding);\n            this.columnsHeader.height(secondRowHeight);\n        },\n\n        _setContentWidth: function() {\n            var contentTable = this.content.find(\"table\");\n            var columnTable = this.columnsHeader.children(\"table\");\n\n            var rowLength = contentTable.children(\"colgroup\").children().length;\n\n            var calculatedWidth = rowLength * this.options.columnWidth;\n            var minWidth = Math.ceil((calculatedWidth / this.content.width()) * 100);\n\n            if (minWidth < 100) {\n                minWidth = 100;\n            }\n\n            contentTable.add(columnTable).css(\"width\", minWidth + \"%\");\n\n            this._resetColspan(columnTable);\n        },\n\n        _setContentHeight: function() {\n            var that = this;\n            var content = that.content;\n            var rowsHeader = that.rowsHeader;\n            var innerHeight = that.wrapper.innerHeight();\n            var scrollbar = kendo.support.scrollbar();\n            var skipScrollbar = content[0].offsetHeight === content[0].clientHeight;\n            var height = that.options.height;\n\n            if (that.wrapper.is(\":visible\")) {\n                if (!innerHeight || !height) {\n                    if (skipScrollbar) {\n                        scrollbar = 0;\n                    }\n\n                    content.height(\"auto\");\n                    rowsHeader.height(content.height() - scrollbar);\n                    return;\n                }\n\n                innerHeight -= outerHeight(that.columnFields);\n                innerHeight -= outerHeight(that.columnsHeader.parent());\n\n                if (innerHeight <= scrollbar * 2) { // do not set height if proper scrollbar cannot be displayed\n                    innerHeight = scrollbar * 2 + 1;\n                    if (!skipScrollbar) {\n                        innerHeight += scrollbar;\n                    }\n                }\n\n                content.height(innerHeight);\n\n                if (skipScrollbar) {\n                    scrollbar = 0;\n                }\n\n                rowsHeader.height(innerHeight - scrollbar);\n            }\n        },\n\n        _resetColspan: function(columnTable) {\n            var that = this;\n            var cell = columnTable.children(\"tbody\").children().first().children().first();\n\n            if (that._colspan === undefined$1) {\n                that._colspan = cell.attr(\"colspan\");\n            }\n\n            cell.attr(\"colspan\", 1);\n\n            clearTimeout(that._layoutTimeout);\n\n            that._layoutTimeout = setTimeout(function() {\n                cell.attr(\"colspan\", that._colspan);\n                that._colspan = undefined$1;\n            });\n        },\n\n        _axisMeasures: function(axis) {\n            var result = [];\n            var dataSource = this.dataSource;\n            var measures = dataSource.measures();\n            var hasMeasure = measures.length > 1 || (measures[0] && measures[0].type);\n\n            if (dataSource.measuresAxis() === axis) {\n                if (dataSource[axis]().length === 0 || hasMeasure) {\n                    result = measures;\n                }\n            }\n\n            return result;\n        },\n\n        items: function() {\n            return [];\n        },\n\n        refresh: function() {\n            var that = this;\n            var dataSource = that.dataSource;\n\n            var axes = dataSource.axes();\n            var columns = (axes.columns || {}).tuples || [];\n            var rows = (axes.rows || {}).tuples || [];\n\n            var columnBuilder = that._columnBuilder;\n            var rowBuilder = that._rowBuilder;\n\n            var columnAxis = {};\n            var rowAxis = {};\n\n            if (that.trigger(DATABINDING, { action: \"rebind\" } )) {\n                return;\n            }\n\n            columnBuilder.measures = that._axisMeasures(AXIS_COLUMNS);\n            rowBuilder.measures = that._axisMeasures(AXIS_ROWS);\n\n            that.columnsHeaderTree.render(columnBuilder.build(columns));\n            that.rowsHeaderTree.render(rowBuilder.build(rows));\n\n            columnAxis = {\n                indexes: columnBuilder._indexes,\n                measures: columnBuilder.measures,\n                metadata: columnBuilder.metadata\n            };\n\n            rowAxis = {\n                indexes: rowBuilder._indexes,\n                measures: rowBuilder.measures,\n                metadata: rowBuilder.metadata\n            };\n\n            that.contentTree.render(that._contentBuilder.build(dataSource.view(), columnAxis, rowAxis));\n\n            that._resize();\n\n            if (that.touchScroller) {\n                that.touchScroller.contentResized();\n            } else {\n                var touchScroller = kendo.touchScroller(that.content);\n\n                if (touchScroller && touchScroller.movable) {\n                    that.touchScroller = touchScroller;\n\n                    touchScroller.movable.bind(\"change\", function(e) {\n                        kendo.scrollLeft(that.columnsHeader, -e.sender.x);\n                        that.rowsHeader.scrollTop(-e.sender.y);\n                    });\n                }\n            }\n\n            that._progress(false);\n\n            that.trigger(DATABOUND);\n        },\n\n        _scrollable: function() {\n            var that = this;\n            var columnsHeader = that.columnsHeader;\n            var rowsHeader = that.rowsHeader;\n\n            that.content.on(\"scroll\", function() {\n                kendo.scrollLeft(columnsHeader, this.scrollLeft);\n                rowsHeader.scrollTop(this.scrollTop);\n            });\n\n            rowsHeader.on(\"DOMMouseScroll\" + NS + \" mousewheel\" + NS, that._wheelScroll.bind(that));\n        },\n\n        _wheelScroll: function(e) {\n            if (e.ctrlKey) {\n                return;\n            }\n\n            var delta = kendo.wheelDeltaY(e);\n            var scrollTop = this.content.scrollTop();\n\n            if (delta) {\n                e.preventDefault();\n                //In Firefox DOMMouseScroll event cannot be canceled\n                $(e.currentTarget).closest(\":not(path,svg)\").one(\"wheel\" + NS, false);\n\n                this.rowsHeader.scrollTop(scrollTop + (-delta));\n                this.content.scrollTop(scrollTop + (-delta));\n            }\n        }\n    });\n\n    var element = kendo.dom.element;\n    var htmlNode = kendo.dom.html;\n\n    var createMetadata = function(levelNum, memberIdx) {\n       return {\n            maxChildren: 0,\n            children: 0,\n            maxMembers: 0,\n            members: 0,\n            measures: 1,\n            levelNum: levelNum,\n            parentMember: memberIdx !== 0\n        };\n    };\n\n    var buildPath = function(tuple, index) {\n        var path = [];\n        var idx = 0;\n\n        for (; idx <= index; idx++) {\n            path.push(tuple.members[idx].name);\n        }\n\n        return path;\n    };\n\n    var tupleName = function(tuple, index) {\n        var name = \"\";\n        var idx = 0;\n\n        for (; idx <= index; idx++) {\n            name += tuple.members[idx].name;\n        }\n\n        return name;\n    };\n\n    var ContentBuilderV2 = Class.extend({\n        init: function(options) {\n            this.template = kendo.template(options.template);\n            this.ariaId = options.ariaId;\n            this.hash = [];\n        },\n\n        setRowColumnInfo: function(options) {\n            this.data = options.data;\n            this.columnHeaderLeafs = options.columnHeaderLeafs;\n            this.rowHeaderLeafs = options.rowHeaderLeafs;\n            this.columnHeaderBreadth = options.columnHeaderBreadth;\n            this.rowHeaderDepth = options.rowHeaderDepth;\n            this.hash.length = 0;\n        },\n\n        addColElements: function(count) {\n            var html = \"\";\n\n            for (var index = 0; index < count; index++) {\n                html += \"<col>\";\n            }\n\n            this.table.find(\"colgroup\").append(html);\n        },\n\n        addRowElements: function(data) {\n            var that = this;\n            var body = that.table.find(\"tbody\");\n            var row;\n\n            for (var index = 0; index < data.length; index++) {\n                row = $(`<tr class=\"${tableStyles.tableRow} k-pivotgrid-row\" role='presentation'></tr>`);\n                body.append(row);\n                that.addColumCell(row, data[index], index);\n            }\n\n            this.rowsCount = data.length;\n        },\n\n        addColumCell: function(rowEl, rowItem, rowIndex) {\n            var that = this;\n            for (var index = 0; index < rowItem.cells.length; index++) {\n                var cell = rowItem.cells[index];\n                if (cell) {\n                    var cellEl = $(`<td id=\"${that.ariaId}-cell-${rowIndex + 1}-${index + 1}\" class=\"${tableStyles.tableCell} k-pivotgrid-cell\" role=\"gridcell\"></td>`);\n                    if (this.rowHeaderLeafs[rowIndex].total || this.columnHeaderLeafs[index].total) {\n                        cellEl.addClass(\"k-pivotgrid-header-total\");\n                    }\n                    cellEl.append(that.template({\n                        dataItem: cell.data,\n                        rowTuple: cell.rowTuple,\n                        columnTuple: cell.columnTuple\n                    }));\n                    this.hash.push(cell);\n                    rowEl.append(cellEl);\n                }\n            }\n        },\n\n        build: function() {\n            var data = toData((this.data || []).slice(), this.columnHeaderLeafs, this.rowHeaderLeafs, this.columnHeaderBreadth, this.rowHeaderDepth);\n            var that = this;\n\n            var table = $(`<table class='${tableStyles.contentTable} k-pivotgrid-table' role='presentation'><colgroup></colgroup><tbody class='${tableStyles.tbody} k-pivotgrid-tbody' role='presentation'></tbody></table>`);\n\n            that.table = table;\n            that.addColElements(this.columnHeaderLeafs.length);\n            that.addRowElements(data);\n            this.rowsCount = data.length;\n            this.columnsCount = this.columnHeaderLeafs.length;\n\n            return that.table;\n        }\n    });\n\n    var ColumnRowBuilder = Class.extend({\n        init: function(options) {\n            this.tuples = options.tuples;\n            this.axes = options.axes;\n            this.ariaId = options.ariaId;\n            this.headerTemplate = kendo.template(HEADERTEMPLATE);\n            if (options.template) {\n                this.template = kendo.template(options.template);\n            }\n        },\n\n        setTuples: function(tuples) {\n            this.tuples = tuples;\n        },\n\n        addColElements: function(count) {\n            var html = \"\";\n\n            for (var index = 0; index < count; index++) {\n                html += \"<col>\";\n            }\n\n            this.table.find(\"colgroup\").append(html);\n        },\n\n        addRowElements: function(columnHeaderRows) {\n            var that = this;\n            var body = that.table.find(\"tbody\");\n            var row;\n\n            for (var index = 0; index < columnHeaderRows.length; index++) {\n                row = $('<tr class=\"k-table-row k-pivotgrid-row\" role=\"row\"></tr>');\n                body.append(row);\n                that.addColumCell(row, columnHeaderRows[index], index);\n            }\n        },\n\n        addColumCell: function(rowEl, rowItem, rowIndex) {\n            var that = this;\n            var cellEl;\n            var cell;\n\n            for (var index = 0; index < rowItem.cells.length; index++) {\n                cell = rowItem.cells[index];\n                if (cell) {\n                    cellEl = $(that.headerTemplate({\n                        id: `${that.ariaId}-${that.axes == \"columns\" ? \"ch\" : \"rh\"}-${rowIndex + 1}-${index + 1}`,\n                        rowspan: cell.rowSpan,\n                        colspan: cell.colSpan,\n                        key: cell.path.join(\",\") + (cell.total ? '|[TOTAL]' : ''),\n                        iconClass: (cell.children && cell.children.length) ? \"up\" : \"down\",\n                        expandable: cell.hasChildren && !cell.total,\n                        expanded: (cell.children && cell.children.length) ? \"true\" : \"false\",\n                        headerClass: kendo.format(\"k-pivotgrid-cell{0}{1}\", cell.total ? \" k-pivotgrid-header-total\" : \"\", cell.levelNum === 0 ? \" k-pivotgrid-header-root\" : \"\"),\n                        role: that.axes == \"columns\" ? \"columnheader\" : \"rowheader\"\n                    }));\n                    cellEl.append(that.template ? that.template({ member: cell }) : cell.caption);\n                    rowEl.append(cellEl);\n                }\n            }\n        },\n\n        build: function() {\n            var tree = toTree((this.tuples || []).slice());\n            var treeData = this.axes == \"columns\" ? toColumns(tree) : toRows(tree);\n            var headerRows = treeData[0];\n            var headerLeafs = treeData[1];\n            var breadth = treeData[2];\n            var rowHeaderBreadth = treeData[3];\n            var that = this;\n            that._tree = tree;\n            that._breadth = breadth;\n            that._headerLeafs = headerLeafs;\n\n            var table = $(`<table class='${tableStyles.headerTable} k-pivotgrid-table' role='presentation'><colgroup></colgroup><tbody class='${tableStyles.tbody} k-pivotgrid-tbody' role='rowgroup'></tbody></table>`);\n\n            that.table = table;\n            that.addColElements(this.axes == \"columns\" ? headerLeafs.length : rowHeaderBreadth);\n            that.addRowElements(headerRows);\n\n            return that.table;\n        },\n\n        getTree: function() {\n            return this._tree;\n        },\n\n        getBreadth: function() {\n            return this._breadth;\n        },\n\n        getHeaderLeafs: function() {\n            return this._headerLeafs;\n        }\n    });\n\n    var ColumnBuilder = Class.extend({\n        init: function() {\n            this.measures = 1;\n            this.metadata = {};\n        },\n\n        build: function(tuples) {\n            var tbody = this._tbody(tuples);\n            var colgroup = this._colGroup();\n\n            return [\n                element(\"table\", { className: tableStyles.headerTable }, [colgroup, tbody])\n            ];\n        },\n\n        reset: function() {\n            this.metadata = {};\n        },\n\n        _colGroup: function() {\n            var length = this._rowLength();\n            var children = [];\n            var idx = 0;\n\n            for (; idx < length; idx++) {\n                children.push(element(\"col\", null));\n            }\n\n            return element(\"colgroup\", null, children);\n        },\n\n        _tbody: function(tuples) {\n            var root = tuples[0];\n\n            this.map = {};\n            this.rows = [];\n            this.rootTuple = root;\n\n            this._indexes = [];\n\n            if (root) {\n                this._buildRows(root, 0);\n                this._normalize();\n            } else {\n                this.rows.push(element(\"tr\", { className: tableStyles.tableRow }, [ element(\"th\", { className: tableStyles.header } , [ htmlNode(\"&nbsp;\") ]) ]));\n            }\n\n            return element(\"tbody\", { className: tableStyles.tbody }, this.rows);\n        },\n\n        _normalize: function() {\n            var rows = this.rows;\n            var rowsLength = rows.length;\n            var rowIdx = 0;\n            var row;\n\n            var cellsLength;\n            var cellIdx;\n            var cells;\n            var cell;\n\n            for (; rowIdx < rowsLength; rowIdx++) {\n                row = rows[rowIdx];\n\n                if (row.rowSpan === 1) {\n                    continue;\n                }\n\n                cells = row.children;\n\n                cellIdx = 0;\n                cellsLength = cells.length;\n\n                for (; cellIdx < cellsLength; cellIdx++) {\n                    cell = cells[cellIdx];\n\n                    if (cell.tupleAll) {\n                        cell.attr.rowSpan = row.rowSpan;\n                    }\n                }\n            }\n        },\n\n        _rowIndex: function(row) {\n            var rows = this.rows;\n            var length = rows.length;\n            var idx = 0;\n\n            for (; idx < length; idx++) {\n                if (rows[idx] === row) {\n                    break;\n                }\n            }\n\n            return idx;\n        },\n\n        _rowLength: function() {\n            var cells = this.rows[0] ? this.rows[0].children : [];\n            var length = cells.length;\n            var rowLength = 0;\n            var idx = 0;\n\n            if (length) {\n                for (; idx < length; idx++) {\n                    rowLength += cells[idx].attr.colSpan || 1;\n                }\n            }\n\n            if (!rowLength) {\n                rowLength = this.measures;\n            }\n\n            return rowLength;\n        },\n\n        _row: function(tuple, memberIdx, parentMember) {\n            var rootName = this.rootTuple.members[memberIdx].name;\n            var levelNum = tuple.members[memberIdx].levelNum;\n            var rowKey = rootName + levelNum;\n            var map = this.map;\n            var parentRow;\n            var children;\n\n            var row = map[rowKey];\n\n            if (!row) {\n                row = element(\"tr\", { className: tableStyles.tableRow }, []);\n\n                row.parentMember = parentMember;\n                row.collapsed = 0;\n                row.colSpan = 0;\n                row.rowSpan = 1;\n\n                map[rowKey] = row;\n                parentRow = map[rootName + (Number(levelNum) - 1)];\n\n                if (parentRow) {\n                    children = parentRow.children;\n\n                    if (children[1] && children[1].attr.className.indexOf(\"k-alt\") === -1) {\n                        row.notFirst = true;\n                    } else {\n                        row.notFirst = parentRow.notFirst;\n                    }\n                }\n\n                this.rows.splice(this._rowIndex(parentRow) + 1, 0, row);\n            } else {\n                row.notFirst = false;\n\n                if (!row.parentMember || row.parentMember !== parentMember) {\n                    row.parentMember = parentMember;\n                    row.collapsed = 0;\n                    row.colSpan = 0;\n                }\n            }\n\n            return row;\n        },\n\n        _measures: function(measures, tuple, className) {\n            var map = this.map;\n            var row = map.measureRow;\n            var measure;\n\n            if (!row) {\n                row = element(\"tr\", { className: tableStyles.tableRow }, []);\n                map.measureRow = row;\n                this.rows.push(row);\n            }\n\n            for (var idx = 0, length = measures.length; idx < length; idx++) {\n                measure = measures[idx];\n                row.children.push(this._cell((className || \"\"), [this._content(measure, tuple)], measure));\n            }\n\n            return length;\n        },\n\n        _content: function(member, tuple) {\n            return htmlNode(this.template({\n                member: member,\n                tuple: tuple\n            }), true);\n        },\n\n        _cell: function(className, children, member) {\n            var cell = element(\"th\", { className: tableStyles.header + \" \" + className }, children);\n            cell.value = member.caption || member.name;\n            return cell;\n        },\n\n        _buildRows: function(tuple, memberIdx, parentMember) {\n            var members = tuple.members;\n            var member = members[memberIdx];\n            var nextMember = members[memberIdx + 1];\n\n            var row, childRow, children, childrenLength;\n            var cell, allCell, cellAttr;\n            var cellChildren = [];\n            var path;\n\n            var idx = 0;\n            var metadata;\n\n            var colSpan;\n            var collapsed = 0;\n            var memberCollapsed = 0;\n\n            if (member.measure) {\n                this._measures(member.children, tuple);\n                return;\n            }\n\n            path = kendo.stringify(buildPath(tuple, memberIdx));\n            row = this._row(tuple, memberIdx, parentMember);\n\n            children = member.children;\n            childrenLength = children.length;\n\n            metadata = this.metadata[path];\n            if (!metadata) {\n                this.metadata[path] = metadata = createMetadata(Number(member.levelNum), memberIdx);\n                metadata.rootLevelNum = Number(this.rootTuple.members[memberIdx].levelNum);\n            }\n\n            this._indexes.push({\n                path: path,\n                tuple: tuple\n            });\n\n            if (member.hasChildren) {\n                if (metadata.expanded === false) {\n                    collapsed = metadata.maxChildren;\n                    row.collapsed += collapsed;\n\n                    metadata.children = 0;\n                    childrenLength = 0;\n                }\n\n                let cellIconEl = $(\"<span></span>\");\n                cellIconEl.attr(kendo.attr(\"path\"), path);\n\n                cellChildren.push(kendo.dom.html(kendo.ui.icon(cellIconEl, { icon: childrenLength ? STATE_EXPANDED_ICONNAME : STATE_COLLAPSED_ICONNAME })));\n            }\n\n            cellChildren.push(this._content(member, tuple));\n            cell = this._cell((row.notFirst ? \" k-first\" : \"\"), cellChildren, member);\n\n            row.children.push(cell);\n            row.colSpan += 1;\n\n            if (childrenLength) {\n                allCell = this._cell(\" k-alt\", [this._content(member, tuple)], member);\n                row.children.push(allCell);\n\n                for (; idx < childrenLength; idx++) {\n                    childRow = this._buildRows(children[idx], memberIdx, member);\n                }\n\n                colSpan = childRow.colSpan;\n                collapsed = childRow.collapsed;\n\n                cell.attr.colSpan = colSpan;\n\n                metadata.children = colSpan;\n                metadata.members = 1;\n\n                row.colSpan += colSpan;\n                row.collapsed += collapsed;\n                row.rowSpan = childRow.rowSpan + 1;\n\n                if (nextMember) {\n                    if (nextMember.measure) {\n                        colSpan = this._measures(nextMember.children, tuple, \" k-alt\");\n                    } else {\n                        childRow = this._buildRows(tuple, memberIdx + 1);\n                        colSpan = childRow.colSpan;\n\n                        row.collapsed += childRow.collapsed;\n                        memberCollapsed = childRow.collapsed;\n                    }\n\n                    allCell.attr.colSpan = colSpan;\n                    colSpan -= 1;\n\n                    metadata.members += colSpan;\n                    row.colSpan += colSpan;\n                }\n            } else if (nextMember) {\n                if (nextMember.measure) {\n                    colSpan = this._measures(nextMember.children, tuple);\n                } else {\n                    childRow = this._buildRows(tuple, memberIdx + 1);\n                    colSpan = childRow.colSpan;\n\n                    row.collapsed += childRow.collapsed;\n                    memberCollapsed = childRow.collapsed;\n                }\n\n                metadata.members = colSpan;\n\n                if (colSpan > 1) {\n                    cell.attr.colSpan = colSpan;\n                    row.colSpan += colSpan - 1;\n                }\n            }\n\n            if (metadata.maxMembers < (metadata.members + memberCollapsed)) {\n                metadata.maxMembers = metadata.members + memberCollapsed;\n            }\n\n            children = metadata.children + collapsed;\n\n            if (metadata.maxChildren < children) {\n                metadata.maxChildren = children;\n            }\n\n            (allCell || cell).tupleAll = true;\n\n            return row;\n        }\n    });\n\n    var RowBuilder = Class.extend({\n        init: function() {\n            this.metadata = {};\n        },\n\n        build: function(tuples) {\n            var tbody = this._tbody(tuples);\n            var colgroup = this._colGroup();\n\n            return [\n                element(\"table\", { className: tableStyles.table }, [colgroup, tbody])\n            ];\n        },\n\n        reset: function() {\n            this.metadata = {};\n        },\n\n        _rowLength: function() {\n            var children = this.rows[0].children;\n            var length = 0;\n            var idx = 0;\n\n            var cell = children[idx];\n\n            while (cell) {\n                length += (cell.attr.colSpan || 1);\n                cell = children[++idx];\n            }\n\n            return length;\n        },\n\n        _colGroup: function() {\n            var length = this._rowLength();\n            var children = [];\n            var idx = 0;\n\n            for (; idx < length; idx++) {\n                children.push(element(\"col\", null));\n            }\n\n            return element(\"colgroup\", null, children);\n        },\n\n        _tbody: function(tuples) {\n            var root = tuples[0];\n\n            this.rootTuple = root;\n            this.rows = [];\n            this.map = {};\n\n            this._indexes = [];\n\n            if (root) {\n                this._buildRows(root, 0);\n                this._normalize();\n            } else {\n                this.rows.push(element(\"tr\", { className: tableStyles.tableRow }, [ element(\"td\", { className: tableStyles.tableCell }, [ htmlNode(\"&nbsp;\") ]) ]));\n            }\n\n            return element(\"tbody\", { className: tableStyles.tbody }, this.rows);\n        },\n\n        _normalize: function() {\n            var rows = this.rows;\n            var rowsLength = rows.length;\n            var rowIdx = 0;\n\n            var members = this.rootTuple.members;\n            var firstMemberName = members[0].name;\n            var membersLength = members.length;\n            var memberIdx = 0;\n\n            var row;\n            var cell;\n            var maxcolSpan;\n            var map = this.map;\n            var allRow;\n\n            for (; rowIdx < rowsLength; rowIdx++) {\n                row = rows[rowIdx];\n\n                for (memberIdx = 0; memberIdx < membersLength; memberIdx++) {\n                    maxcolSpan = this[members[memberIdx].name];\n                    cell = row.colSpan[\"dim\" + memberIdx];\n\n                    if (cell && cell.colSpan < maxcolSpan) {\n                        cell.attr.colSpan = (maxcolSpan - cell.colSpan) + 1;\n                    }\n                }\n            }\n\n            row = map[firstMemberName];\n            allRow = map[firstMemberName + \"all\"];\n\n            if (row) {\n                row.children[0].attr.className = tableStyles.tableCell + \" k-first\";\n            }\n\n            if (allRow) {\n                allRow.children[0].attr.className += \" k-first \" + tableStyles.tableCell;\n            }\n        },\n\n        _row: function(children) {\n            var row = element(\"tr\", { className: tableStyles.tableRow }, children);\n            row.rowSpan = 1;\n            row.colSpan = {};\n\n            this.rows.push(row);\n\n            return row;\n        },\n\n        _content: function(member, tuple) {\n            return htmlNode(this.template({\n                member: member,\n                tuple: tuple\n            }), true);\n        },\n\n        _cell: function(className, children, member) {\n            var cell = element(\"td\", { className: tableStyles.tableCell + \" \" + className }, children);\n            cell.value = member.caption || member.name;\n            return cell;\n        },\n\n        _buildRows: function(tuple, memberIdx) {\n            var map = this.map;\n            var path;\n\n            var members = tuple.members;\n            var member = members[memberIdx];\n            var nextMember = members[memberIdx + 1];\n\n            var children = member.children;\n            var childrenLength = children.length;\n\n            var levelNum = Number(member.levelNum);\n            var rootName = this.rootTuple.members[memberIdx].name;\n            var tuplePath = buildPath(tuple, memberIdx - 1).join(\"\");\n            var rootLevelNum = Number(this.rootTuple.members[memberIdx].levelNum);\n            var parentName = tuplePath + (rootLevelNum === levelNum ? \"\" : (member.parentName || \"\"));\n            var row = map[parentName + \"all\"] || map[parentName];\n            var colSpan = levelNum + 1;\n\n            var cell, allCell;\n            var childRow, allRow;\n            var metadata;\n            var className;\n            var cellChildren = [];\n            var expandIconAttr;\n            var idx;\n\n            if (!row || row.hasChild) {\n                row = this._row();\n            } else {\n                row.hasChild = true;\n            }\n\n            if (member.measure) {\n                className = row.allCell ? \"k-grid-footer\" : \"\";\n                row.children.push(this._cell(className, [ this._content(children[0], tuple) ], children[0]));\n\n                row.rowSpan = childrenLength;\n\n                for (idx = 1; idx < childrenLength; idx++) {\n                    this._row([ this._cell(className, [ this._content(children[idx], tuple) ], children[idx]) ]);\n                }\n\n                return row;\n            }\n\n            map[tuplePath + member.name] = row;\n\n            path = kendo.stringify(buildPath(tuple, memberIdx));\n\n            metadata = this.metadata[path];\n            if (!metadata) {\n                this.metadata[path] = metadata = createMetadata(levelNum, memberIdx);\n                metadata.rootLevelNum = rootLevelNum;\n            }\n\n            this._indexes.push({\n                path: path,\n                tuple: tuple\n            });\n\n            if (member.hasChildren) {\n                if (metadata.expanded === false) {\n                    childrenLength = 0;\n                    metadata.children = 0;\n                }\n\n                let cellIconEl = $(\"<span></span>\");\n                cellIconEl.attr(kendo.attr(\"path\"), path);\n\n                cellChildren.push(kendo.dom.html(kendo.ui.icon(cellIconEl, { icon: childrenLength ? STATE_EXPANDED_ICONNAME : STATE_COLLAPSED_ICONNAME })));\n            }\n\n            cellChildren.push(this._content(member, tuple));\n\n            className = row.allCell && !childrenLength ? \"k-grid-footer\" : \"\";\n            cell = this._cell(className, cellChildren, member);\n            cell.colSpan = colSpan;\n\n            row.children.push(cell);\n            row.colSpan[\"dim\" + memberIdx] = cell;\n\n            if (!this[rootName] || this[rootName] < colSpan) {\n                this[rootName] = colSpan;\n            }\n\n            if (childrenLength) {\n                row.allCell = false;\n                row.hasChild = false;\n\n                for (idx = 0; idx < childrenLength; idx++) {\n                    childRow = this._buildRows(children[idx], memberIdx);\n\n                    if (row !== childRow) {\n                        row.rowSpan += childRow.rowSpan;\n                    }\n                }\n\n                if (row.rowSpan > 1) {\n                    cell.attr.rowSpan = row.rowSpan;\n                }\n\n                metadata.children = row.rowSpan;\n\n                allCell = this._cell(\"k-grid-footer\", [this._content(member, tuple)], member);\n                allCell.colSpan = colSpan;\n\n                allRow = this._row([ allCell ]);\n                allRow.colSpan[\"dim\" + memberIdx] = allCell;\n                allRow.allCell = true;\n\n                map[tuplePath + member.name + \"all\"] = allRow;\n\n                if (nextMember) {\n                    childRow = this._buildRows(tuple, memberIdx + 1);\n                    allCell.attr.rowSpan = childRow.rowSpan;\n                }\n\n                row.rowSpan += allRow.rowSpan;\n\n                metadata.members = allRow.rowSpan;\n\n            } else if (nextMember) {\n                row.hasChild = false;\n                this._buildRows(tuple, memberIdx + 1);\n\n                (allCell || cell).attr.rowSpan = row.rowSpan;\n\n                metadata.members = row.rowSpan;\n            }\n\n            if (metadata.maxChildren < metadata.children) {\n                metadata.maxChildren = metadata.children;\n            }\n\n            if (metadata.maxMembers < metadata.members) {\n                metadata.maxMembers = metadata.members;\n            }\n\n            return row;\n        }\n    });\n\n    var ContentBuilder = Class.extend({\n        init: function() {\n            this.columnAxis = {};\n            this.rowAxis = {};\n        },\n\n        build: function(data, columnAxis, rowAxis) {\n            var index = columnAxis.indexes[0];\n            var metadata = columnAxis.metadata[index ? index.path : undefined$1];\n\n            this.columnAxis = columnAxis;\n            this.rowAxis = rowAxis;\n\n            this.data = data;\n\n            this.rowLength = metadata ? metadata.maxChildren + metadata.maxMembers : columnAxis.measures.length || 1;\n\n            if (!this.rowLength) {\n                this.rowLength = 1;\n            }\n\n            var tbody = this._tbody();\n            var colgroup = this._colGroup();\n\n            return [\n                element(\"table\", { className: tableStyles.contentTable }, [colgroup, tbody])\n            ];\n        },\n\n        _colGroup: function() {\n            var length = this.columnAxis.measures.length || 1;\n            var children = [];\n            var idx = 0;\n\n            if (this.rows[0]) {\n                length = this.rows[0].children.length;\n            }\n\n            for (; idx < length; idx++) {\n                children.push(element(\"col\", null));\n            }\n\n            return element(\"colgroup\", null, children);\n        },\n\n        _tbody: function() {\n            this.rows = [];\n\n            if (this.data[0]) {\n                this.columnIndexes = this._indexes(this.columnAxis, this.rowLength);\n                this.rowIndexes = this._indexes(this.rowAxis, Math.ceil(this.data.length / this.rowLength));\n\n                this._buildRows();\n            } else {\n                this.rows.push(element(\"tr\", { className: tableStyles.tableRow }, [ element(\"td\", { className: tableStyles.tableCell }, [ htmlNode(\"&nbsp;\") ]) ]));\n            }\n\n            return element(\"tbody\", { className: tableStyles.tbody }, this.rows);\n        },\n\n        _indexes: function(axisInfo, total) {\n            var result = [];\n            var axisInfoMember;\n            var indexes = axisInfo.indexes;\n            var metadata = axisInfo.metadata;\n            var measures = axisInfo.measures;\n            var measuresLength = measures.length || 1;\n\n            var current;\n            var dataIdx = 0;\n            var firstEmpty = 0;\n\n            var idx = 0;\n            var length = indexes.length;\n            var measureIdx;\n            var index;\n\n            var children;\n            var skipChildren;\n\n            if (!length) {\n                for (measureIdx = 0; measureIdx < measuresLength; measureIdx++) {\n                    result[measureIdx] = {\n                        index: measureIdx,\n                        measure: measures[measureIdx],\n                        tuple: null\n                    };\n                }\n\n                return result;\n            }\n\n            for (; idx < length; idx++) {\n                axisInfoMember = indexes[idx];\n                current = metadata[axisInfoMember.path];\n                children = current.children + current.members;\n                skipChildren = 0;\n\n                if (children) {\n                    children -= measuresLength;\n                }\n\n                if (current.expanded === false && current.children !== current.maxChildren) {\n                    skipChildren = current.maxChildren;\n                }\n\n                if (current.parentMember && current.levelNum === current.rootLevelNum) {\n                    children = -1;\n                }\n\n                if (children > -1) {\n                    for (measureIdx = 0; measureIdx < measuresLength; measureIdx++) {\n                        index = children + measureIdx;\n                        if (!current.children) {\n                            index += firstEmpty;\n                        }\n\n                        result[children + firstEmpty + measureIdx] = {\n                            children: children,\n                            index: dataIdx,\n                            measure: measures[measureIdx],\n                            tuple: axisInfoMember.tuple\n                        };\n                        dataIdx += 1;\n                    }\n\n                    while (result[firstEmpty] !== undefined$1) {\n                        firstEmpty += 1;\n                    }\n                }\n\n                if (firstEmpty === total) {\n                    break;\n                }\n\n                dataIdx += skipChildren;\n            }\n\n            return result;\n        },\n\n        _buildRows: function() {\n            var rowIndexes = this.rowIndexes;\n            var length = rowIndexes.length;\n            var idx = 0;\n\n            for (; idx < length; idx++) {\n                var rowIndex = rowIndexes[idx];\n                if (rowIndex) {\n                    this.rows.push(this._buildRow(rowIndex));\n                }\n            }\n        },\n\n        _buildRow: function(rowInfo) {\n            var startIdx = rowInfo.index * this.rowLength;\n            var columnIndexes = this.columnIndexes;\n            var length = columnIndexes.length;\n            var columnInfo;\n            var cells = [];\n            var idx = 0;\n\n            var templateInfo;\n            var cell, cellContent;\n            var attr, dataItem, measure;\n\n            for (; idx < length; idx++) {\n                columnInfo = columnIndexes[idx];\n\n                if (columnInfo === undefined$1) {\n                    continue;\n                }\n\n                attr = { className: tableStyles.tableCell };\n                if (columnInfo.children) {\n                    attr.className += \" k-alt\";\n                }\n\n                cellContent = \"\";\n                dataItem = this.data[startIdx + columnInfo.index];\n                measure = columnInfo.measure || rowInfo.measure;\n\n                templateInfo = {\n                    columnTuple: columnInfo.tuple,\n                    rowTuple: rowInfo.tuple,\n                    measure: measure,\n                    dataItem: dataItem\n                };\n\n                if (dataItem.value !== \"\" && measure && measure.type) {\n                    if (measure.type === \"status\") {\n                        cellContent = this.kpiStatusTemplate(templateInfo);\n                    } else if (measure.type === \"trend\") {\n                        cellContent = this.kpiTrendTemplate(templateInfo);\n                    }\n                }\n\n                if (!cellContent) {\n                    cellContent = this.dataTemplate(templateInfo);\n                }\n\n                cell = element(\"td\", attr, [ htmlNode(cellContent) ]);\n                cell.value = dataItem.value;\n                cells.push(cell);\n            }\n\n            attr = { className: tableStyles.tableRow };\n            if (rowInfo.children) {\n                attr.className += \" k-grid-footer\";\n            }\n\n            return element(\"tr\", attr, cells);\n        }\n    });\n\n    ui.plugin(PivotGrid);\n\n    kendo.PivotExcelExporter = kendo.Class.extend({\n        init: function(options) {\n            this.options = options;\n\n            this.widget = options.widget;\n            this.dataSource = this.widget.dataSource;\n        },\n\n        _columns: function() {\n            var columnHeaderTable = this.widget.columnsHeaderTree.children[0];\n            var rowHeaderTable = this.widget.rowsHeaderTree.children[0];\n\n            var columnHeaderLength = columnHeaderTable.children[0].children.length;\n            var rowHeaderLength = rowHeaderTable.children[0].children.length;\n\n            var width = this.widget.options.columnWidth;\n            var result = [];\n            var idx;\n\n            if (rowHeaderLength && this.dataSource.data()[0]) {\n                for (idx = 0; idx < rowHeaderLength; idx++) {\n                    result.push({\n                        autoWidth: true\n                    });\n                }\n            }\n\n            for (idx = 0; idx < columnHeaderLength; idx++) {\n                result.push({\n                    autoWidth: false,\n                    width: width\n                });\n            }\n\n            return result;\n        },\n\n        _cells: function(rows, type, callback) {\n            var result = [];\n\n            var i = 0;\n            var length = rows.length;\n\n            var cellsLength;\n            var row, cells;\n            var j, cell;\n\n            for (; i < length; i++) {\n                row = [];\n                cells = rows[i].children;\n                cellsLength = cells.length;\n\n                for (j = 0; j < cellsLength; j++) {\n                    cell = cells[j];\n\n                    row.push({\n                        background: \"#7a7a7a\",\n                        color: \"#fff\",\n                        value: cell.value,\n                        colSpan: cell.attr.colSpan || 1,\n                        rowSpan: cell.attr.rowSpan || 1\n                    });\n                }\n\n                if (callback) {\n                    callback(row, i);\n                }\n\n                result.push({\n                    cells: row,\n                    type: type\n                });\n            }\n\n            return result;\n        },\n\n        _rows: function() {\n            var columnHeaderTable = this.widget.columnsHeaderTree.children[0];\n            var rowHeaderTable = this.widget.rowsHeaderTree.children[0];\n\n            var columnHeaderLength = columnHeaderTable.children[0].children.length;\n            var rowHeaderLength = rowHeaderTable.children[0].children.length;\n\n            var columnHeaderRows = columnHeaderTable.children[1].children;\n            var rowHeaderRows = rowHeaderTable.children[1].children;\n            var contentRows = this.widget.contentTree.children[0].children[1].children;\n\n            var columnRows = this._cells(columnHeaderRows, \"header\");\n\n            if (rowHeaderLength) {\n                columnRows[0].cells.splice(0, 0, {\n                    background: \"#7a7a7a\",\n                    color: \"#fff\",\n                    value: \"\",\n                    colSpan: rowHeaderLength,\n                    rowSpan: columnHeaderRows.length\n                });\n            }\n\n            var dataCallback = function(row, index) {\n                var j = 0;\n                var cell, value;\n                var cells = contentRows[index].children;\n\n                for (; j < columnHeaderLength; j++) {\n                    cell = cells[j];\n                    value = Number(cell.value);\n\n                    if (isNaN(value)) {\n                        value = cell.value;\n                    }\n\n                    row.push({\n                        background: \"#dfdfdf\",\n                        color: \"#333\",\n                        value: value,\n                        colSpan: 1,\n                        rowSpan: 1\n                    });\n                }\n            };\n\n            var rowRows = this._cells(rowHeaderRows, \"data\", dataCallback);\n\n            return columnRows.concat(rowRows);\n        },\n\n        _freezePane: function() {\n            var columnHeaderTable = this.widget.columnsHeaderTree.children[0];\n            var rowHeaderTable = this.widget.rowsHeaderTree.children[0];\n\n            var rowHeaderLength = rowHeaderTable.children[0].children.length;\n            var columnHeaderRows = columnHeaderTable.children[1].children;\n\n            return {\n                colSplit: rowHeaderLength,\n                rowSplit: columnHeaderRows.length\n            };\n        },\n\n        workbook: function() {\n            var promise,\n                resolveFn = function() {\n                    return {\n                        sheets: [ {\n                            columns: this._columns(),\n                            rows: this._rows(),\n                            freezePane: this._freezePane(),\n                            filter: null\n                        } ]\n                    };\n                };\n\n            if (this.dataSource.view()[0]) {\n                promise = $.Deferred();\n                promise.resolve();\n            } else {\n                promise = this.dataSource.fetch();\n            }\n\n            return promise.then(resolveFn.bind(this));\n        }\n    });\n\n    var PivotExcelMixin = {\n        extend: function(proto) {\n           proto.events.push(\"excelExport\");\n           proto.options.excel = $.extend(proto.options.excel, this.options);\n           proto.saveAsExcel = this.saveAsExcel;\n        },\n        options: {\n            proxyURL: \"\",\n            filterable: false,\n            fileName: \"Export.xlsx\"\n        },\n        saveAsExcel: function() {\n            var excel = this.options.excel || {};\n\n            var exporter = new kendo.PivotExcelExporter({\n                widget: this\n            });\n\n            var resolveFn = function(book) {\n                if (!this.trigger(\"excelExport\", { workbook: book })) {\n                    var workbook = new kendo.ooxml.Workbook(book);\n\n                    workbook.toDataURLAsync().then(function(dataURI) {\n                        kendo.saveAs({\n                            dataURI: dataURI,\n                            fileName: book.fileName || excel.fileName,\n                            proxyURL: excel.proxyURL,\n                            forceProxy: excel.forceProxy\n                        });\n                    });\n                }\n            };\n\n            exporter.workbook().then(resolveFn.bind(this));\n        }\n    };\n\n    kendo.PivotExcelMixin = PivotExcelMixin;\n\n    if (kendo.ooxml && kendo.ooxml.Workbook) {\n        PivotExcelMixin.extend(PivotGrid.prototype);\n    }\n\n    if (kendo.PDFMixin) {\n        kendo.PDFMixin.extend(PivotGrid.prototype);\n\n        PivotGrid.fn._drawPDF = function() {\n            return this._drawPDFShadow({\n                width: this.wrapper.width()\n            }, {\n                avoidLinks: this.options.pdf.avoidLinks\n            });\n        };\n    }\n\n    if (kendo.PDFMixin) {\n        kendo.PDFMixin.extend(PivotGridV2.prototype);\n\n        PivotGridV2.fn._drawPDF = function() {\n            return this._drawPDFShadow({\n                width: this.wrapper.width()\n            }, {\n                avoidLinks: this.options.pdf.avoidLinks\n            });\n        };\n    }\n\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}