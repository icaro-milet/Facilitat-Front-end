{"version":3,"file":"kendo.scheduler.dayview.js","names":["__meta__","id","name","category","description","depends","hidden","$","undefined$1","kendo","window","ui","encode","htmlEncode","setTime","date","SchedulerView","outerWidth","_outerWidth","outerHeight","_outerHeight","extend","getDate","MS_PER_MINUTE","MS_PER_DAY","INVERSE_COLOR_CLASS","getMilliseconds","NS","DAY_VIEW_EVENT_TEMPLATE","template","start","end","title","format","replace","DAY_VIEW_ALL_DAY_EVENT_TEMPLATE","DATA_HEADER_TEMPLATE","isMobile","toString","ALLDAY_EVENT_WRAPPER_TEMPLATE","event","ariaLabel","attr","uid","resources","color","tail","middle","icon","isException","isRecurring","showDelete","messages","destroy","head","resizable","singleDay","EVENT_WRAPPER_TEMPLATE","toInvariantTime","staticDate","Date","isInDateRange","value","min","max","isInTimeRange","overlaps","addContinuousEvent","group","range","element","isAllDay","events","_continuousEvents","lastEvent","length","startDate","getTime","idx","splice","push","MultiDayView","init","options","that","this","fn","call","_workDays","workDays","dayIndex","workWeekStart","workWeekEnd","Math","abs","getWorkDays","_templates","_editable","calculateDateRange","_groups","_currentTime","_currentTimeMarkerUpdater","_updateCurrentTimeMarker","currentTime","currentTimeMarkers","currentContentMarkers","timesTableMarkerWidth","position","elementHtml","currentTimeMarker","useLocalTimezone","timezone","dataSource","schema","timezoneOffset","offset","convert","getTimezoneOffset","times","find","content","groupsCount","orientation","groups","firstTimesCell","first","lastTimesCell","last","_isRtl","left","groupIndex","currentGroup","utcCurrentTime","toUtcTime","ranges","timeSlotRanges","collection","slotByStartDate","timesTableMarker","eq","prependTo","markerTopPosition","round","innerRect","top","timesTableMarkerCss","right","addClass","CURRENT_TIME_MARKER_ARROW_CLASS","css","height","setUpdateTimer","markerOptions","updateInterval","_currentTimeUpdateTimer","setInterval","bind","_updateResizeHint","startTime","endTime","multiday","enforceAllDaySlot","isMultiDay","width","hint","_removeResizeHint","rangeIndex","startSlot","_isGroupedByDate","slotIdx","index","slot","_slots","offsetWidth","clientHeight","offsetTop","_createResizeHint","offsetLeft","_resizeHint","add","innerWidth","rect","outerRect","snap","bottom","container","appendTo","text","toLocalDate","_updateMoveHint","distance","duration","_removeMoveHint","_end","pop","eventHint","clientWidth","offsetHeight","_createEventElement","clone","inverseColor","_appendMoveHint","_moveHint","_slotByPosition","x","y","_isVerticallyGrouped","scrollTop","scrollLeft","ceil","daySlotByPosition","timeSlotByPosition","_groupCount","groupedResources","byDate","_groupOrientation","_columnCountForLevel","_rowCountForLevel","_columnOffsetForResource","_columnCountInResourceView","_timeSlotGroups","groupCount","columnCount","time","rowIndex","cellIndex","interval","_timeSlotInterval","verticalViews","tableRows","rowCount","floor","rowMultiplier","cellMultiplier","cells","children","timeIndex","_addTimeSlotGroup","cell","getTimeSlotCollection","currentDate","_dates","UTC","getFullYear","getMonth","addTimeSlot","_addDaySlotGroup","cellCount","addDaySlot","_daySlotGroups","getDaySlotCollection","view","_addResourceView","columnIndex","addTimeSlotCollection","addDays","allDaySlot","addDaySlotCollection","selectedDateFormat","selectedShortDateFormat","selectedMobileDateFormat","showWorkHours","today","minorTickCount","majorTick","majorTimeHeaderTemplate","minorTimeHeaderTemplate","groupHeaderTemplate","slotTemplate","allDaySlotTemplate","eventTemplate","allDayEventTemplate","dateHeaderTemplate","editable","workDayStart","workDayEnd","footer","command","allDay","showFullDay","showWorkDay","ongoingEvents","cssClass","enabled","settings","Template","templateSettings","_isMobile","_touchEditable","_mouseEditable","on","e","trigger","closest","preventDefault","create","parent","hasClass","pageX","pageY","resourceInfo","_resourceBySlot","eventInfo","endDate","update","threshold","support","mobileOS","android","_addUserEvents","UserEvents","filter","useClickAsTap","browser","edge","tap","_scrolling","target","location","_allDayUserEvents","_editUserEvents","eventElement","touch","initialTouch","is","_layout","dates","columns","rows","column","isToday","className","cellContent","_forTimeRange","middleRow","lastSlotRow","row","_createDateLayout","_createColumnsLayout","_createRowsLayout","toggleFullDay","isWorkDay","_footerItems","items","_defaultTools","todayMobile","fulldayMobile","fulldayDesktop","action","after","msStart","msMin","msMax","msMajorInterval","msInterval","startDay","html","majorTickDivider","_content","_renderRows","rowLevels","columnLevels","append","_virtualContent","isVerticalGroupped","dateID","levels","_recalculateLevels","appendRow","groupIdx","dateIndex","_addCellsToContent","rowIdx","_allDayVerticalGroupRow","result","dateGroupIndex","tmplDate","classes","_isWorkDay","day","getDay","i","_render","_startDate","_endDate","createLayout","_footer","refreshLayout","_isVirtualized","_tryRenderContent","allDayHeader","_allDayHeaderHeight","th","currentTarget","additioanlWidth","additionalHeight","datesHeader","nextDate","nextDay","previousDate","previousDay","clearInterval","off","inRange","selectionByElement","innerHeight","_timeSlotIndex","_slotIndex","_dateSlotIndex","slots","_positionAllDayEvent","slotRange","slotWidth","startIndex","endIndex","allDayEvents","collidingEvents","currentColumnCount","_headerColumnCount","rightOffset","eventHeight","addEvent","slotIndex","createRows","rowEvents","j","eventLength","_arrangeColumns","columnEvents","eventRightOffset","eventElements","slotEvents","tableEl","table","contentEl","columnWidth","createColumns","calculatedWidth","style","scrollWidth","_positionEvent","_startTime","_endTime","borderWidths","getComputedStyles","parseFloat","isOneDayEvent","resize","eventStartTime","_time","eventEndTime","eventStartDate","eventEndDate","eventResources","apply","data","ns","_formatEventAriaLabel","applyStylesFromKendoAttributes","angular","elements","dataItem","_isInTimeSlot","slotStartTime","slotEndTime","_date","_isInDateSlot","slotStart","firstSlot","slotEnd","lastSlot","_updateAllDayHeaderHeight","_height","allDaySlots","refresh","_renderEvents","allDayEventContainer","isMultiDayEvent","slotRanges","newStart","newEnd","dateRange","daySlotRanges","_inverseEventColor","rangeCount","occurrence","render","_cachedEvents","remove","Query","sort","field","dir","toArray","eventsByResource","_eventsByResource","eventsPerDate","map","grep","_ongoingEvents","parentValue","resource","item","itemParentValue","getter","dataParentValueField","itemIdx","_resourceValue","eventsFilteredByResource","operator","groupEqFilter","slice","level","columnLevel","rowLevel","clearSelection","removeAttr","removeClass","_updateDirection","selection","multiple","reverse","vertical","isDaySlot","endSlot","collectionIndex","backward","_changeViewPeriod","endMilliseconds","newDateStart","newDateEnd","verticalByDate","_timeSlotCollections","_getCollections","daySlotCollectionCount","_isInRange","DayView","WeekView","selectedDate","dayOfWeek","calendarInfo","firstDay","WorkWeekView","weekStart","indexOf","jQuery","kendo$1"],"sources":["kendo.scheduler.dayview.js"],"mappings":"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","sourcesContent":["import './kendo.scheduler.view.js';\nimport './kendo.icons.js';\n\nvar __meta__ = {\n    id: \"scheduler.dayview\",\n    name: \"Scheduler Day View\",\n    category: \"web\",\n    description: \"The Scheduler Day View\",\n    depends: [ \"scheduler.view\", \"icons\" ],\n    hidden: true\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        ui = kendo.ui,\n        encode = kendo.htmlEncode,\n        setTime = kendo.date.setTime,\n        SchedulerView = ui.SchedulerView,\n        outerWidth = kendo._outerWidth,\n        outerHeight = kendo._outerHeight,\n        extend = $.extend,\n        getDate = kendo.date.getDate,\n        MS_PER_MINUTE = kendo.date.MS_PER_MINUTE,\n        MS_PER_DAY = kendo.date.MS_PER_DAY,\n        CURRENT_TIME_MARKER_CLASS = \"k-current-time\",\n        CURRENT_TIME_MARKER_ARROW_CLASS = \"k-current-time-arrow\",\n        INVERSE_COLOR_CLASS = \"k-event-inverse\",\n        BORDER_SIZE_COEFF = 0.8666,\n        getMilliseconds = kendo.date.getMilliseconds,\n        NS = \".kendoMultiDayView\";\n\n    var DAY_VIEW_EVENT_TEMPLATE = kendo.template(({ start, end, title }) => `<div title=\"(${kendo.format(\"{0:t} - {1:t}\", start, end)}): ${title.replace(/\"/g,\"&#34;\")}\">` +\n                    `<div class=\"k-event-template k-event-time\">${encode(kendo.format(\"{0:t} - {1:t}\", start, end))}</div>` +\n                    `<div class=\"k-event-template\">${title}</div>` +\n                '</div>'),\n\n        DAY_VIEW_ALL_DAY_EVENT_TEMPLATE = kendo.template(({ start, title }) => `<div title=\"(${kendo.format(\"{0:t}\", start)}): ${title.replace(/\"/g,\"&#34;\")}\">` +\n                    `<div class=\"k-event-template\">${title}</div>` +\n                '</div>'),\n\n        DATA_HEADER_TEMPLATE = kendo.template(({ isMobile, date }) => `<span class='k-link k-nav-day'>${isMobile ? kendo.toString(date,'ddd')[0] : kendo.toString(date,'ddd M/dd')}</span>`),\n\n        ALLDAY_EVENT_WRAPPER_TEMPLATE = (event) => `<div role=\"button\" aria-label=\"${encode(event.ariaLabel)}\" ${kendo.attr('uid')}=\"${event.uid}\"` +\n                `${(event.resources[0] ? `${kendo.attr(\"style-background-color\")}=\"${event.resources[0].color}\" ${kendo.attr(\"style-border-color\")}=\"${event.resources[0].color}\"` : '')} class=\"k-event\">` +\n                '<span class=\"k-event-actions\">' +\n                    (event.tail || event.middle ? kendo.ui.icon(\"caret-alt-left\") : '') +\n                    (event.isException() ? kendo.ui.icon(\"arrows-no-repeat\") : (event.isRecurring() ? kendo.ui.icon(\"arrow-rotate-cw\") : '') ) +\n                '</span>' +\n                kendo.template(event.template)(event) +\n                '<span class=\"k-event-actions\">' +\n                    (event.showDelete ? `<a href=\"#\" class=\"k-link k-event-delete\" title=\"${event.messages.destroy}\" aria-label=\"${event.messages.destroy}\">${kendo.ui.icon(\"x\")}</a>` : '') +\n                    (event.head || event.middle ? kendo.ui.icon(\"caret-alt-right\") : '') +\n                '</span>' +\n                (event.resizable && !event.singleDay && !event.tail && !event.middle ? '<span class=\"k-resize-handle k-resize-w\"></span>' : '') +\n                (event.resizable && !event.singleDay && !event.head && !event.middle ? '<span class=\"k-resize-handle k-resize-e\"></span>' : '') +\n            '</div>',\n\n        EVENT_WRAPPER_TEMPLATE = (event) => `<div role=\"button\" aria-label=\"${encode(event.ariaLabel)}\" ${kendo.attr('uid')}=\"${event.uid}\"` +\n                `${(event.resources[0] ? `${kendo.attr(\"style-background-color\")}=\"${event.resources[0].color}\" ${kendo.attr(\"style-border-color\")}=\"${event.resources[0].color}\"` : '')} class=\"k-event\">` +\n                 '<span class=\"k-event-actions\">' +\n                    (event.isException() ? kendo.ui.icon(\"arrows-no-repeat\") : (event.isRecurring() ? kendo.ui.icon(\"arrow-rotate-cw\") : '') ) +\n                '</span>' +\n                kendo.template(event.template)(event) +\n                '<span class=\"k-event-actions\">' +\n                    (event.showDelete ? `<a href=\"#\" class=\"k-link k-event-delete\" title=\"${event.messages.destroy}\" aria-label=\"${event.messages.destroy}\">${kendo.ui.icon(\"x\")}</a>` : '') +\n                '</span>' +\n                '<span class=\"k-event-top-actions\">' +\n                    (event.tail || event.middle ? kendo.ui.icon(\"caret-alt-up\") : '') +\n                '</span>' +\n                '<span class=\"k-event-bottom-actions\">' +\n                    (event.head || event.middle ? kendo.ui.icon(\"caret-alt-down\") : '') +\n                '</span>' +\n                (event.resizable && !event.tail && !event.middle ? '<span class=\"k-resize-handle k-resize-n\"></span>' : '') +\n                (event.resizable && !event.head && !event.middle ? '<span class=\"k-resize-handle k-resize-s\"></span>' : '') +\n            '</div>';\n\n    function toInvariantTime(date) {\n        var staticDate = new Date(1980, 1, 1, 0, 0, 0);\n        setTime(staticDate, getMilliseconds(date));\n        return staticDate;\n    }\n\n    function isInDateRange(value, min, max) {\n        return value >= min && value <= max;\n    }\n\n    function isInTimeRange(value, min, max, overlaps) {\n        overlaps = overlaps ? value <= max : value < max;\n        return value > min && overlaps;\n    }\n\n    function addContinuousEvent(group, range, element, isAllDay) {\n        var events = group._continuousEvents;\n        var lastEvent = events[events.length - 1];\n        var startDate = getDate(range.start.startDate()).getTime();\n\n        //this handles all day event which is over multiple slots but starts\n        //after one of the time events\n        if (isAllDay && lastEvent &&\n            getDate(lastEvent.start.startDate()).getTime() == startDate) {\n\n                var idx = events.length - 1;\n                for ( ; idx > -1; idx --) {\n                    if (events[idx].isAllDay ||\n                        getDate(events[idx].start.startDate()).getTime() < startDate) {\n                            break;\n                        }\n                }\n\n                events.splice(idx + 1, 0, {\n                    element: element,\n                    isAllDay: true,\n                    uid: element.attr(kendo.attr(\"uid\")),\n                    start: range.start,\n                    end: range.end\n                });\n            } else {\n                events.push({\n                    element: element,\n                    isAllDay: isAllDay,\n                    uid: element.attr(kendo.attr(\"uid\")),\n                    start: range.start,\n                    end: range.end\n                });\n            }\n    }\n\n    function getWorkDays(options) {\n        if (options.workDays && options.workDays.length) {\n            return options.workDays;\n        }\n\n        var workDays = [];\n        var dayIndex = options.workWeekStart % 7;\n        var workWeekEnd = Math.abs(options.workWeekEnd % 7);\n\n        workDays.push(dayIndex);\n\n        while (workWeekEnd != dayIndex) {\n            if (dayIndex > 6 ) {\n                dayIndex -= 7;\n            } else {\n                dayIndex++;\n            }\n            workDays.push(dayIndex);\n        }\n        return workDays;\n    }\n\n    var MultiDayView = SchedulerView.extend({\n        init: function(element, options) {\n            var that = this;\n\n            SchedulerView.fn.init.call(that, element, options);\n\n            that.title = that.options.title || that.options.name;\n\n            that._workDays = getWorkDays(that.options);\n\n            that._templates();\n\n            that._editable();\n\n            that.calculateDateRange();\n\n            that._groups();\n\n            that._currentTime(true);\n        },\n\n        _currentTimeMarkerUpdater: function() {\n            this._updateCurrentTimeMarker(new Date());\n        },\n\n        _updateCurrentTimeMarker: function(currentTime) {\n            var options = this.options,\n                currentTimeMarkers, currentContentMarkers, timesTableMarkerWidth, position,\n                elementHtml = \"<div class='\" + CURRENT_TIME_MARKER_CLASS + \"'></div>\";\n\n            if (options.currentTimeMarker.useLocalTimezone === false) {\n                var timezone = options.dataSource.options.schema.timezone;\n\n                if (options.dataSource && timezone) {\n                   var timezoneOffset = kendo.timezone.offset(currentTime, timezone);\n                   currentTime = kendo.timezone.convert(currentTime, currentTime.getTimezoneOffset(), timezoneOffset);\n                }\n            }\n\n            currentTimeMarkers = this.times.find(\".\" + CURRENT_TIME_MARKER_CLASS);\n            currentContentMarkers = this.content.find(\".\" + CURRENT_TIME_MARKER_CLASS);\n\n            var groupsCount = !options.group || options.group.orientation == \"horizontal\" ? 1 : this.groups.length;\n            var firstTimesCell = this.times.find(\"tr\").first().find(\"th\").first();\n            var lastTimesCell = this.times.find(\"tr\").first().find(\"th\").last();\n\n            if (firstTimesCell.length > 0 && lastTimesCell.length > 0) {\n                if (this._isRtl) {\n                    position = firstTimesCell.position().left + outerHeight(firstTimesCell) - outerHeight(lastTimesCell);\n                } else {\n                    position = lastTimesCell.position().left;\n                }\n            }\n\n            for (var groupIndex = 0; groupIndex < groupsCount; groupIndex++) {\n                var currentGroup = this.groups[groupIndex];\n\n                if (!currentGroup) {\n                    return;\n                }\n\n                var utcCurrentTime = kendo.date.toUtcTime(currentTime);\n                var ranges = currentGroup.timeSlotRanges(utcCurrentTime, utcCurrentTime + 1);\n\n                if (ranges.length === 0) {\n                    return;\n                }\n\n                var collection = ranges[0].collection;\n                var slotElement = collection.slotByStartDate(currentTime);\n\n                if (slotElement) {\n                    var timesTableMarker = currentTimeMarkers[groupIndex] ? currentTimeMarkers.eq(groupIndex) : $(elementHtml).prependTo(this.times);\n                    var markerTopPosition = Math.round(ranges[0].innerRect(currentTime, new Date(currentTime.getTime() + 1), false).top);\n\n                    var timesTableMarkerCss = {};\n\n                    if (this._isRtl) {\n                        timesTableMarkerCss.right = position;\n                        timesTableMarker.addClass(CURRENT_TIME_MARKER_ARROW_CLASS + \"-left\");\n                    } else {\n                        timesTableMarkerCss.left = position;\n                        timesTableMarker.addClass(CURRENT_TIME_MARKER_ARROW_CLASS + \"-right\");\n                    }\n\n                    if (!timesTableMarkerWidth) {\n                        timesTableMarkerWidth = (outerWidth(timesTableMarker) * BORDER_SIZE_COEFF / 2);\n                    }\n\n                    timesTableMarkerCss.top = markerTopPosition - timesTableMarkerWidth;\n\n                    timesTableMarker.css(timesTableMarkerCss);\n\n                    var contentMarker = currentContentMarkers[groupIndex] ? currentContentMarkers.eq(groupIndex) : $(elementHtml).prependTo(this.content);\n\n                    contentMarker.css({\n                        top: markerTopPosition,\n                        height: \"1px\",\n                        right: 0,\n                        left: 0\n                    });\n                }\n            }\n        },\n\n        _currentTime: function(setUpdateTimer) {\n            var that = this;\n            var markerOptions = that.options.currentTimeMarker;\n\n            if (markerOptions !== false && markerOptions.updateInterval !== undefined$1) {\n                that._currentTimeMarkerUpdater();\n\n                if (setUpdateTimer) {\n                    that._currentTimeUpdateTimer = setInterval(this._currentTimeMarkerUpdater.bind(that), markerOptions.updateInterval);\n                }\n            }\n        },\n\n        _updateResizeHint: function(event, groupIndex, startTime, endTime) {\n            var multiday;\n\n            if (this.options.enforceAllDaySlot) {\n                multiday = event.isMultiDay();\n            } else {\n                multiday = event.isAllDay;\n            }\n\n            var group = this.groups[groupIndex];\n\n            var ranges = group.ranges(startTime, endTime, multiday, event.isAllDay);\n            var width, height, top, hint;\n\n            this._removeResizeHint();\n\n            for (var rangeIndex = 0; rangeIndex < ranges.length; rangeIndex++) {\n                var range = ranges[rangeIndex];\n                var start = range.startSlot();\n\n                if (this._isGroupedByDate() && multiday) {\n                    for (var slotIdx = start.index; slotIdx <= range.end.index; slotIdx++) {\n                        var slot = range.collection._slots[slotIdx];\n                        width = slot.offsetWidth;\n                        height = slot.clientHeight;\n                        top = slot.offsetTop;\n\n                        hint = SchedulerView.fn._createResizeHint.call(this,\n                            slot.offsetLeft,\n                            top,\n                            width,\n                            height\n                        );\n\n                        this._resizeHint = this._resizeHint.add(hint);\n                    }\n                } else {\n                    width = start.offsetWidth;\n                    height = start.clientHeight;\n                    top = start.offsetTop;\n\n                    if (multiday) {\n                        width = range.innerWidth();\n                    } else {\n                        var rect = range.outerRect(startTime, endTime, this.options.snap);\n                        top = rect.top;\n                        height = rect.bottom - rect.top;\n                    }\n\n                    hint = SchedulerView.fn._createResizeHint.call(this,\n                        start.offsetLeft,\n                        top,\n                        width,\n                        height\n                    );\n\n                   this._resizeHint = this._resizeHint.add(hint);\n                }\n            }\n\n            var format = \"t\";\n            var container = this.content;\n\n            if (multiday) {\n                format = \"M/dd\";\n                container = this.element.find(\".k-scheduler-header-wrap:has(.k-scheduler-header-all-day) > div\");\n                if (!container.length) {\n                    container = this.content;\n                }\n            }\n\n            this._resizeHint.appendTo(container);\n\n            this._resizeHint.find(\".k-label-top,.k-label-bottom\").text(\"\");\n\n            this._resizeHint.first().addClass(\"k-first\").find(\".k-label-top\").text(kendo.toString(kendo.timezone.toLocalDate(startTime), format));\n\n            this._resizeHint.last().addClass(\"k-last\").find(\".k-label-bottom\").text(kendo.toString(kendo.timezone.toLocalDate(endTime), format));\n        },\n\n        _updateMoveHint: function(event, groupIndex, distance) {\n            var multiday;\n\n            if (this.options.enforceAllDaySlot) {\n                multiday = event.isMultiDay();\n            } else {\n                multiday = event.isAllDay;\n            }\n\n            var group = this.groups[groupIndex];\n\n            var start = kendo.date.toUtcTime(event.start) + distance;\n\n            var end = start + event.duration();\n\n            var ranges = group.ranges(start, end, multiday, event.isAllDay);\n\n            start = kendo.timezone.toLocalDate(start);\n\n            end = kendo.timezone.toLocalDate(end);\n\n            this._removeMoveHint(event.uid);\n\n            if (!multiday &&\n                getMilliseconds(end) < getMilliseconds(this.startTime()) &&\n                (end < this._end().getTime()) &&\n                getMilliseconds(end) !== 0 &&\n                ranges.length > 1) {\n                    ranges.pop();\n            }\n\n            var eventHint = $();\n\n            for (var rangeIndex = 0; rangeIndex < ranges.length; rangeIndex++) {\n                var range = ranges[rangeIndex];\n                var startSlot = range.start;\n                var hint;\n                var css = {\n                    left: startSlot.offsetLeft + 2,\n                    top: startSlot.offsetTop\n                };\n\n                if (this._isGroupedByDate() && multiday) {\n                    for (var slotIdx = startSlot.index; slotIdx <= range.end.index; slotIdx++) {\n                        var slot = range.collection._slots[slotIdx];\n\n                        css.left = this._isRtl ? slot.clientWidth * 0.1 + slot.offsetLeft + 2 : slot.offsetLeft + 2;\n                        css.height = slot.offsetHeight;\n                        css.width = slot.clientWidth * 0.9 - 2;\n\n                        hint = this._createEventElement(event.clone({ start: start, end: end }), !multiday);\n\n                        if (event.inverseColor) {\n                            hint.addClass(INVERSE_COLOR_CLASS);\n                        }\n\n                        this._appendMoveHint(hint, css);\n                        eventHint = eventHint.add(hint);\n                    }\n                } else {\n                    if (this._isRtl) {\n                       css.left = startSlot.clientWidth * 0.1 + startSlot.offsetLeft + 2;\n                    }\n\n                    if (multiday) {\n                        css.width = range.innerWidth() - 2;\n                    } else {\n                        var rect = range.outerRect(start, end, this.options.snap);\n                        css.top = rect.top;\n                        css.height = rect.bottom - rect.top;\n                        css.width = startSlot.clientWidth * 0.9 - 2;\n                    }\n\n                    hint = this._createEventElement(event.clone({ start: start, end: end }), !multiday);\n\n                    if (event.inverseColor) {\n                        hint.addClass(INVERSE_COLOR_CLASS);\n                    }\n\n                    this._appendMoveHint(hint, css);\n                    eventHint = eventHint.add(hint);\n                }\n            }\n\n            var content = this.content;\n\n            if (multiday) {\n                content = this.element.find(\".k-scheduler-header-wrap:has(.k-scheduler-header-all-day) > div\");\n                if (!content.length) {\n                    content = this.content;\n                }\n            }\n\n            eventHint.appendTo(content);\n        },\n\n        _appendMoveHint: function(hint, css) {\n            hint.addClass(\"k-event-drag-hint\");\n\n            hint.css(css);\n\n            this._moveHint = this._moveHint.add(hint);\n       },\n\n       _slotByPosition: function(x, y) {\n           var slot, offset;\n\n           if (this._isVerticallyGrouped()) {\n               offset = this.content.offset();\n               y += this.content[0].scrollTop;\n               x += this.content[0].scrollLeft;\n           } else {\n               offset = this.element.find(\".k-scheduler-header-wrap:has(.k-scheduler-header-all-day)\").find(\">div\").offset();\n           }\n\n           if (offset) {\n               x -= offset.left;\n               y -= offset.top;\n           }\n\n           x = Math.ceil(x);\n           y = Math.ceil(y);\n\n           var group;\n           var groupIndex;\n\n           for (groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n                group = this.groups[groupIndex];\n\n                slot = group.daySlotByPosition(x, y, this._isGroupedByDate());\n\n                if (slot) {\n                    return slot;\n                }\n           }\n\n           if (offset) {\n               x += offset.left;\n               y += offset.top;\n           }\n\n           offset = this.content.offset();\n\n           x -= offset.left;\n           y -= offset.top;\n\n           if (!this._isVerticallyGrouped()) {\n               y += this.content[0].scrollTop;\n               x += this.content[0].scrollLeft;\n           }\n\n           x = Math.ceil(x);\n           y = Math.ceil(y);\n\n           for (groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n                group = this.groups[groupIndex];\n\n                slot = group.timeSlotByPosition(x, y);\n\n                if (slot) {\n                    return slot;\n                }\n           }\n\n           return null;\n       },\n\n       _groupCount: function() {\n            var resources = this.groupedResources;\n            var byDate = this._isGroupedByDate();\n\n            if (resources.length) {\n                if (this._groupOrientation() === \"vertical\") {\n                    if (byDate) {\n                        return this._columnCountForLevel(resources.length - 1);\n                    } else {\n                        return this._rowCountForLevel(resources.length - 1);\n                    }\n                } else {\n                    if (byDate) {\n                        return this._columnCountForLevel(resources.length) / this._columnCountForLevel(0);\n                    } else {\n                          return this._columnCountForLevel(resources.length) / this._columnOffsetForResource(resources.length);\n                    }\n                }\n            }\n            return 1;\n        },\n\n        _columnCountInResourceView: function() {\n            var resources = this.groupedResources;\n            var byDate = this._isGroupedByDate();\n\n            if (!resources.length || this._isVerticallyGrouped()) {\n                if (byDate) {\n                     return this._rowCountForLevel(0);\n                } else {\n                     return this._columnCountForLevel(0);\n                }\n            }\n\n            if (byDate) {\n                return this._columnCountForLevel(0);\n            } else {\n                return this._columnOffsetForResource(resources.length);\n            }\n        },\n\n        _timeSlotGroups: function(groupCount, columnCount) {\n            var interval = this._timeSlotInterval();\n            var verticalViews = groupCount;\n            var byDate = this._isGroupedByDate();\n            var tableRows = this.content.find(\"tr:not(.k-scheduler-header-all-day)\");\n            var group, time, rowIndex, cellIndex;\n            var rowCount = tableRows.length;\n\n            if (this._isVerticallyGrouped()) {\n                if (byDate) {\n                    verticalViews = columnCount;\n                }\n                rowCount = Math.floor(rowCount / verticalViews);\n            }\n\n            for (var groupIndex = 0; groupIndex < verticalViews; groupIndex++) {\n                var rowMultiplier = 0;\n                var cellMultiplier = 0;\n\n                if (this._isVerticallyGrouped()) {\n                    rowMultiplier = groupIndex;\n                } else {\n                    cellMultiplier = groupIndex;\n                }\n\n                rowIndex = rowMultiplier * rowCount;\n\n              while (rowIndex < (rowMultiplier + 1) * rowCount) {\n                    var cells = tableRows[rowIndex].children;\n\n                    if (rowIndex % rowCount === 0) {\n                        time = getMilliseconds(new Date(+this.startTime()));\n                    }\n\n                    var timeIndex = 0;\n                    if (byDate) {\n                        if (this._isVerticallyGrouped()) {\n                            for (cellIndex = 0; cellIndex < groupCount; cellIndex++) {\n                                group = this.groups[cellIndex];\n                                this._addTimeSlotGroup(group, cells, cellIndex, time, interval, groupIndex);\n                            }\n                        } else {\n                            group = this.groups[groupIndex];\n                            for (cellIndex = cellMultiplier; cellIndex < groupCount * columnCount; cellIndex = cellIndex + groupCount) {\n                                this._addTimeSlotGroup(group, cells, cellIndex, time, interval, timeIndex);\n                                timeIndex++;\n                            }\n                        }\n                    } else {\n                        group = this.groups[groupIndex];\n                        for (cellIndex = cellMultiplier * columnCount; cellIndex < (cellMultiplier + 1) * columnCount; cellIndex++) {\n\n                            this._addTimeSlotGroup(group, cells, cellIndex, time, interval, timeIndex);\n                             timeIndex++;\n                        }\n                    }\n\n                    time += interval;\n                    rowIndex ++;\n                }\n            }\n        },\n\n        _addTimeSlotGroup: function(group, cells, cellIndex, time, interval, timeIndex) {\n              var cell = cells[cellIndex];\n              var collection = group.getTimeSlotCollection(timeIndex);\n              var currentDate = this._dates[timeIndex];\n              if (!currentDate || !cell) {\n                  return;\n              }\n              var currentTime = Date.UTC(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate());\n              var start = currentTime + time;\n              var end = start + interval;\n\n              collection.addTimeSlot(cell, start, end);\n        },\n\n         _addDaySlotGroup: function(collection, cells, cellIndex, columnCount, cellCount) {\n                var cell = cells[cellIndex];\n                var start = this._dates[cellCount];\n                if (!start) {\n                    return;\n                }\n                var currentTime = Date.UTC(start.getFullYear(), start.getMonth(), start.getDate());\n\n                collection.addDaySlot(cell, currentTime, currentTime + kendo.date.MS_PER_DAY);\n        },\n\n        _daySlotGroups: function(groupCount, columnCount) {\n            var tableRows, cellIndex;\n            var verticalViews = groupCount;\n            var byDate = this._isGroupedByDate();\n\n            if (this._isVerticallyGrouped()) {\n                if (byDate) {\n                    verticalViews = columnCount;\n                }\n                tableRows = this.element.find(\".k-scheduler-header-all-day\");\n            } else {\n                tableRows = this.element.find(\".k-scheduler-header-all-day tr\");\n            }\n\n            for (var groupIndex = 0; groupIndex < verticalViews; groupIndex++) {\n                var rowMultiplier = 0;\n                var group, collection;\n\n                if (this._isVerticallyGrouped()) {\n                    rowMultiplier = groupIndex;\n                }\n\n                var cells = tableRows[rowMultiplier].children;\n                var cellMultiplier = 0;\n\n                if (!this._isVerticallyGrouped()) {\n                    cellMultiplier = groupIndex;\n                }\n\n                var cellCount = 0;\n                if (byDate) {\n                    if (this._isVerticallyGrouped()) {\n                        for (cellIndex = 0; cellIndex < groupCount; cellIndex++) {\n                            group = this.groups[cellIndex];\n                            collection = group.getDaySlotCollection(0);\n                            this._addDaySlotGroup(collection, cells, cellIndex, columnCount, groupIndex);\n                        }\n                    } else {\n                        group = this.groups[groupIndex];\n                        collection = group.getDaySlotCollection(0);\n                        for (cellIndex = cellMultiplier; cellIndex < groupCount * columnCount; cellIndex = cellIndex + groupCount) {\n                            this._addDaySlotGroup(collection, cells, cellIndex, columnCount, cellCount);\n                            cellCount++;\n                        }\n                    }\n                } else {\n                    group = this.groups[groupIndex];\n                    collection = group.getDaySlotCollection(0);\n                    for (cellIndex = cellMultiplier * columnCount; cellIndex < (cellMultiplier + 1) * columnCount; cellIndex++) {\n\n                        this._addDaySlotGroup(collection, cells, cellIndex, columnCount, cellCount);\n                        cellCount++;\n                    }\n                }\n            }\n        },\n\n        _groups: function() {\n            var groupCount = this._groupCount();\n            var columnCount = this._columnCountInResourceView();\n\n            this.groups = [];\n\n            for (var idx = 0; idx < groupCount; idx++) {\n                var view = this._addResourceView(idx);\n\n                for (var columnIndex = 0; columnIndex < columnCount; columnIndex++) {\n                    if (this._dates[columnIndex]) {\n                        view.addTimeSlotCollection(this._dates[columnIndex], kendo.date.addDays(this._dates[columnIndex], 1));\n                    }\n                }\n\n                if (this.options.allDaySlot) {\n                    view.addDaySlotCollection(this._dates[0], kendo.date.addDays(this._dates[this._dates.length - 1], 1));\n                }\n            }\n\n            this._timeSlotGroups(groupCount, columnCount);\n\n            if (this.options.allDaySlot) {\n                this._daySlotGroups(groupCount, columnCount);\n            }\n        },\n\n        options: {\n            name: \"MultiDayView\",\n            selectedDateFormat: \"{0:D}\",\n            selectedShortDateFormat: \"{0:d}\",\n            selectedMobileDateFormat: \"{0:MMM} {0:dd} - {1:dd}\",\n            allDaySlot: true,\n            showWorkHours: false,\n            title: \"\",\n            startTime: kendo.date.today(),\n            endTime: kendo.date.today(),\n            minorTickCount: 2,\n            majorTick: 60,\n            majorTimeHeaderTemplate: ({ date }) => `<span>${kendo.toString(date, 't')}</span>`,\n            minorTimeHeaderTemplate: () => \"&#8203;\",\n            groupHeaderTemplate: ({ text }) => text,\n            slotTemplate: () => \"&nbsp;\",\n            allDaySlotTemplate: () => \"&nbsp;\",\n            eventTemplate: DAY_VIEW_EVENT_TEMPLATE,\n            allDayEventTemplate: DAY_VIEW_ALL_DAY_EVENT_TEMPLATE,\n            dateHeaderTemplate: DATA_HEADER_TEMPLATE,\n            editable: true,\n            workDayStart: new Date(1980, 1, 1, 8, 0, 0),\n            workDayEnd: new Date(1980, 1, 1, 17, 0, 0),\n            workWeekStart: 1,\n            workWeekEnd: 5,\n            footer: {\n                command: \"workDay\"\n            },\n            messages: {\n                allDay: \"all day\",\n                showFullDay: \"Show full day\",\n                showWorkDay: \"Show business hours\"\n            },\n            currentTimeMarker: {\n                 updateInterval: 10000,\n                 useLocalTimezone: true\n            },\n            ongoingEvents: {\n                cssClass: null,\n                enabled: true,\n                updateInterval: 60000\n            },\n            // a hidden option that provides us a fallback to the previous behaviour\n            // e.g. all events of 24 hours or more will be rendered in the allDaySlot\n            enforceAllDaySlot: false\n        },\n\n        events: [\"remove\", \"add\", \"edit\"],\n\n        _templates: function() {\n            var options = this.options,\n                settings = extend({}, kendo.Template, options.templateSettings);\n\n            this.allDayEventTemplate = kendo.template(ALLDAY_EVENT_WRAPPER_TEMPLATE);\n            this.eventTemplate = kendo.template(EVENT_WRAPPER_TEMPLATE);\n\n            this.majorTimeHeaderTemplate = kendo.template(options.majorTimeHeaderTemplate, settings);\n            this.minorTimeHeaderTemplate = kendo.template(options.minorTimeHeaderTemplate, settings);\n            this.dateHeaderTemplate = kendo.template(options.dateHeaderTemplate, settings);\n            this.slotTemplate = kendo.template(options.slotTemplate, settings);\n            this.allDaySlotTemplate = kendo.template(options.allDaySlotTemplate, settings);\n            this.groupHeaderTemplate = kendo.template(options.groupHeaderTemplate, settings);\n        },\n\n        _editable: function() {\n            if (this.options.editable) {\n                if (this._isMobile()) {\n                    this._touchEditable();\n                } else {\n                    this._mouseEditable();\n                }\n            }\n        },\n\n        _mouseEditable: function() {\n            var that = this;\n            that.element.on(\"click\" + NS, \".k-event a:has(.k-i-x),.k-event a:has(.k-svg-i-x)\", function(e) {\n                that.trigger(\"remove\", { uid: $(this).closest(\".k-event\").attr(kendo.attr(\"uid\")) });\n                e.preventDefault();\n            });\n\n            if (that.options.editable.create !== false) {\n                that.element.on(\"dblclick\" + NS, \".k-scheduler-content > table td\", function(e) {\n                    if (!$(this).parent().hasClass(\"k-scheduler-header-all-day\")) {\n                        var slot = that._slotByPosition(e.pageX, e.pageY);\n\n                        if (slot) {\n                            var resourceInfo = that._resourceBySlot(slot);\n                            that.trigger(\"add\", { eventInfo: extend({ start: slot.startDate(), end: slot.endDate() }, resourceInfo) });\n                        }\n\n                        e.preventDefault();\n                    }\n                }).on(\"dblclick\" + NS, \".k-scheduler-header-all-day td\", function(e) {\n                    var slot = that._slotByPosition(e.pageX, e.pageY);\n                    if (slot) {\n                        var resourceInfo = that._resourceBySlot(slot);\n                        that.trigger(\"add\", { eventInfo: extend({}, { isAllDay: true, start: kendo.date.getDate(slot.startDate()), end: kendo.date.getDate(slot.startDate()) }, resourceInfo) });\n                    }\n                    e.preventDefault();\n                });\n            }\n\n            if (that.options.editable.update !== false) {\n                that.element.on(\"dblclick\" + NS, \".k-event\", function(e) {\n                    that.trigger(\"edit\", { uid: $(this).closest(\".k-event\").attr(kendo.attr(\"uid\")) });\n                    e.preventDefault();\n                });\n            }\n        },\n\n        _touchEditable: function() {\n            var that = this;\n            var threshold = 0;\n\n            if (kendo.support.mobileOS.android) {\n                threshold = 5;\n            }\n\n            if (that.options.editable.create !== false) {\n                that._addUserEvents = new kendo.UserEvents(that.element, {\n                    threshold: threshold,\n                    filter: \".k-scheduler-content td\",\n                    useClickAsTap: !kendo.support.browser.edge,\n                    tap: function(e) {\n                        if (that._scrolling) {\n                            return;\n                        }\n                        if (!$(e.target).parent().hasClass(\"k-scheduler-header-all-day\")) {\n                            var x = e.x.location !== undefined$1 ? e.x.location : e.x;\n                            var y = e.y.location !== undefined$1 ? e.y.location : e.y;\n                            var slot = that._slotByPosition(x, y);\n\n                            if (slot) {\n                                var resourceInfo = that._resourceBySlot(slot);\n                                that.trigger(\"add\", { eventInfo: extend({ start: slot.startDate(), end: slot.endDate() }, resourceInfo) });\n                            }\n\n                            e.preventDefault();\n                        }\n                    }\n                });\n\n                that._allDayUserEvents = new kendo.UserEvents(that.element, {\n                    threshold: threshold,\n                    useClickAsTap: !kendo.support.browser.edge,\n                    filter: \".k-scheduler-header-all-day td\",\n                    tap: function(e) {\n                        if (that._scrolling) {\n                            return;\n                        }\n                        var x = e.x.location !== undefined$1 ? e.x.location : e.x;\n                        var y = e.y.location !== undefined$1 ? e.y.location : e.y;\n                        var slot = that._slotByPosition(x, y);\n\n                        if (slot) {\n                            var resourceInfo = that._resourceBySlot(slot);\n                            that.trigger(\"add\", { eventInfo: extend({}, { isAllDay: true, start: kendo.date.getDate(slot.startDate()), end: kendo.date.getDate(slot.startDate()) }, resourceInfo) });\n                        }\n\n                        e.preventDefault();\n                    }\n                });\n            }\n\n            if (that.options.editable.update !== false) {\n                that._editUserEvents = new kendo.UserEvents(that.element, {\n                    threshold: threshold,\n                    useClickAsTap: !kendo.support.browser.edge,\n                    filter: \".k-event\",\n                    tap: function(e) {\n                        if (that._scrolling) {\n                            return;\n                        }\n                        var eventElement = $(e.target).closest(\".k-event\");\n                        var touchElement = $(e.touch.initialTouch);\n\n                        if (touchElement.is(\".k-i-x,.k-svg-i-x\")) {\n                            that.trigger(\"remove\", { uid: eventElement.attr(kendo.attr(\"uid\")) });\n                        } else if (!eventElement.hasClass(\"k-event-active\")) {\n                            that.trigger(\"edit\", { uid: eventElement.attr(kendo.attr(\"uid\")) });\n                        }\n\n                        e.preventDefault();\n                    }\n                });\n            }\n        },\n\n        _layout: function(dates) {\n            var columns = [];\n            var rows = [];\n            var options = this.options;\n            var that = this;\n            var byDate = that._isGroupedByDate();\n\n            for (var idx = 0; idx < dates.length; idx++) {\n                var column = {};\n\n                column.text = that.dateHeaderTemplate({ date: dates[idx], isMobile: that._isMobile() });\n\n                if (kendo.date.isToday(dates[idx])) {\n                    column.className = \"k-today\";\n                }\n\n                columns.push(column);\n            }\n\n            var resources = this.groupedResources;\n\n            if (options.allDaySlot) {\n                rows.push({\n                    text: options.messages.allDay, allDay: true,\n                    cellContent: function(idx) {\n                        var groupIndex = idx;\n\n                        idx = resources.length && that._groupOrientation() !== \"vertical\" ? idx % dates.length : idx;\n\n                        return that.allDaySlotTemplate({ date: dates[idx], resources: function() {\n                                return that._resourceBySlot({ groupIndex: groupIndex });\n                            }\n                        });\n                    }\n                });\n            }\n\n            this._forTimeRange(this.startTime(), this.endTime(), function(date, majorTick, middleRow, lastSlotRow) {\n                var template = majorTick ? that.majorTimeHeaderTemplate : that.minorTimeHeaderTemplate;\n\n                var row = {\n                    text: template({ date: date }),\n                    className: lastSlotRow ? \"k-slot-cell\" : \"\"\n                };\n\n                rows.push(row);\n            });\n\n\n            if (resources.length) {\n                if (this._groupOrientation() === \"vertical\") {\n                    if (byDate) {\n                        rows = this._createDateLayout(columns, rows);\n                        columns = this._createColumnsLayout(resources, null, this.groupHeaderTemplate);\n                    } else {\n                        rows = this._createRowsLayout(resources, rows, this.groupHeaderTemplate);\n                    }\n                } else {\n                      if (byDate) {\n                         columns = this._createColumnsLayout(resources, columns, this.groupHeaderTemplate, columns);\n                      } else {\n                         columns = this._createColumnsLayout(resources, columns, this.groupHeaderTemplate);\n                      }\n                }\n            }\n\n            return {\n                columns: columns,\n                rows: rows\n            };\n        },\n\n        toggleFullDay: function() {\n            var options = this.options;\n\n            this.trigger(\"navigate\", { view: this.name || options.name, date: options.date, isWorkDay: !options.showWorkHours });\n        },\n\n        _footerItems: function() {\n            var that = this,\n                items = [],\n                options = this.options,\n                command = options.footer.command;\n\n            if (that._isMobile()) {\n                items.push(that._defaultTools.todayMobile);\n            }\n\n            if (command && command === \"workDay\") {\n                if (that._isMobile()) {\n                    items.push(that._defaultTools.fulldayMobile);\n                } else {\n                    items.push(that._defaultTools.fulldayDesktop);\n                }\n            }\n\n            return items;\n        },\n\n        _forTimeRange: function(min, max, action, after) {\n            min = toInvariantTime(min); //convert the date to 1/2/1980 and sets the time\n            max = toInvariantTime(max);\n\n            var that = this,\n                msMin = getMilliseconds(min),\n                msMax = getMilliseconds(max),\n                minorTickCount = that.options.minorTickCount,\n                msMajorInterval = that.options.majorTick * MS_PER_MINUTE,\n                msInterval = msMajorInterval / minorTickCount || 1,\n                start = new Date(+min),\n                startDay = start.getDate(),\n                msStart,\n                idx = 0, length,\n                html = \"\";\n\n            length = MS_PER_DAY / msInterval;\n\n            if (msMin != msMax) {\n                if (msMin > msMax) {\n                    msMax += MS_PER_DAY;\n                }\n\n                length = ((msMax - msMin) / msInterval);\n            }\n\n            length = Math.round(length);\n\n            for (; idx < length; idx++) {\n                var majorTickDivider = idx % (msMajorInterval / msInterval),\n                    isMajorTickRow = majorTickDivider === 0,\n                    isMiddleRow = majorTickDivider < minorTickCount - 1,\n                    isLastSlotRow = majorTickDivider === minorTickCount - 1;\n\n                html += action(start, isMajorTickRow, isMiddleRow, isLastSlotRow);\n\n                setTime(start, msInterval, false);\n            }\n\n            if (msMax) {\n                msStart = getMilliseconds(start);\n                if (startDay < start.getDate()) {\n                    msStart += MS_PER_DAY;\n                }\n\n                if (msStart > msMax) {\n                    start = new Date(+max);\n                }\n            }\n\n            if (after) {\n                html += after(start);\n            }\n\n            return html;\n        },\n\n        _content: function(dates) {\n            var that = this;\n            var html = '';\n\n            html += '<tbody>';\n\n            html += that._renderRows(dates, that.rowLevels, that.columnLevels);\n\n            html += '</tbody>';\n\n            this.content.find(\"table\").append(html);\n        },\n\n        _virtualContent: function(rowLevels, columnLevels) {\n            var that = this;\n            var html = '';\n            var dates = that._dates;\n\n            html += that._renderRows(dates, rowLevels, columnLevels);\n\n            that.content.find(\"table tbody\").append(html);\n        },\n\n        _renderRows: function(dates, rowLevels, columnLevels) {\n            var that = this;\n            var isVerticalGroupped = that._groupOrientation() === \"vertical\";\n            var byDate = that._isGroupedByDate();\n            var dateID = 0;\n            var columnCount = dates.length;\n            var options = that.options;\n            var start = that.startTime();\n            var end = this.endTime();\n            var groupsCount = 1;\n            var rowCount = 1;\n            var resources = this.groupedResources;\n            var html = '';\n\n            if (resources.length) {\n                var levels = that._recalculateLevels(rowLevels, columnLevels);\n\n                rowCount = levels.rowCount;\n                groupsCount = levels.groupsCount;\n            }\n\n            var appendRow = function(date, majorTick, middleRow) {\n                var content = \"\";\n                var groupIdx = 0;\n                var idx, length;\n\n                content = '<tr' + (middleRow ? ' class=\"k-middle-row\"' : \"\") + '>';\n\n                if (byDate) {\n                    for (idx = 0, length = columnCount; idx < length; idx++) {\n                        for (groupIdx = 0; groupIdx < groupsCount; groupIdx++) {\n                            var dateIndex = idx;\n                            if (isVerticalGroupped) {\n                                dateIndex = dateID;\n                            }\n                            content = that._addCellsToContent(content, dates, date, dateIndex, groupIdx, rowIdx);\n\n                        }\n                        if (isVerticalGroupped) {\n\n                            break;\n                        }\n                    }\n                } else {\n                     for (; groupIdx < groupsCount; groupIdx++) {\n                        for (idx = 0, length = columnCount; idx < length; idx++) {\n                            content = that._addCellsToContent(content, dates, date, idx, groupIdx, rowIdx);\n                        }\n                     }\n                }\n\n                content += \"</tr>\";\n\n                return content;\n            };\n\n            for (var rowIdx = 0; rowIdx < rowCount; rowIdx++) {\n                html += options.allDaySlot && isVerticalGroupped ? this._allDayVerticalGroupRow(dates, rowIdx, groupsCount, dateID) : \"\";\n\n                html += this._forTimeRange(start, end, appendRow);\n                if (isVerticalGroupped) {\n                        dateID++;\n                }\n            }\n\n            return html;\n        },\n\n        _recalculateLevels: function(rowLevels, columnLevels) {\n            var that = this;\n            var byDate = that._isGroupedByDate();\n            var isVerticalGroupped = that._groupOrientation() === \"vertical\";\n            var groupsCount = 1;\n            var rowCount = 1;\n\n            if (isVerticalGroupped) {\n                rowCount = that._rowCountForLevel(rowLevels.length - 2, rowLevels);\n\n                if (byDate) {\n                     groupsCount = that._columnCountForLevel(columnLevels.length - 1);\n                }\n            } else {\n                if (byDate) {\n                     groupsCount = that._columnCountForLevel(columnLevels.length - 1) / this._columnCountForLevel(0);\n                } else {\n                     groupsCount = that._columnCountForLevel(columnLevels.length - 2);\n                }\n            }\n\n            return {\n                rowCount: rowCount,\n                groupsCount: groupsCount\n            };\n        },\n\n        _allDayVerticalGroupRow: function(dates, groupIndex, groupsCount, dateID) {\n            var that = this;\n            var result = '<tr class=\"k-scheduler-header-all-day\">';\n            var byDate = that._isGroupedByDate();\n            var dateGroupIndex = byDate ? 0 : groupIndex;\n            var allDaySlotTemplate = that.allDaySlotTemplate;\n\n            var resources = function() {\n                return that._resourceBySlot({ groupIndex: dateGroupIndex });\n            };\n\n            if (byDate) {\n                for (; dateGroupIndex < groupsCount; dateGroupIndex++) {\n                    result += \"<td>\" + allDaySlotTemplate({ date: dates[dateID], resources: resources }) + \"</td>\";\n                }\n            } else {\n                for (var idx = 0; idx < dates.length; idx++) {\n                    result += \"<td>\" + allDaySlotTemplate({ date: dates[idx], resources: resources }) + \"</td>\";\n                }\n            }\n\n            return result + \"</tr>\";\n        },\n\n        _addCellsToContent: function(content, dates, date, idx, groupIdx, rowIdx) {\n            var that = this;\n            var classes = \"\";\n            var tmplDate;\n            var slotTemplate = this.slotTemplate;\n            var isVerticalGroupped = this._groupOrientation() === \"vertical\";\n            var resources = function(groupIndex) {\n                return function() {\n                    return that._resourceBySlot({ groupIndex: groupIndex });\n                };\n            };\n\n            if (kendo.date.isToday(dates[idx])) {\n                classes += \"k-today\";\n            }\n\n            if (kendo.date.getMilliseconds(date) < kendo.date.getMilliseconds(this.options.workDayStart) ||\n                kendo.date.getMilliseconds(date) >= kendo.date.getMilliseconds(this.options.workDayEnd) ||\n                !this._isWorkDay(dates[idx])) {\n                classes += \" k-nonwork-hour\";\n            }\n\n            content += '<td' + (classes !== \"\" ? ' class=\"' + classes + '\"' : \"\") + \">\";\n            tmplDate = kendo.date.getDate(dates[idx]);\n            kendo.date.setTime(tmplDate, kendo.date.getMilliseconds(date));\n\n            content += slotTemplate({ date: tmplDate, resources: resources(isVerticalGroupped && !that._isGroupedByDate() ? rowIdx : groupIdx) });\n            content += \"</td>\";\n            return content;\n        },\n\n        _isWorkDay: function(date) {\n            var day = date.getDay();\n            var workDays = this._workDays;\n\n            for (var i = 0; i < workDays.length; i++) {\n                if (workDays[i] === day) {\n                    return true;\n                }\n            }\n            return false;\n        },\n\n        _render: function(dates) {\n            var that = this;\n\n            dates = dates || [];\n\n            this._dates = dates;\n\n            this._startDate = dates[0];\n\n            this._endDate = dates[(dates.length - 1) || 0];\n\n            this.createLayout(this._layout(dates));\n\n            this._content(dates);\n\n            this._footer();\n\n            this.refreshLayout();\n\n            if (this._isVirtualized()) {\n                this._tryRenderContent();\n            }\n\n            var allDayHeader = this.element.find(\".k-scheduler-header-all-day td\");\n\n            if (allDayHeader.length) {\n                this._allDayHeaderHeight = allDayHeader.first()[0].clientHeight;\n            }\n\n            that.element.on(\"click\" + NS, \".k-nav-day\", function(e) {\n                var th = $(e.currentTarget).closest(\"th\");\n                var offset = th.offset();\n                var additioanlWidth = 0;\n                var additionalHeight = outerHeight(th);\n\n                if (that._isGroupedByDate()) {\n                    if (that._isVerticallyGrouped()) {\n                        additioanlWidth = outerWidth(that.times);\n                        additionalHeight = 0;\n                    } else {\n                        additionalHeight = outerHeight(that.datesHeader);\n                    }\n                }\n\n                var slot = that._slotByPosition(offset.left + additioanlWidth, offset.top + additionalHeight);\n\n                that.trigger(\"navigate\", { view: \"day\", date: slot.startDate() });\n            });\n        },\n\n        startTime: function() {\n            var options = this.options;\n            return options.showWorkHours ? options.workDayStart : options.startTime;\n        },\n\n        endTime: function() {\n            var options = this.options;\n            return options.showWorkHours ? options.workDayEnd : options.endTime;\n        },\n\n        startDate: function() {\n            return this._startDate;\n        },\n\n        endDate: function() {\n            return this._endDate;\n        },\n\n        _end: function(isAllDay) {\n            var time = getMilliseconds(this.endTime()) || MS_PER_DAY;\n\n            if (isAllDay) {\n                time = 0;\n            }\n\n            return new Date(this._endDate.getTime() + time);\n        },\n\n        nextDate: function() {\n            return kendo.date.nextDay(this.endDate());\n        },\n\n        previousDate: function() {\n            return kendo.date.previousDay(this.startDate());\n        },\n\n        calculateDateRange: function() {\n            this._render([this.options.date]);\n        },\n\n        destroy: function() {\n            var that = this;\n\n            if (that._currentTimeUpdateTimer) {\n                clearInterval(that._currentTimeUpdateTimer);\n            }\n\n            if (that.datesHeader) {\n                that.datesHeader.off(NS);\n            }\n\n            if (that.element) {\n                that.element.off(NS);\n            }\n\n            SchedulerView.fn.destroy.call(this);\n\n            if (this._isMobile() && that.options.editable) {\n                if (that.options.editable.create !== false) {\n                    that._addUserEvents.destroy();\n                    that._allDayUserEvents.destroy();\n                }\n\n                if (that.options.editable.update !== false) {\n                    that._editUserEvents.destroy();\n                }\n            }\n        },\n\n        inRange: function(options) {\n            var inRange = SchedulerView.fn.inRange.call(this, options);\n\n            if (options.isAllDay) {\n                return inRange;\n            }\n\n            var startTime = getMilliseconds(this.startTime());\n            var endTime = getMilliseconds(this.endTime()) || kendo.date.MS_PER_DAY;\n\n            var start = getMilliseconds(options.start);\n            var end = getMilliseconds(options.end) || kendo.date.MS_PER_DAY;\n\n            return inRange && startTime <= start && end <= endTime;\n        },\n\n        selectionByElement: function(cell) {\n            var offset = cell.offset();\n            // The magical number 5 is to buffer properly the height of the cell for all browsers\n            var height = Math.round(cell.innerHeight()) - 5;\n\n            return this._slotByPosition(offset.left, offset.top + height);\n        },\n\n        _timeSlotInterval: function() {\n            var options = this.options;\n            return (options.majorTick / options.minorTickCount) * MS_PER_MINUTE;\n        },\n\n        _timeSlotIndex: function(date) {\n            var options = this.options;\n            var eventStartTime = getMilliseconds(date);\n            var startTime = getMilliseconds(this.startTime());\n            var timeSlotInterval = ((options.majorTick / options.minorTickCount) * MS_PER_MINUTE);\n\n            return (eventStartTime - startTime) / (timeSlotInterval);\n        },\n\n        _slotIndex: function(date, multiday) {\n            if (multiday) {\n                return this._dateSlotIndex(date);\n            }\n\n            return this._timeSlotIndex(date);\n        },\n\n        _dateSlotIndex: function(date, overlaps) {\n            var idx;\n            var length;\n            var slots = this._dates || [];\n            var slotStart;\n            var slotEnd;\n            var offset = 1;\n\n            for (idx = 0, length = slots.length; idx < length; idx++) {\n                slotStart = kendo.date.getDate(slots[idx]);\n                slotEnd = new Date(kendo.date.getDate(slots[idx]).getTime() + MS_PER_DAY - (overlaps ? 0 : 1));\n\n                if (isInDateRange(date, slotStart, slotEnd)) {\n                    return idx * offset;\n                }\n            }\n            return -1;\n        },\n\n        _positionAllDayEvent: function(element, slotRange) {\n            var slotWidth = slotRange.innerWidth();\n            var startIndex = slotRange.start.index;\n            var endIndex = slotRange.end.index;\n\n            var allDayEvents = SchedulerView.collidingEvents(slotRange.events(), startIndex, endIndex);\n\n            var currentColumnCount = this._headerColumnCount || 0;\n\n            var leftOffset = 2;\n\n            var rightOffset = startIndex !== endIndex ? 3 : 2;\n\n            var eventHeight = this._allDayHeaderHeight;\n\n            var start = slotRange.startSlot();\n\n            element\n                .css({\n                    left: start.offsetLeft + leftOffset,\n                    width: slotWidth - rightOffset\n                });\n\n            slotRange.addEvent({ slotIndex: startIndex, start: startIndex, end: endIndex, element: element });\n\n            allDayEvents.push({ slotIndex: startIndex, start: startIndex, end: endIndex, element: element });\n\n            var rows = SchedulerView.createRows(allDayEvents);\n\n            if (rows.length && rows.length > currentColumnCount) {\n                this._headerColumnCount = rows.length;\n            }\n\n            var top = slotRange.start.offsetTop;\n\n            for (var idx = 0, length = rows.length; idx < length; idx++) {\n                var rowEvents = rows[idx].events;\n\n                for (var j = 0, eventLength = rowEvents.length; j < eventLength; j++) {\n                    $(rowEvents[j].element).css({\n                        top: top + idx * eventHeight,\n                        // apply calculated height.\n                        // -2 is to match normal events\n                        height: eventHeight - 2\n                    });\n                }\n            }\n        },\n\n        _arrangeColumns: function(element, top, height, slotRange) {\n            var startSlot = slotRange.start;\n\n            element = { element: element, slotIndex: startSlot.index, start: top, end: top + height };\n\n            var columns,\n                slotWidth = startSlot.clientWidth,\n                eventRightOffset = slotWidth * 0.10,\n                columnEvents,\n                eventElements = slotRange.events(),\n                slotEvents = SchedulerView.collidingEvents(eventElements, element.start, element.end),\n                tableEl = this.table.find(\".k-scheduler-content .k-scheduler-table\")[0],\n                contentEl = this.table.find(\".k-scheduler-content\")[0];\n\n            slotRange.addEvent(element);\n\n            slotEvents.push(element);\n\n            columns = SchedulerView.createColumns(slotEvents);\n\n            var columnWidth = (slotWidth - eventRightOffset) / columns.length;\n\n            for (var idx = 0, length = columns.length; idx < length; idx++) {\n                columnEvents = columns[idx].events;\n\n                for (var j = 0, eventLength = columnEvents.length; j < eventLength; j++) {\n                    var calculatedWidth = columnWidth - 2;\n                    columnEvents[j].element[0].style.width = (calculatedWidth > 0 ? calculatedWidth : columnWidth) + \"px\";\n\n                    if (this._isRtl && contentEl.clientWidth < contentEl.scrollWidth) {\n                        // RTL mobile rendering with horizontal scroll\n                        columnEvents[j].element[0].style.left = eventRightOffset +\n                            startSlot.offsetLeft +\n                            idx * columnWidth -\n                            (tableEl.clientWidth - contentEl.clientWidth) +\n                            \"px\";\n                    } else {\n                        columnEvents[j].element[0].style.left = (this._isRtl ? eventRightOffset : 0) + startSlot.offsetLeft + idx * columnWidth + 2 + \"px\";\n                    }\n                }\n            }\n        },\n\n        _positionEvent: function(event, element, slotRange) {\n            var start = event._startTime || event.start;\n            var end = event._endTime || event.end;\n            var borderWidths = kendo.getComputedStyles(slotRange.start.element, [\"border-top-width\", \"border-bottom-width\"]);\n\n            var rect = slotRange.innerRect(start, end, false);\n\n            var height = rect.bottom - rect.top -\n                            parseFloat(borderWidths[\"border-top-width\"]) -\n                            parseFloat(borderWidths[\"border-bottom-width\"]);\n\n            if (height < 0) {\n                height = 0;\n            }\n\n            element.css( {\n                top: rect.top,\n                height: height\n            } );\n\n            this._arrangeColumns(element, rect.top, element[0].clientHeight, slotRange);\n       },\n\n       _createEventElement: function(event, isOneDayEvent, head, tail) {\n            var template = isOneDayEvent ? this.eventTemplate : this.allDayEventTemplate;\n            var options = this.options;\n            var editable = options.editable;\n            var isMobile = this._isMobile();\n            var showDelete = editable && editable.destroy !== false && !isMobile;\n            var resizable = editable && editable.resize !== false;\n            var startDate = getDate(this.startDate());\n            var endDate = getDate(this.endDate());\n            var startTime = getMilliseconds(this.startTime());\n            var endTime = getMilliseconds(this.endTime());\n            var eventStartTime = event._time(\"start\");\n            var eventEndTime = event._time(\"end\");\n            var eventTemplate = isOneDayEvent ? options.eventTemplate : options.allDayEventTemplate;\n            var middle;\n\n            if (startTime >= endTime) {\n                endTime = getMilliseconds(new Date(this.endTime().getTime() + MS_PER_DAY - 1));\n            }\n\n            if (!isOneDayEvent && !event.isAllDay) {\n                endDate = new Date(endDate.getTime() + MS_PER_DAY);\n            }\n\n            var eventStartDate = event.start;\n            var eventEndDate = event.end;\n\n            if (event.isAllDay) {\n                eventEndDate = getDate(event.end);\n            }\n            if ((!isInDateRange(getDate(eventStartDate), startDate, endDate) &&\n                !isInDateRange(eventEndDate, startDate, endDate)) ||\n                (isOneDayEvent &&\n                    event.start.getTime() !== event.end.getTime() &&\n                    (eventStartTime < startTime || eventStartTime >= endTime) &&\n                    (eventEndTime > endTime || eventEndTime <= startTime ))) {\n\n                middle = true;\n            } else if (getDate(eventStartDate) < startDate ||\n                (isOneDayEvent &&\n                    eventStartTime !== 0 &&\n                    event.start.getTime() !== event.end.getTime() &&\n                    (eventStartTime < startTime || eventStartTime >= endTime))) {\n\n                tail = true;\n            } else if ((eventEndDate > endDate && !isOneDayEvent) ||\n                (isOneDayEvent &&\n                    eventEndTime !== 0 &&\n                    event.start.getTime() !== event.end.getTime() &&\n                    (eventEndTime > endTime || eventEndTime <= startTime))) {\n\n                head = true;\n            }\n\n            var resources = this.eventResources(event);\n\n           if (event._startTime && eventStartTime !== kendo.date.getMilliseconds(event.start)) {\n                eventStartDate = new Date(eventStartTime);\n                eventStartDate = kendo.timezone.apply(eventStartDate, \"Etc/UTC\");\n            }\n\n           if (event._endTime && eventEndTime !== kendo.date.getMilliseconds(event.end)) {\n                eventEndDate = new Date(eventEndTime);\n                eventEndDate = kendo.timezone.apply(eventEndDate, \"Etc/UTC\");\n            }\n\n            var data = extend({}, {\n                ns: kendo.ns,\n                resizable: resizable,\n                showDelete: showDelete,\n                middle: middle,\n                head: head,\n                tail: tail,\n                singleDay: this._dates.length == 1,\n                resources: resources,\n                inverseColor: false,\n                messages: options.messages,\n                ariaLabel: this._formatEventAriaLabel(event.title, eventStartDate, eventEndDate, event.isAllDay),\n                template: eventTemplate\n            }, event, {\n                start: eventStartDate,\n                end: eventEndDate\n            });\n\n            var element = $(template(data));\n            kendo.applyStylesFromKendoAttributes(element, [\"background-color\", \"border-color\"]);\n\n            this.angular(\"compile\", function() {\n                return {\n                    elements: element,\n                    data: [ { dataItem: data } ]\n                };\n            });\n\n            return element;\n        },\n\n        _isInTimeSlot: function(event) {\n            var slotStartTime = this.startTime(),\n                slotEndTime = this.endTime(),\n                startTime = event._startTime || event.start,\n                endTime = event._endTime || event.end;\n\n            if (getMilliseconds(slotEndTime) === getMilliseconds(kendo.date.getDate(slotEndTime))) {\n                slotEndTime = kendo.date.getDate(slotEndTime);\n                setTime(slotEndTime, MS_PER_DAY - 1);\n            }\n\n            if (event._date(\"end\") > event._date(\"start\")) {\n               endTime = +event._date(\"end\") + (MS_PER_DAY - 1);\n            }\n\n            endTime = event._endTime ? endTime - event._date(\"end\") : getMilliseconds(new Date(endTime));\n            startTime = event._startTime ? startTime - event._date(\"start\") : getMilliseconds(new Date(startTime));\n\n            slotEndTime = getMilliseconds(slotEndTime);\n            slotStartTime = getMilliseconds(slotStartTime);\n\n            if (slotStartTime === startTime && startTime === endTime) {\n                return true;\n            }\n\n            var overlaps = startTime !== slotEndTime;\n\n            return isInTimeRange(startTime, slotStartTime, slotEndTime, overlaps) ||\n                isInTimeRange(endTime, slotStartTime, slotEndTime, overlaps) ||\n                isInTimeRange(slotStartTime, startTime, endTime) ||\n                isInTimeRange(slotEndTime, startTime, endTime) ||\n                (event.end.getDate() > event.start.getDate() && endTime > slotStartTime);\n        },\n\n        _isInDateSlot: function(event) {\n            var groups = this.groups[0];\n            var slotStart = groups.firstSlot().start;\n            var slotEnd = groups.lastSlot().end - 1;\n\n            var startTime = kendo.date.toUtcTime(event.start);\n            var endTime = kendo.date.toUtcTime(event.end);\n\n            return (isInDateRange(startTime, slotStart, slotEnd) ||\n                isInDateRange(endTime, slotStart, slotEnd) ||\n                isInDateRange(slotStart, startTime, endTime) ||\n                isInDateRange(slotEnd, startTime, endTime)) &&\n                (!isInDateRange(endTime, slotStart, slotStart) || isInDateRange(endTime, startTime, startTime) || event.isAllDay );\n        },\n\n        _updateAllDayHeaderHeight: function(height) {\n            if (this._height !== height) {\n                this._height = height;\n\n                var allDaySlots = this.element.find(\".k-scheduler-header-all-day td\");\n\n                if (allDaySlots.length) {\n                    allDaySlots.parent()\n                        .add(this.element.find(\".k-scheduler-times-all-day\").parent())\n                        .height(height);\n\n                    for (var groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n                        this.groups[groupIndex].refresh();\n                    }\n                }\n            }\n        },\n\n        _renderEvents: function(events, groupIndex) {\n            var allDayEventContainer = this.datesHeader.find(\".k-scheduler-header-wrap > div\");\n            var byDate = this._isGroupedByDate();\n            var event;\n\n            var idx;\n            var length;\n\n            for (idx = 0, length = events.length; idx < length; idx++) {\n                event = events[idx];\n\n                if (this._isInDateSlot(event)) {\n                    var isMultiDayEvent, container, element, ranges, range, start, end, group;\n\n                    if (this.options.enforceAllDaySlot) {\n                        isMultiDayEvent = event.isAllDay || event.duration() >= MS_PER_DAY;\n                    } else {\n                        isMultiDayEvent = event.isAllDay;\n                    }\n\n                    container = isMultiDayEvent && !this._isVerticallyGrouped() ? allDayEventContainer : this.content;\n\n                    if (!isMultiDayEvent) {\n                        if (this._isInTimeSlot(event)) {\n                            group = this.groups[groupIndex];\n\n                            if (!group) {\n                                continue;\n                            }\n\n                            if (!group._continuousEvents) {\n                                group._continuousEvents = [];\n                            }\n\n                            ranges = group.slotRanges(event);\n\n                            var rangeCount = ranges.length;\n\n                            for (var rangeIndex = 0; rangeIndex < rangeCount; rangeIndex++) {\n                                range = ranges[rangeIndex];\n                                start = event.start;\n                                end = event.end;\n\n                                if (rangeCount > 1) {\n                                    if (rangeIndex === 0) {\n                                        end = range.end.endDate();\n                                    } else if (rangeIndex == rangeCount - 1) {\n                                        start = range.start.startDate();\n                                    } else {\n                                        start = range.start.startDate();\n                                        end = range.end.endDate();\n                                    }\n                                }\n\n                                var occurrence = event.clone({ start: start, end: end, _startTime: event._startTime, _endTime: event.endTime });\n\n                                if (this._isInTimeSlot(occurrence)) {\n                                    var head = range.head;\n\n                                    element = this._createEventElement(event, !isMultiDayEvent, head, range.tail);\n\n                                    element.appendTo(container);\n\n                                    this._inverseEventColor(element);\n\n                                    this._positionEvent(occurrence, element, range);\n\n                                    addContinuousEvent(group, range, element, false);\n                                }\n                            }\n                        }\n\n                    } else if (this.options.allDaySlot) {\n                        group = this.groups[groupIndex];\n\n                        if (!group) {\n                            continue;\n                        }\n\n                        if (!group._continuousEvents) {\n                            group._continuousEvents = [];\n                        }\n\n                        ranges = group.slotRanges(event);\n\n                        if (ranges.length) {\n                            range = ranges[0];\n                            var startIndex = range.start.index;\n                            var endIndex = range.end.index;\n\n                            if (byDate && startIndex !== endIndex) {\n                                start = range.start.start;\n                                end = range.end.end;\n                                var newStart = start;\n                                var newEnd = start;\n\n                                for (var i = range.start.index; i <= range.end.index; i++) {\n                                    element = this._createEventElement(event, !isMultiDayEvent, i !== endIndex, i !== startIndex);\n\n                                    var dateRange = group.daySlotRanges(newStart, newEnd, true)[0];\n                                    newStart = newEnd += kendo.date.MS_PER_DAY;\n\n                                    this._positionAllDayEvent(element, dateRange);\n\n                                    addContinuousEvent(group, dateRange, element, true);\n\n                                    element.appendTo(container);\n\n                                    this._inverseEventColor(element);\n                                }\n                            } else {\n                                element = this._createEventElement(event, !isMultiDayEvent);\n\n                                this._positionAllDayEvent(element, ranges[0]);\n\n                                addContinuousEvent(group, ranges[0], element, true);\n\n                                element.appendTo(container);\n\n                                this._inverseEventColor(element);\n                            }\n                        }\n                    }\n                }\n            }\n        },\n\n        render: function(events) {\n            var that = this;\n\n            this._headerColumnCount = 0;\n\n            this._cachedEvents = events;\n\n            this._groups();\n\n            this.element.find(\".k-event\").remove();\n\n            events = new kendo.data.Query(events)\n                .sort([{ field: \"start\", dir: \"asc\" },{ field: \"end\", dir: \"desc\" }])\n                .toArray();\n\n            var eventsByResource = [];\n\n            this._eventsByResource(events, this.groupedResources, eventsByResource);\n\n            var eventsPerDate = $.map(this._dates, function(date) {\n                return Math.max.apply(null,\n                    $.map(eventsByResource, function(events) {\n                        return $.grep(events, function(event) {\n                            if (that.options.enforceAllDaySlot) {\n                                return event.isMultiDay() && isInDateRange(date, getDate(event.start), getDate(event.end));\n                            } else {\n                                return event.isAllDay && isInDateRange(date, getDate(event.start), getDate(event.end));\n                            }\n                        }).length;\n                    })\n                );\n            });\n\n            var height = Math.max.apply(null, eventsPerDate);\n\n            this._updateAllDayHeaderHeight((height + 1) * this._allDayHeaderHeight);\n\n            for (var groupIndex = 0; groupIndex < eventsByResource.length; groupIndex++) {\n                this._renderEvents(eventsByResource[groupIndex], groupIndex);\n            }\n\n            this.refreshLayout();\n\n            this._currentTime(false);\n            this._ongoingEvents(events);\n\n            this.trigger(\"activate\");\n        },\n\n        _eventsByResource: function(events, resources, result, parentValue) {\n            var resource = resources[0];\n\n            if (resource) {\n                var view = resource.dataSource.view();\n\n                view = view.filter(function(item) {\n                    var itemParentValue = kendo.getter(resource.dataParentValueField)(item);\n\n                    return itemParentValue === null || itemParentValue === undefined$1 || itemParentValue === parentValue;\n                });\n\n                for (var itemIdx = 0; itemIdx < view.length; itemIdx++) {\n                    var value = this._resourceValue(resource, view[itemIdx]);\n\n                    var eventsFilteredByResource = new kendo.data.Query(events).filter({ field: resource.field, operator: SchedulerView.groupEqFilter(value) }).toArray();\n\n                    if (resources.length > 1) {\n                        this._eventsByResource(eventsFilteredByResource, resources.slice(1), result, value);\n                    } else {\n                        result.push(eventsFilteredByResource);\n                    }\n                }\n            } else {\n                result.push(events);\n            }\n        },\n\n        _columnOffsetForResource: function(index) {\n            return this._columnCountForLevel(index) / this._columnCountForLevel(index - 1);\n        },\n\n        _columnCountForLevel: function(level) {\n            var columnLevel = this.columnLevels[level];\n            return columnLevel ? columnLevel.length : 0;\n        },\n\n        _rowCountForLevel: function(level, rowLevels) {\n            rowLevels = rowLevels || this.rowLevels;\n            var rowLevel = rowLevels[level];\n            return rowLevel ? rowLevel.length : 0;\n        },\n\n        clearSelection: function() {\n\n            this.content.add(this.datesHeader)\n                .find(\".k-selected\")\n                .removeAttr(\"id\")\n                .removeClass(\"k-selected\");\n        },\n\n        _updateDirection: function(selection, ranges, multiple, reverse, vertical) {\n            var isDaySlot = selection.isAllDay;\n            var startSlot = ranges[0].start;\n            var endSlot = ranges[ranges.length - 1].end;\n\n            if (multiple) {\n                if (vertical) {\n                    if (!isDaySlot &&\n                        startSlot.index === endSlot.index &&\n                        startSlot.collectionIndex === endSlot.collectionIndex) {\n                            selection.backward = reverse;\n                    }\n                } else {\n                    if ((isDaySlot && startSlot.index === endSlot.index) ||\n                        (!isDaySlot && startSlot.collectionIndex === endSlot.collectionIndex)) {\n                            selection.backward = reverse;\n                    }\n                }\n            }\n        },\n\n        _changeViewPeriod: function(selection, reverse, vertical) {\n            if (!vertical) {\n                var date = reverse ? this.previousDate() : this.nextDate();\n                var start = selection.start;\n                var end = selection.end;\n                var verticalByDate = this._isGroupedByDate() && this._isVerticallyGrouped();\n                var group = this.groups[selection.groupIndex];\n                var collection = reverse ? group._timeSlotCollections : group._getCollections(group.daySlotCollectionCount());\n                var slots = collection[collection.length - 1]._slots;\n                var slotIndex = (!reverse && !group.daySlotCollectionCount()) ? 0 : slots.length - 1;\n                var endMilliseconds;\n                var newDateStart, newDateEnd;\n\n                newDateStart = new Date(date);\n                newDateEnd = new Date(date);\n\n                if (this._isInRange(newDateStart, newDateEnd)) {\n                    return false;\n                }\n\n                selection.start = newDateStart;\n                selection.end = newDateEnd;\n\n                if (verticalByDate) {\n                    var newStart = new Date(slots[slotIndex].startDate());\n                    var newEnd = new Date(slots[slotIndex].endDate());\n                    endMilliseconds = getMilliseconds(newEnd) ? getMilliseconds(newEnd) : MS_PER_DAY;\n\n                        setTime(selection.start, getMilliseconds(newStart));\n                        setTime(selection.end, endMilliseconds);\n                        if (group.daySlotCollectionCount()) {\n                            selection.isAllDay = !selection.isAllDay;\n                        }\n                } else {\n                    endMilliseconds = (selection.isAllDay || !getMilliseconds(end)) ? MS_PER_DAY : getMilliseconds(end);\n\n                    setTime(selection.start, getMilliseconds(start));\n                    setTime(selection.end, endMilliseconds);\n                }\n\n                if (!this._isVerticallyGrouped()) {\n                    selection.groupIndex = reverse ? this.groups.length - 1 : 0;\n                }\n\n                selection.events = [];\n\n                return true;\n            }\n        }\n    });\n\n    extend(true, ui, {\n        MultiDayView: MultiDayView,\n        DayView: MultiDayView.extend({\n            options: {\n                name: \"DayView\",\n                title: \"Day\",\n                selectedMobileDateFormat: \"{0:MMM d}\"\n            },\n            name: \"day\"\n        }),\n        WeekView: MultiDayView.extend({\n            options: {\n                name: \"WeekView\",\n                title: \"Week\",\n                selectedDateFormat: \"{0:D} - {1:D}\",\n                selectedShortDateFormat: \"{0:d} - {1:d}\"\n            },\n            name: \"week\",\n            calculateDateRange: function() {\n                var selectedDate = this.options.date,\n                    start = kendo.date.dayOfWeek(selectedDate, this.calendarInfo().firstDay, -1),\n                    idx, length,\n                    dates = [];\n\n                for (idx = 0, length = 7; idx < length; idx++) {\n                    dates.push(start);\n                    start = kendo.date.nextDay(start);\n                }\n                this._render(dates);\n            }\n        }),\n        WorkWeekView: MultiDayView.extend({\n            options: {\n                name: \"WorkWeekView\",\n                title: \"Work Week\",\n                selectedDateFormat: \"{0:D} - {1:D}\",\n                selectedShortDateFormat: \"{0:d} - {1:d}\"\n            },\n            name: \"workWeek\",\n            nextDate: function() {\n                var weekStart = kendo.date.dayOfWeek(kendo.date.nextDay(this.startDate()), this.calendarInfo().firstDay, 1);\n                return kendo.date.addDays(weekStart, this._workDays[0]);\n            },\n            previousDate: function() {\n                var weekStart = kendo.date.dayOfWeek(this.startDate(), this.calendarInfo().firstDay, -1);\n                var workDays = this._workDays;\n\n                return kendo.date.addDays(weekStart, workDays[workDays.length - 1] - 7);\n            },\n            calculateDateRange: function() {\n                var options = this.options,\n                    selectedDate = options.date,\n                    dayOfWeek = kendo.date.dayOfWeek,\n                    weekStart = dayOfWeek(selectedDate, this.calendarInfo().firstDay, -1),\n                    start = dayOfWeek(weekStart, options.workWeekStart, 1),\n                    end = dayOfWeek(start, options.workWeekEnd, 1),\n                    dates = [],\n                    workDays = (options.workDays && options.workDays.length) ? options.workDays.map(function(day) {\n                        return dayOfWeek(weekStart, day, 1).getTime();\n                    }) : null;\n\n                if (workDays) {\n                    start = weekStart;\n                    end = dayOfWeek(start, this.calendarInfo().firstDay + 6, 1);\n                }\n\n                while (start <= end) {\n                    if (workDays && workDays.indexOf(start.getTime()) > -1) {\n                        dates.push(start);\n                    } else if (!workDays) {\n                        dates.push(start);\n                    }\n\n                    start = kendo.date.nextDay(start);\n                }\n\n                this._render(dates);\n            }\n        })\n    });\n\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}