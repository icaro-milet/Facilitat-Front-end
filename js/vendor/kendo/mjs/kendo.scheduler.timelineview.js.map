{"version":3,"file":"kendo.scheduler.timelineview.js","names":["__meta__","id","name","category","description","depends","hidden","$","undefined$1","kendo","window","ui","setTime","date","SchedulerView","outerWidth","_outerWidth","outerHeight","_outerHeight","extend","encode","htmlEncode","getDate","getMilliseconds","MS_PER_DAY","MS_PER_MINUTE","INVERSE_COLOR_CLASS","BORDER_SIZE_COEFF","NS","EVENT_TEMPLATE","template","title","start","end","format","DATA_HEADER_TEMPLATE","EVENT_WRAPPER_TEMPLATE","task","ariaLabel","ns","uid","resources","attr","color","tail","icon","isException","isRecurring","showDelete","messages","destroy","head","resizable","toInvariantTime","staticDate","Date","setColspan","columnLevel","count","columns","i","length","colspan","TimelineGroupedView","Class","init","view","this","_view","_getTimeSlotByPosition","x","y","groupIndex","groups","timeSlotByPosition","_hideHeaders","timesHeader","find","last","hide","datesHeader","_setColspan","timeColumn","_createRowsLayout","rows","groupHeaderTemplate","_createVerticalColumnsLayout","_createColumnsLayout","_getRowCount","_groupCount","_getGroupsCount","_addContent","dates","columnCount","groupsCount","rowCount","slotTemplate","isVerticalGrouped","html","options","appendRow","tmplDate","content","classes","isToday","idx","workDayStart","workDayEnd","_isWorkDay","rowIdx","groupIdx","_resourceBySlot","_forTimeRange","_addTimeSlotsCollections","groupCount","datesCount","tableRows","interval","isVerticallyGrouped","Math","floor","time","rowMultiplier","group","cellMultiplier","cells","children","cellsPerGroup","cellsPerDay","dateIndex","cellOffset","startTime","cellIndex","_addTimeSlotToCollection","_getVerticalGroupCount","_getVerticalRowCount","eventGroups","maxRowCount","_isVerticallyGrouped","_renderEvent","eventGroup","event","adjustedEvent","range","container","element","_createEventElement","occurrence","appendTo","css","top","height","eventHeight","eventObject","_startTime","_endTime","slotRange","rowIndex","offsetTop","events","_inverseEventColor","addContinuousEvent","isAllDay","_arrangeRows","_verticalCountForLevel","level","_rowCountForLevel","_horizontalCountForLevel","_columnCountForLevel","_updateCurrentVerticalTimeMarker","ranges","currentTime","elementHtml","headerWrap","DOT","left","round","innerRect","getTime","timesTableMarker","prependTo","addClass","CURRENT_TIME_MARKER_ARROW_CLASS","_adjustLeftPosition","prev","position","width","scrollHeight","_changeGroup","_prevGroupSlot","slot","isDay","_collection","_nextGroupSlot","first","_verticalSlots","selection","reverse","_verticalMethod","_normalizeVerticalSelection","_horizontalSlots","method","startSlot","endSlot","multiple","result","_isHorizontallyGrouped","_changeVerticalViewPeriod","_changeHorizontalViewPeriod","slots","shift","_changeViewPeriod","_updateDirection","_createMoveHint","hint","rect","snap","right","offsetHeight","inverseColor","_appendMoveHint","_isRtl","scrollWidth","clientWidth","TimelineGroupedByDateView","times","eq","_createDateLayout","subColumns","isMajorTickColumn","isMiddleColumn","isLastSlotColumn","minorTickColumns","workDateIndex","tempStart","minorTickCount","msInterval","majorTick","_dates","startIndex","endIndex","eventObjects","index","currentSlot","_timeSlotCollections","_slots","dateRange","timeSlotRanges","push","firstTimesCell","lastTimesCell","markerTopPosition","timesTableMarkerCss","previous","_changeDate","collections","_getCollections","tempSlot","startEnd","slotIdx","collection","offsetLeft","offsetWidth","scheduler","TimelineView","that","zeroWidthEvent","document","body","fn","call","_zeroWidthEventOffset","remove","_groupedView","_getGroupedView","_workDays","workDays","dayIndex","workWeekStart","workWeekEnd","abs","getWorkDays","_templates","_editable","calculateDateRange","_groups","_currentTime","_isVirtualized","_isGroupedByDate","_getNextEventIndexBySlot","sortedEvents","tempIndex","startDate","_getSelectedSlot","pad","_getSortedEvents","uniqueAllEvents","sort","second","isDaySlot","_currentTimeMarkerUpdater","_updateCurrentTimeMarker","_scrollTo","elementOffset","elementOffsetDir","containerScroll","scrollLeft","containerOffsetDir","rightDistance","_isInDateSlot","currentTimeMarker","useLocalTimezone","timezone","dataSource","schema","timezoneOffset","offset","convert","getTimezoneOffset","orientation","currentGroup","utcCurrentTime","toUtcTime","slotByStartDate","setUpdateTimer","markerOptions","updateInterval","_currentTimeUpdateTimer","setInterval","bind","editable","_isMobile","_touchEditable","_mouseEditable","on","e","trigger","closest","preventDefault","create","_slotByPosition","pageX","pageY","resourceInfo","eventInfo","endDate","update","threshold","support","mobileOS","android","_addUserEvents","UserEvents","useClickAsTap","browser","edge","filter","tap","_scrolling","location","_editUserEvents","eventElement","target","touch","initialTouch","is","hasClass","mozilla","webkit","version","msie","scrollTop","ceil","selectedDateFormat","selectedShortDateFormat","selectedMobileDateFormat","today","endTime","showWorkHours","eventMinWidth","columnWidth","text","majorTimeHeaderTemplate","toString","eventTemplate","dateHeaderTemplate","footer","command","ongoingEvents","cssClass","enabled","defaultRowText","showFullDay","showWorkDay","settings","Template","templateSettings","_render","_startDate","_endDate","_calculateSlotRanges","createLayout","_layout","_content","_footer","_setContentWidth","refreshLayout","th","currentTarget","contentWidth","contentTable","minWidth","calculatedWidth","add","slotStartTime","slotEndTime","slotRanges","rangeStart","rangeEnd","_slotRanges","min","max","action","verticalByDate","msMin","msMax","msMajorInterval","majorTickDivider","timeColumns","groupedView","minorTickSlots","minorTickIndex","className","minorTicks","middleColumn","lastSlotColumn","minorSlotsCount","slice","groupedResources","_groupOrientation","_footerItems","items","_defaultTools","todayMobile","fulldayMobile","fulldayDesktop","toggleFullDay","isWorkDay","columnLevels","rowLevel","rowLevels","day","getDay","append","_addResourceView","addTimeSlotCollection","addDays","_timeSlotGroups","_timeSlotInterval","cell","getTimeSlotCollection","currentDate","UTC","getFullYear","getMonth","addTimeSlot","visibleEndDate","nextDate","nextDay","previousDate","previousDay","render","_headerColumnCount","data","Query","field","dir","toArray","eventsByResource","_eventsByResource","_renderEvents","_setRowsHeight","_positionEvents","_ongoingEvents","eventsForGroup","eventUid","Array","isArray","eventIndex","_positionEvent","eventBottomOffset","_getBottomRowOffset","verticalGroupCount","rowsCount","rowHeight","timesRow","row","_refreshSlots","minOffset","maxOffset","slotsCollection","lastSlot","offsetRight","refresh","parentValue","resource","item","itemParentValue","getter","dataParentValueField","itemIdx","value","_resourceValue","eventsFilteredByResource","operator","groupEqFilter","_isInTimeSlot","slotIndex","_adjustEvent","eventStartTime","_time","eventEndTime","adjustedStartDate","adjustedEndDate","clone","isMultiDayEvent","duration","_continuousEvents","isMobile","resize","eventStartDate","eventEndDate","eventResources","apply","singleDay","_formatEventAriaLabel","applyStylesFromKendoAttributes","angular","elements","dataItem","rectRight","collidingEvents","addEvent","slotIndexEnd","zeroWidthEventOffset","rectLeft","createRows","rowEvents","j","eventLength","_updateEventForSelection","_eventOptionsForMove","_updateEventForResize","set","_updateMoveHint","distance","clonedEvent","eventDuraton","_removeMoveHint","rangeIndex","_moveHint","_updateResizeHint","_removeResizeHint","startRect","_createResizeHint","_resizeHint","toLocalDate","selectionByElement","vertical","collectionIndex","backward","prevGroupSlot","nextGroupSlot","newStart","newEnd","_isInRange","move","key","handled","keys","DOWN","UP","LEFT","RIGHT","off","clearInterval","groupOptions","passedChildren","numberOfChildren","resourceIndex","levels","groupLevel","groupLevelMember","_setResourceValue","TimelineWeekView","selectedDate","dayOfWeek","calendarInfo","firstDay","TimelineWorkWeekView","weekStart","map","indexOf","TimelineMonthView","firstDayOfMonth","lastDayOfMonth","jQuery","kendo$1"],"sources":["kendo.scheduler.timelineview.js"],"mappings":"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","sourcesContent":["import './kendo.scheduler.view.js';\nimport './kendo.icons.js';\n\nvar __meta__ = {\n    id: \"scheduler.timelineview\",\n    name: \"Scheduler Timeline View\",\n    category: \"web\",\n    description: \"The Scheduler Timeline View\",\n    depends: [ \"scheduler.view\", \"icons\" ],\n    hidden: true\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        ui = kendo.ui,\n        setTime = kendo.date.setTime,\n        SchedulerView = ui.SchedulerView,\n        outerWidth = kendo._outerWidth,\n        outerHeight = kendo._outerHeight,\n        extend = $.extend,\n        encode = kendo.htmlEncode,\n        getDate = kendo.date.getDate,\n        getMilliseconds = kendo.date.getMilliseconds,\n        MS_PER_DAY = kendo.date.MS_PER_DAY,\n        MS_PER_MINUTE = kendo.date.MS_PER_MINUTE,\n        CURRENT_TIME_MARKER_CLASS = \"k-current-time\",\n        CURRENT_TIME_MARKER_ARROW_CLASS = \"k-current-time-arrow\",\n        SCHEDULER_HEADER_WRAP_CLASS = \"k-scheduler-header-wrap\",\n        INVERSE_COLOR_CLASS = \"k-event-inverse\",\n        BORDER_SIZE_COEFF = 0.8666,\n        DOT = \".\",\n        NS = \".kendoTimelineView\";\n\n    var EVENT_TEMPLATE = kendo.template(({ title, start, end }) =>'<div>' +\n        `<div class=\"k-event-template k-event-time\">${encode(kendo.format(\"{0:t} - {1:t}\", start, end))}</div>` +\n        `<div class=\"k-event-template\">${title}</div></div>`),\n        DATA_HEADER_TEMPLATE = kendo.template(({ date }) => `<span class='k-link k-nav-day'>${kendo.format('{0:m}', date)}</span>`),\n        EVENT_WRAPPER_TEMPLATE = (task) =>\n            `<div role=\"button\" aria-label=\"${encode(task.ariaLabel)}\" data-${task.ns}uid=\"${task.uid}\" ` +\n            `${task.resources[0] ? `${kendo.attr(\"style-background-color\")}=\"${task.resources[0].color}\" ${kendo.attr(\"style-border-color\")}=\"${task.resources[0].color}\" class=\"k-event\">` : 'class=\"k-event\">'}` +\n                '<span class=\"k-event-actions\">' +\n                    `${task.tail ? kendo.ui.icon(\"caret-alt-left\") : ''}` +\n                    `${task.isException() ? kendo.ui.icon(\"arrows-no-repeat\") :\n                        (task.isRecurring() ? kendo.ui.icon(\"arrow-rotate-cw\") : '')}` +\n                '</span>' +\n                `${kendo.template(task.template)(task)}` +\n                '<span class=\"k-event-actions\">' +\n                    `${task.showDelete ? `<a href=\"#\" class=\"k-link k-event-delete\" title=\"${task.messages.destroy}\" aria-label=\"${task.messages.destroy}\">${kendo.ui.icon(\"x\")}</a>` : ''}` +\n                    `${task.head ? kendo.ui.icon(\"caret-alt-right\") : ''}` +\n                '</span>' +\n                `${task.resizable && !task.tail ? '<span class=\"k-resize-handle k-resize-w\"></span>' : ''}` +\n                `${task.resizable && !task.head ? '<span class=\"k-resize-handle k-resize-e\"></span>' : ''}` +\n            '</div>';\n\n    function toInvariantTime(date) {\n        var staticDate = new Date(1980, 1, 1, 0, 0, 0);\n        setTime(staticDate, getMilliseconds(date));\n        return staticDate;\n    }\n\n    function createZeroWidthEvent() {\n        return $(\"<div class='k-event'></div>\").appendTo(document.body);\n    }\n\n    function getWorkDays(options) {\n        if (options.workDays && options.workDays.length) {\n            return options.workDays;\n        }\n\n        var workDays = [];\n        var dayIndex = options.workWeekStart % 7;\n        var workWeekEnd = Math.abs(options.workWeekEnd % 7);\n\n        workDays.push(dayIndex);\n\n        while (workWeekEnd != dayIndex) {\n            if (dayIndex > 6 ) {\n                dayIndex -= 7;\n            } else {\n                dayIndex++;\n            }\n            workDays.push(dayIndex);\n        }\n        return workDays;\n    }\n\n    function setColspan(columnLevel) {\n        var count = 0;\n        if (columnLevel.columns) {\n            for (var i = 0; i < columnLevel.columns.length; i++) {\n                count += setColspan(columnLevel.columns[i]);\n            }\n            columnLevel.colspan = count;\n            return count;\n        } else {\n            columnLevel.colspan = 1;\n            return 1;\n        }\n    }\n\n    var TimelineGroupedView = kendo.Class.extend({\n        init: function(view) {\n            this._view = view;\n        },\n\n        _getTimeSlotByPosition: function(x, y, groupIndex) {\n            var group = this._view.groups[groupIndex];\n\n            return group.timeSlotByPosition(x, y);\n        },\n\n        _hideHeaders: function() {\n            var view = this._view;\n\n            view.timesHeader.find(\"table tr\").last().hide(); /*Chrome fix, use CSS selector*/\n            view.datesHeader.find(\"table tr\").last().hide();\n        },\n\n        _setColspan: function(timeColumn) {\n            setColspan(timeColumn);\n        },\n\n        _createRowsLayout: function(resources, rows, groupHeaderTemplate) {\n            var view = this._view;\n\n            return view._createRowsLayout(resources, rows, groupHeaderTemplate);\n        },\n\n        _createVerticalColumnsLayout: function(resources, rows, groupHeaderTemplate, columns) {\n\n            return columns;\n        },\n\n        _createColumnsLayout: function(resources, columns, groupHeaderTemplate) {\n            var view = this._view;\n\n            return view._createColumnsLayout(resources, columns, groupHeaderTemplate);\n        },\n\n        _getRowCount: function() {\n            var view = this._view;\n\n            return view._groupCount();\n        },\n\n        _getGroupsCount: function() {\n            return 1;\n        },\n\n        _addContent: function(dates, columnCount, groupsCount, rowCount, start, end, slotTemplate, isVerticalGrouped) {\n            var view = this._view;\n            var html = '';\n            var options = view.options;\n\n            var appendRow = function(date) {\n                var content = \"\";\n                var classes = \"\";\n                var tmplDate;\n\n                var resources = function(groupIndex) {\n                    return function() {\n                        return view._resourceBySlot({ groupIndex: groupIndex });\n                    };\n                };\n\n                if (kendo.date.isToday(dates[idx])) {\n                    classes += \"k-today\";\n                }\n\n                if (kendo.date.getMilliseconds(date) < kendo.date.getMilliseconds(options.workDayStart) ||\n                    kendo.date.getMilliseconds(date) >= kendo.date.getMilliseconds(options.workDayEnd) ||\n                    !view._isWorkDay(dates[idx])) {\n                    classes += \" k-nonwork-hour\";\n                }\n\n                content += '<td' + (classes !== \"\" ? ' class=\"' + classes + '\"' : \"\") + \">\";\n                tmplDate = kendo.date.getDate(dates[idx]);\n                kendo.date.setTime(tmplDate, kendo.date.getMilliseconds(date));\n\n                content += slotTemplate({ date: tmplDate, resources: resources(isVerticalGrouped ? rowIdx : groupIdx) });\n                content += \"</td>\";\n\n                return content;\n            };\n\n            for (var rowIdx = 0; rowIdx < rowCount; rowIdx++) {\n                html += '<tr>';\n                for (var groupIdx = 0; groupIdx < groupsCount; groupIdx++) {\n                    for (var idx = 0, length = columnCount; idx < length; idx++) {\n                        html += view._forTimeRange(start, end, appendRow);\n                    }\n                }\n                html += \"</tr>\";\n            }\n            return html;\n        },\n\n        _addTimeSlotsCollections: function(groupCount, datesCount, tableRows, interval, isVerticallyGrouped) {\n            var view = this._view;\n            var rowCount = tableRows.length;\n\n            if (isVerticallyGrouped) {\n                rowCount = Math.floor(rowCount / groupCount);\n            }\n\n            for (var groupIndex = 0; groupIndex < groupCount; groupIndex++) {\n                var rowMultiplier = 0;\n                var group = view.groups[groupIndex];\n                var time;\n\n                if (isVerticallyGrouped) {\n                    rowMultiplier = groupIndex;\n                }\n\n                var rowIndex = rowMultiplier * rowCount;\n                var cellMultiplier = 0;\n\n                if (!isVerticallyGrouped) {\n                    cellMultiplier = groupIndex;\n                }\n\n                var cells = tableRows[rowIndex].children;\n                var cellsPerGroup = cells.length / (!isVerticallyGrouped ? groupCount : 1);\n                var cellsPerDay = cellsPerGroup / datesCount;\n\n                for (var dateIndex = 0; dateIndex < datesCount; dateIndex++) {\n                    var cellOffset = dateIndex * cellsPerDay + (cellsPerGroup * cellMultiplier);\n                    time = getMilliseconds(new Date(+view.startTime()));\n\n                    for (var cellIndex = 0; cellIndex < cellsPerDay; cellIndex++) {\n\n                        view._addTimeSlotToCollection(group, cells, cellIndex, cellOffset, dateIndex, time, interval);\n                        time += interval;\n                    }\n                }\n            }\n        },\n\n        _getVerticalGroupCount: function(groupsCount) {\n\n            return groupsCount;\n        },\n\n        _getVerticalRowCount: function(eventGroups, groupIndex, maxRowCount) {\n            var view = this._view;\n\n            return view._isVerticallyGrouped() ? eventGroups[groupIndex].maxRowCount : maxRowCount;\n        },\n\n        _renderEvent: function(eventGroup, event, adjustedEvent, group, range, container) {\n            var view = this._view;\n            var element;\n\n            element = view._createEventElement(adjustedEvent.occurrence, event, range.head || adjustedEvent.head, range.tail || adjustedEvent.tail);\n            element.appendTo(container).css({ top: 0, height: view.options.eventHeight });\n\n            var eventObject = {\n                start: adjustedEvent.occurrence._startTime || adjustedEvent.occurrence.start,\n                end: adjustedEvent.occurrence._endTime || adjustedEvent.occurrence.end,\n                element: element,\n                uid: event.uid,\n                slotRange: range,\n                rowIndex: 0,\n                offsetTop: 0\n            };\n\n            eventGroup.events[event.uid] = eventObject;\n\n            view._inverseEventColor(element);\n            view.addContinuousEvent(group, range, element, event.isAllDay);\n            view._arrangeRows(eventObject, range, eventGroup);\n        },\n\n        _verticalCountForLevel: function(level) {\n            var view = this._view;\n\n            return view._rowCountForLevel(level);\n        },\n\n        _horizontalCountForLevel: function(level) {\n            var view = this._view;\n\n            return view._columnCountForLevel(level);\n        },\n\n        _updateCurrentVerticalTimeMarker: function(ranges, currentTime) {\n            var view = this._view;\n            var elementHtml = \"<div class='\" + CURRENT_TIME_MARKER_CLASS + \"'></div>\";\n            var headerWrap = view.datesHeader.find(DOT + SCHEDULER_HEADER_WRAP_CLASS);\n            var left = Math.round(ranges[0].innerRect(currentTime, new Date(currentTime.getTime() + 1), false).left);\n            var timesTableMarker = $(elementHtml)\n                    .prependTo(headerWrap)\n                    .addClass(CURRENT_TIME_MARKER_ARROW_CLASS + \"-down\");\n\n            timesTableMarker.css({\n                left: view._adjustLeftPosition(left - (outerWidth(timesTableMarker) * BORDER_SIZE_COEFF / 2)),\n                top: headerWrap.find(\"tr\").last().prev().position().top\n            });\n\n            $(elementHtml).prependTo(view.content).css({\n                left: view._adjustLeftPosition(left),\n                width: \"1px\",\n                height: view.content[0].scrollHeight - 1,\n                top: 0\n            });\n        },\n\n        _changeGroup: function() {\n            return undefined$1;\n        },\n\n        _prevGroupSlot: function(slot, group, isDay) {\n            var view = this._view;\n\n            if (view._isVerticallyGrouped()) {\n                return slot;\n            } else {\n                var collection = group._collection(0, isDay);\n                return collection.last();\n            }\n        },\n\n        _nextGroupSlot: function(slot, group, isDay) {\n            var view = this._view;\n\n            if (view._isVerticallyGrouped()) {\n                return slot;\n            } else {\n                var collection = group._collection(0, isDay);\n                return collection.first();\n            }\n        },\n\n        _verticalSlots: function(selection, reverse) {\n             var view = this._view;\n\n             return view._changeGroup(selection, reverse);\n        },\n\n         _verticalMethod: function(reverse) {\n\n              return reverse ? \"leftSlot\" : \"rightSlot\";\n         },\n\n         _normalizeVerticalSelection: function() {\n             return undefined$1;\n         },\n\n         _horizontalSlots: function(selection, group, method, startSlot, endSlot, multiple, reverse) {\n            var view = this._view;\n            var result = {};\n\n            result.startSlot = group[method](startSlot);\n            result.endSlot = group[method](endSlot);\n\n            if (!multiple && view._isHorizontallyGrouped() && (!result.startSlot || !result.endSlot)) {\n                result.startSlot = result.endSlot = view._changeGroup(selection, reverse);\n            }\n\n            return result;\n        },\n\n        _changeVerticalViewPeriod: function() {\n            return false;\n        },\n\n        _changeHorizontalViewPeriod: function(slots, shift, selection, reverse) {\n            var view = this._view;\n\n            if ((!slots.startSlot || !slots.endSlot ) && !shift && view._changeViewPeriod(selection, reverse, false)) {\n                return true;\n            }\n            return false;\n        },\n\n        _updateDirection: function(selection, ranges, shift, reverse) {\n            var view = this._view;\n\n            view._updateDirection(selection, ranges, shift, reverse, true);\n        },\n\n         _createMoveHint: function(range, adjustedEvent) {\n                var view = this._view;\n                var startSlot = range.start;\n\n                var hint = view._createEventElement(adjustedEvent.occurrence ,adjustedEvent.occurrence, false, false);\n\n                hint.addClass(\"k-event-drag-hint\");\n\n                var rect = range.innerRect(adjustedEvent.occurrence.start, adjustedEvent.occurrence.end, view.options.snap);\n                var width = rect.right - rect.left;\n\n                if (width < 0) {\n                    width = 0;\n                }\n\n                var left = view._adjustLeftPosition(rect.left);\n\n                var css = {\n                    left: left,\n                    top: startSlot.offsetTop,\n                    height: startSlot.offsetHeight,\n                    width: width\n                };\n\n                hint.css(css);\n\n                if (adjustedEvent.occurrence.inverseColor) {\n                    hint.addClass(INVERSE_COLOR_CLASS);\n                }\n\n                view._appendMoveHint(hint);\n         },\n\n         _adjustLeftPosition: function(left) {\n            var view = this._view;\n\n            if (view._isRtl) {\n                left -= (view.content[0].scrollWidth - view.content[0].clientWidth);\n            }\n\n            return left;\n         }\n    });\n\n    var TimelineGroupedByDateView = kendo.Class.extend({\n        init: function(view) {\n            this._view = view;\n        },\n\n        _getTimeSlotByPosition: function(x, y, groupIndex) {\n            var group = this._view.groups[groupIndex];\n\n            return group.timeSlotByPosition(x, y, true);\n        },\n\n        _hideHeaders: function() {\n            var view = this._view;\n\n            if (!view._isVerticallyGrouped()) {\n                view.timesHeader.find(\"table tr\").eq(2).hide();\n                view.datesHeader.find(\"table tr\").eq(2).hide();\n            } else {\n                        view.times.find(\".k-last\").hide();\n            }\n        },\n        _setColspan: function() {},\n\n        _createRowsLayout: function(resources, rows, groupHeaderTemplate, columns) {\n            var view = this._view;\n\n            return view._createDateLayout(columns, null, true);\n        },\n\n        _createVerticalColumnsLayout: function(resources, rows, groupHeaderTemplate) {\n            var view = this._view;\n\n            return view._createColumnsLayout(resources, null, groupHeaderTemplate);\n        },\n\n        _createColumnsLayout: function(resources, columns, groupHeaderTemplate, subColumns) {\n            var view = this._view;\n\n            return view._createColumnsLayout(resources, columns, groupHeaderTemplate, subColumns, true);\n        },\n\n        _getRowCount: function(level) {\n            var view = this._view;\n\n            return view._rowCountForLevel(level);\n        },\n\n        _getGroupsCount: function() {\n            var view = this._view;\n\n            return view._groupCount();\n        },\n\n        _addContent: function(dates, columnCount, groupsCount, rowCount, start, end, slotTemplate, isVerticalGrouped) {\n            var view = this._view;\n            var html = '';\n            var options = view.options;\n\n            var appendRow = function(date, isMajorTickColumn, isMiddleColumn, isLastSlotColumn, minorTickColumns, groupIdx) {\n                var content = \"\";\n                var classes = \"\";\n                var tmplDate;\n                var workDateIndex = view._isVerticallyGrouped() ? dateIndex : idx;\n\n                var resources = function(groupIndex) {\n                    return function() {\n                        return view._resourceBySlot({ groupIndex: groupIndex });\n                    };\n                };\n\n                if (kendo.date.isToday(dates[idx])) {\n                    classes += \"k-today\";\n                }\n\n                if (kendo.date.getMilliseconds(date) < kendo.date.getMilliseconds(options.workDayStart) ||\n                    kendo.date.getMilliseconds(date) >= kendo.date.getMilliseconds(options.workDayEnd) ||\n                    !view._isWorkDay(dates[workDateIndex])) {\n                    classes += \" k-nonwork-hour\";\n                }\n\n                content += '<td' + (classes !== \"\" ? ' class=\"' + classes + '\"' : \"\") + \">\";\n                tmplDate = kendo.date.getDate(dates[idx]);\n                kendo.date.setTime(tmplDate, kendo.date.getMilliseconds(date));\n\n                content += slotTemplate({ date: tmplDate, resources: resources(groupIdx) });\n                content += \"</td>\";\n\n                return content;\n            };\n\n            var tempStart = new Date(start),\n                minorTickCount = view.options.minorTickCount,\n                msMajorInterval = view.options.majorTick * MS_PER_MINUTE,\n                msInterval = msMajorInterval / minorTickCount || 1,\n                dateIndex;\n\n            for (var rowIdx = 0; rowIdx < rowCount; rowIdx++) {\n                html += '<tr>';\n\n                 if ((rowIdx % (rowCount / view._dates.length)) === 0) {\n                   dateIndex = (rowIdx / (rowCount / view._dates.length));\n                   tempStart = new Date(view._dates[dateIndex]);\n                   kendo.date.setTime(tempStart, kendo.date.getMilliseconds(start));\n                  }\n\n                for (var idx = 0, length = columnCount; idx < length; idx++) {\n\n                    html += view._forTimeRange(tempStart, end, appendRow, isVerticalGrouped, groupsCount);\n\n                    if (isVerticalGrouped) {\n                    setTime(tempStart, msInterval, false);\n                        break;\n                    }\n                }\n               html += \"</tr>\";\n            }\n\n            return html;\n        },\n\n        _addTimeSlotsCollections: function(groupCount, datesCount, tableRows, interval, isVerticallyGrouped) {\n            var view = this._view;\n            var rowCount = tableRows.length;\n\n             if (isVerticallyGrouped) {\n                rowCount = rowCount / datesCount;\n             }\n\n            for (var dateIndex = 0; dateIndex < datesCount; dateIndex++) {\n                var rowMultiplier = 0;\n                var time;\n\n                if (isVerticallyGrouped) {\n                    rowMultiplier = dateIndex;\n                }\n\n                var rowIndex = rowMultiplier * rowCount;\n                var cellMultiplier = 0;\n                var cells = tableRows[rowIndex].children;\n                var cellsPerGroup = isVerticallyGrouped ? rowCount : cells.length / (datesCount * groupCount);\n                var cellsPerDay = cells.length / datesCount;\n                var cellOffset;\n\n                time = getMilliseconds(new Date(+view.startTime()));\n\n                for (var cellIndex = 0; cellIndex < cellsPerGroup; cellIndex++) {\n                    if (!isVerticallyGrouped) {\n                        cellOffset = (dateIndex * cellsPerDay) + (groupCount * cellIndex);\n                        cellMultiplier++;\n                    } else {\n                        cellOffset = 0;\n                        cells = tableRows[cellIndex + (cellsPerGroup * dateIndex)].children;\n                    }\n\n                    for (var groupIndex = 0; groupIndex < groupCount; groupIndex++) {\n                        var group = view.groups[groupIndex];\n\n                        view._addTimeSlotToCollection(group, cells, groupIndex, cellOffset, dateIndex, time, interval);\n                    }\n                    time += interval;\n                }\n             }\n        },\n\n        _getVerticalGroupCount: function() {\n            var view = this._view;\n\n            return view.content.find(\"tr\").length;\n        },\n\n        _getVerticalRowCount: function(eventGroups, groupIndex, maxRowCount) {\n\n            return maxRowCount;\n        },\n\n        _renderEvent: function(eventGroup, event, adjustedEvent, group, range, container, startIndex, endIndex) {\n            var view = this._view;\n            var element;\n            var eventObjects = [];\n\n            for (var i = range.start.index; i <= range.end.index; i++) {\n                element = view._createEventElement(adjustedEvent.occurrence, event, i !== endIndex, i !== startIndex);\n                element.appendTo(container).css({ top: 0, height: view.options.eventHeight });\n                var currentSlot = group._timeSlotCollections[0]._slots[i];\n                var dateRange = group.timeSlotRanges(currentSlot.start, currentSlot.end, false)[0];\n\n                    var eventObject = {\n                    start: i === startIndex ? adjustedEvent.occurrence._startTime || adjustedEvent.occurrence.start : currentSlot.start,\n                    end: i === endIndex ? adjustedEvent.occurrence._endTime || adjustedEvent.occurrence.end : currentSlot.end,\n                    element: element,\n                    uid: event.uid,\n                    slotRange: dateRange,\n                    rowIndex: 0,\n                    offsetTop: 0\n                };\n\n                eventGroup.events[event.uid] = eventObject;\n                eventObjects.push(eventObject);\n\n                view.addContinuousEvent(group, dateRange, element, event.isAllDay);\n                view._arrangeRows(eventObject, dateRange, eventGroup);\n            }\n            eventGroup.events[event.uid] = eventObjects;\n        },\n\n        _verticalCountForLevel: function(level) {\n            var view = this._view;\n\n            return view._columnCountForLevel(level);\n        },\n\n        _horizontalCountForLevel: function(level, columnLevel) {\n            var view = this._view;\n\n            return view._columnCountForLevel(columnLevel) / view._columnCountForLevel(2);\n        },\n\n        _updateCurrentVerticalTimeMarker: function(ranges,currentTime) {\n            var view = this._view;\n            var firstTimesCell = view.times.find(\"tr\").first().find(\"th\").first();\n            var lastTimesCell = view.times.find(\"tr\").first().find(\"th\").last();\n            var elementHtml = \"<div class='\" + CURRENT_TIME_MARKER_CLASS + \"'></div>\";\n            var timesTableMarker = $(elementHtml).prependTo(view.times);\n            var markerTopPosition = Math.round(ranges[0].innerRect(currentTime, new Date(currentTime.getTime() + 1), false).top);\n            var timesTableMarkerCss = {};\n\n            if (this._isRtl) {\n                timesTableMarkerCss.right = firstTimesCell.position().left + outerHeight(firstTimesCell) - outerHeight(lastTimesCell);\n                timesTableMarker.addClass(CURRENT_TIME_MARKER_ARROW_CLASS + \"-left\");\n            } else {\n                timesTableMarkerCss.left = lastTimesCell.position().left;\n                timesTableMarker.addClass(CURRENT_TIME_MARKER_ARROW_CLASS + \"-right\");\n            }\n\n            timesTableMarkerCss.top = markerTopPosition - (outerWidth(timesTableMarker) * BORDER_SIZE_COEFF / 2);\n\n            timesTableMarker.css(timesTableMarkerCss);\n\n            $(elementHtml).prependTo(view.content).css({\n                top: markerTopPosition,\n                height: \"1px\",\n                right: \"1px\",\n                width: view.content[0].scrollWidth,\n                left: 0\n            });\n        },\n\n        _changeGroup: function(selection, previous, slot) {\n             var view = this._view;\n\n             if (!slot) {\n                selection.groupIndex = previous ? view.groups.length - 1 : 0;\n             }\n        },\n\n         _prevGroupSlot: function(slot) {\n              return slot;\n        },\n\n        _nextGroupSlot: function(slot) {\n              return slot;\n        },\n\n        _changeDate: function(selection, reverse, slot) {\n            var view = this._view;\n            var group = view.groups[selection.groupIndex];\n            var collections, index;\n\n            if (reverse) {\n                  collections = group._getCollections(false);\n                  index = slot.index - 1;\n\n                  if (index >= 0) {\n                      return collections[0]._slots[index];\n                  }\n              } else {\n                  collections = group._getCollections(false);\n                  index = slot.index + 1;\n\n                  if (collections[0] && collections[0]._slots[index]) {\n                      return collections[0]._slots[index];\n                  }\n               }\n        },\n\n        _verticalSlots: function(selection, reverse, slot) {\n            return this._changeDate(selection, reverse, slot);\n        },\n\n        _verticalMethod: function(reverse, multiple) {\n            if (multiple) {\n               return reverse ? \"upSlot\" : \"downSlot\";\n            } else {\n               return reverse ? \"leftSlot\" : \"rightSlot\";\n            }\n        },\n\n        _normalizeVerticalSelection: function(selection, ranges, reverse, multiple) {\n            var view = this._view;\n\n            if (!multiple) {\n                return view._normalizeVerticalSelection(selection, ranges, reverse);\n            }\n\n            return undefined$1;\n        },\n\n        _horizontalSlots: function(selection, group, method, startSlot, endSlot, multiple, reverse) {\n             var view = this._view;\n             var tempSlot = view._changeGroup(selection, reverse);\n             var result = {};\n\n            if (!tempSlot) {\n                if (!view._isVerticallyGrouped()) {\n                    result.startSlot = group[method](startSlot);\n                    result.endSlot = group[method](endSlot);\n                }\n\n            } else {\n                result.startSlot = result.endSlot = tempSlot;\n            }\n\n            return result;\n        },\n\n        _changeVerticalViewPeriod: function(slots, shift, selection, reverse) {\n            var view = this._view;\n\n            if ((!slots.startSlot || !slots.endSlot) && !shift &&\n                view._changeViewPeriod(selection, reverse, view._isVerticallyGrouped())) {\n                return true;\n            }\n            return false;\n        },\n\n        _changeHorizontalViewPeriod: function(slots, shift, selection, reverse) {\n           var view = this._view;\n\n           if ( view._isVerticallyGrouped()) {\n               return false;\n           }\n\n           if ((!slots.startSlot || !slots.endSlot ) && !shift && view._changeViewPeriod(selection, reverse, false)) {\n                return true;\n            }\n            return false;\n        },\n\n        _updateDirection: function(selection, ranges, shift, reverse) {\n            var view = this._view;\n\n            view._updateDirection(selection, ranges, shift, reverse, !view._isVerticallyGrouped());\n        },\n\n         _createMoveHint: function(range, adjustedEvent) {\n                var view = this._view;\n                var startSlot = range.start;\n                var startEnd = range.end;\n\n                for (var slotIdx = startSlot.index; slotIdx <= startEnd.index; slotIdx++) {\n                    var slot = range.collection._slots[slotIdx];\n                    var hint = view._createEventElement(adjustedEvent.occurrence ,adjustedEvent.occurrence, false, false);\n\n                    hint.addClass(\"k-event-drag-hint\");\n\n                    var css = {\n                        left: slot.offsetLeft + 2,\n                        top: slot.offsetTop,\n                        height: view.options.eventHeight,\n                        width: slot.offsetWidth\n                    };\n\n                    hint.css(css);\n\n                    if (adjustedEvent.occurrence.inverseColor) {\n                        hint.addClass(INVERSE_COLOR_CLASS);\n                    }\n\n                    view._appendMoveHint(hint);\n                }\n         },\n\n         _adjustLeftPosition: function(left) {\n             var view = this._view;\n\n            if (view._isRtl && !view._isVerticallyGrouped()) {\n                left -= (view.content[0].scrollWidth - view.content[0].offsetWidth);\n            }\n\n            return left;\n         }\n });\n\n    kendo.ui.scheduler.TimelineGroupedView = TimelineGroupedView;\n    kendo.ui.scheduler.TimelineGroupedByDateView = TimelineGroupedByDateView;\n\n    var TimelineView = SchedulerView.extend({\n        init: function(element, options) {\n            var that = this,\n            zeroWidthEvent = createZeroWidthEvent();\n\n            SchedulerView.fn.init.call(that, element, options);\n\n            that._zeroWidthEventOffset = zeroWidthEvent.outerWidth();\n            zeroWidthEvent.remove();\n\n            that._groupedView = that._getGroupedView();\n\n            that.title = that.options.title || that.options.name;\n\n            that._workDays = getWorkDays(that.options);\n\n            that._templates();\n\n            that._editable();\n\n            that.calculateDateRange();\n\n            that._groups();\n\n            that._currentTime(true);\n        },\n        name: \"timeline\",\n\n        _isVirtualized: function() {\n            return false;\n        },\n\n        _getGroupedView: function() {\n\n            if (this._isGroupedByDate()) {\n                   return new kendo.ui.scheduler.TimelineGroupedByDateView(this);\n            } else {\n                   return new kendo.ui.scheduler.TimelineGroupedView(this);\n            }\n        },\n\n        _getNextEventIndexBySlot: function(slot, sortedEvents, groupIndex) {\n           if (this._isVerticallyGrouped()) {\n               return kendo.ui.SchedulerView.fn._getNextEventIndexBySlot.call(this, slot, sortedEvents, groupIndex);\n           }\n\n            var tempIndex = 0;\n\n            for (var i = 0; i < sortedEvents.length; i++) {\n                if (slot.startDate() > sortedEvents[i].start.startDate()) {\n                    tempIndex++;\n                    continue;\n                }\n\n                if (slot.startDate().getTime() === sortedEvents[i].start.startDate().getTime() &&\n                 groupIndex > sortedEvents[i].start.groupIndex) {\n                      tempIndex++;\n                      continue;\n                }\n\n                 break;\n\n            }\n            return tempIndex;\n        },\n\n        _getSelectedSlot: function(slot, sortedEvents, event, idx, pad, prev) {\n            if (this._isVerticallyGrouped()) {\n               return kendo.ui.SchedulerView.fn._getSelectedSlot.call(this, slot, sortedEvents, event, idx, pad, prev);\n            }\n\n            return slot;\n        },\n\n        _getSortedEvents: function(uniqueAllEvents) {\n            if (this._isVerticallyGrouped()) {\n               return kendo.ui.SchedulerView.fn._getSortedEvents.call(this, uniqueAllEvents);\n            }\n\n            return uniqueAllEvents.sort(function(first, second) {\n                var result = first.start.startDate().getTime() - second.start.startDate().getTime();\n\n                if (result === 0) {\n                    if (first.start.isDaySlot && !second.start.isDaySlot) {\n                            result = -1;\n                    }\n\n                    if (!first.start.isDaySlot && second.start.isDaySlot) {\n                            result = 1;\n                    }\n                }\n\n                if (result === 0) {\n                    result = first.start.groupIndex - second.start.groupIndex;\n                }\n\n                if (result === 0) {\n                    result = $(first.element).index() - $(second.element).index();\n                }\n\n                return result;\n            });\n        },\n\n        _currentTimeMarkerUpdater: function() {\n            this._updateCurrentTimeMarker(new Date());\n        },\n\n        _scrollTo: function(element, container) {\n            SchedulerView.fn._scrollTo.call(this, element, container);\n\n            var elementOffset = element.offsetLeft,\n                elementOffsetDir = element.offsetWidth,\n                containerScroll = container.scrollLeft,\n                containerOffsetDir = container.clientWidth,\n                rightDistance = elementOffset + elementOffsetDir,\n                result = 0;\n\n                if (containerScroll > elementOffset) {\n                    result = elementOffset;\n                } else if (rightDistance > (containerScroll + containerOffsetDir)) {\n                    if (elementOffsetDir <= containerOffsetDir) {\n                        result = (rightDistance - containerOffsetDir);\n                    } else {\n                        result = elementOffset;\n                    }\n                } else {\n                    result = containerScroll;\n                }\n                container.scrollLeft = result;\n        },\n\n        _updateCurrentTimeMarker: function(currentTime) {\n            var options = this.options;\n\n            this.datesHeader.find(DOT + CURRENT_TIME_MARKER_CLASS).remove();\n            this.times.find(DOT + CURRENT_TIME_MARKER_CLASS).remove();\n            this.content.find(DOT + CURRENT_TIME_MARKER_CLASS).remove();\n\n            if (!this._isInDateSlot({ start: currentTime, end: currentTime })) {\n                return;\n            }\n\n            if (options.currentTimeMarker.useLocalTimezone === false) {\n                var timezone = options.dataSource.options.schema.timezone;\n\n                if (options.dataSource && timezone) {\n                    var timezoneOffset = kendo.timezone.offset(currentTime, timezone);\n                    currentTime = kendo.timezone.convert(currentTime, currentTime.getTimezoneOffset(), timezoneOffset);\n                }\n            }\n\n            var groupsCount = !options.group || options.group.orientation == \"vertical\" ? 1 : this.groups.length;\n\n            for (var groupIndex = 0; groupIndex < groupsCount; groupIndex++) {\n                var currentGroup = this.groups[groupIndex];\n\n                if (!currentGroup) {\n                    return;\n                }\n\n                var utcCurrentTime = kendo.date.toUtcTime(currentTime);\n                var ranges = currentGroup.timeSlotRanges(utcCurrentTime, utcCurrentTime + 1);\n\n                if (ranges.length === 0) {\n                    return;\n                }\n\n                var collection = ranges[0].collection;\n                var slotElement = collection.slotByStartDate(currentTime);\n\n                if (slotElement) {\n\n                    if (this._isVerticallyGrouped()) {\n                        this._groupedView._updateCurrentVerticalTimeMarker(ranges,currentTime);\n                    } else {\n                        var elementHtml = \"<div class='\" + CURRENT_TIME_MARKER_CLASS + \"'></div>\";\n                        var headerWrap = this.datesHeader.find(DOT + SCHEDULER_HEADER_WRAP_CLASS);\n                        var left = Math.round(ranges[0].innerRect(currentTime, new Date(currentTime.getTime() + 1), false).left);\n                        var timesTableMarker = $(elementHtml)\n                                .prependTo(headerWrap)\n                                .addClass(CURRENT_TIME_MARKER_ARROW_CLASS + \"-down\");\n\n                        timesTableMarker.css({\n                            left: this._adjustLeftPosition(left - (outerWidth(timesTableMarker) * BORDER_SIZE_COEFF / 2)),\n                            top: headerWrap.find(\"tr\").last().prev().position().top\n                        });\n\n                        $(elementHtml).prependTo(this.content).css({\n                            left: this._adjustLeftPosition(left),\n                            width: \"1px\",\n                            height: this.content[0].scrollHeight - 1,\n                            top: 0\n                        });\n                    }\n                }\n            }\n        },\n\n        _adjustLeftPosition: function(left) {\n            return this._groupedView._adjustLeftPosition(left);\n        },\n\n        _currentTime: function(setUpdateTimer) {\n            var that = this;\n            var markerOptions = that.options.currentTimeMarker;\n\n            if (markerOptions !== false && markerOptions.updateInterval !== undefined$1) {\n                that._currentTimeMarkerUpdater();\n\n                if (setUpdateTimer) {\n                    that._currentTimeUpdateTimer = setInterval(this._currentTimeMarkerUpdater.bind(that), markerOptions.updateInterval);\n                }\n            }\n        },\n\n        _editable: function() {\n            if (this.options.editable) {\n                if (this._isMobile()) {\n                    this._touchEditable();\n                } else {\n                    this._mouseEditable();\n                }\n            }\n        },\n\n        _mouseEditable: function() {\n            var that = this;\n            that.element.on(\"click\" + NS, \".k-event a:has(.k-i-x),.k-event a:has(.k-svg-i-x)\", function(e) {\n                that.trigger(\"remove\", { uid: $(this).closest(\".k-event\").attr(kendo.attr(\"uid\")) });\n                e.preventDefault();\n            });\n\n            if (that.options.editable.create !== false) {\n                that.element.on(\"dblclick\" + NS, \".k-scheduler-content td\", function(e) {\n                    var slot = that._slotByPosition(e.pageX, e.pageY);\n\n                    if (slot) {\n                        var resourceInfo = that._resourceBySlot(slot);\n                        that.trigger(\"add\", { eventInfo: extend({ start: slot.startDate(), end: slot.endDate() }, resourceInfo) });\n                    }\n\n                    e.preventDefault();\n                });\n            }\n\n            if (that.options.editable.update !== false) {\n                that.element.on(\"dblclick\" + NS, \".k-event\", function(e) {\n                    that.trigger(\"edit\", { uid: $(this).closest(\".k-event\").attr(kendo.attr(\"uid\")) });\n                    e.preventDefault();\n                });\n            }\n        },\n\n        _touchEditable: function() {\n            var that = this;\n            var threshold = 0;\n\n            if (kendo.support.mobileOS.android) {\n                threshold = 5;\n            }\n\n            if (that.options.editable.create !== false) {\n                that._addUserEvents = new kendo.UserEvents(that.element, {\n                    threshold: threshold,\n                    useClickAsTap: !kendo.support.browser.edge,\n                    filter: \".k-scheduler-content td\",\n                    tap: function(e) {\n                        if (that._scrolling) {\n                            return;\n                        }\n                        var x = e.x.location !== undefined$1 ? e.x.location : e.x;\n                        var y = e.y.location !== undefined$1 ? e.y.location : e.y;\n                        var slot = that._slotByPosition(x, y);\n\n                        if (slot) {\n                            var resourceInfo = that._resourceBySlot(slot);\n                            that.trigger(\"add\", { eventInfo: extend({ start: slot.startDate(), end: slot.endDate() }, resourceInfo) });\n                        }\n\n                        e.preventDefault();\n                    }\n                });\n            }\n\n            if (that.options.editable.update !== false) {\n                that._editUserEvents = new kendo.UserEvents(that.element, {\n                    threshold: threshold,\n                    useClickAsTap: !kendo.support.browser.edge,\n                    filter: \".k-event\",\n                    tap: function(e) {\n                        if (that._scrolling) {\n                            return;\n                        }\n                        var eventElement = $(e.target).closest(\".k-event\");\n                        var touchElement = $(e.touch.initialTouch);\n\n                        if (touchElement.is(\".k-i-x,.k-svg-i-x\")) {\n                            that.trigger(\"remove\", { uid: eventElement.attr(kendo.attr(\"uid\")) });\n                        } else if (!eventElement.hasClass(\"k-event-active\")) {\n                            that.trigger(\"edit\", { uid: eventElement.attr(kendo.attr(\"uid\")) });\n                        }\n\n                        e.preventDefault();\n                    }\n                });\n            }\n        },\n\n        _slotByPosition: function(x, y) {\n            var slot;\n            var content = this.content;\n            var offset = content.offset();\n            var groupIndex;\n\n            x -= offset.left;\n            y -= offset.top;\n\n            if (this._isRtl) {\n                var browser = kendo.support.browser;\n\n                if (browser.mozilla || (browser.webkit && browser.version >= 85)) {\n                     x += (content[0].scrollWidth - content[0].offsetWidth);\n                     x += content[0].scrollLeft;\n                } else if (browser.msie) {\n                     x -= kendo.scrollLeft(content);\n                     x += content[0].scrollWidth - content[0].offsetWidth;\n                } else if (browser.webkit) {\n                     x += content[0].scrollLeft;\n                }\n            } else {\n                x += content[0].scrollLeft;\n            }\n\n            y += content[0].scrollTop;\n\n            x = Math.ceil(x);\n            y = Math.ceil(y);\n\n            for (groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n\n                 slot = this._groupedView._getTimeSlotByPosition(x, y, groupIndex);\n\n                 if (slot) {\n                     return slot;\n                 }\n            }\n\n            return null;\n        },\n\n        options: {\n            name: \"TimelineView\",\n            title: \"Timeline\",\n            selectedDateFormat: \"{0:D}\",\n            selectedShortDateFormat: \"{0:d}\",\n            selectedMobileDateFormat: \"{0:MMM dd}\",\n            date: kendo.date.today(),\n            startTime: kendo.date.today(),\n            endTime: kendo.date.today(),\n            showWorkHours: false,\n            minorTickCount: 2,\n            editable: true,\n            workDayStart: new Date(1980, 1, 1, 8, 0, 0),\n            workDayEnd: new Date(1980, 1, 1, 17, 0, 0),\n            workWeekStart: 1,\n            workWeekEnd: 5,\n            majorTick: 60,\n            eventHeight: 25,\n            eventMinWidth: 0,\n            columnWidth: 100,\n            groupHeaderTemplate: ({ text }) => text,\n            majorTimeHeaderTemplate: ({ date }) => kendo.toString(date, 't'),\n            slotTemplate: () => \"&nbsp;\",\n            eventTemplate: EVENT_TEMPLATE,\n            dateHeaderTemplate: DATA_HEADER_TEMPLATE,\n            footer: {\n                command: \"workDay\"\n            },\n            currentTimeMarker: {\n                updateInterval: 10000,\n                useLocalTimezone: true\n            },\n            ongoingEvents: {\n                cssClass: null,\n                enabled: true,\n                updateInterval: 60000\n            },\n            messages: {\n                defaultRowText: \"All events\",\n                showFullDay: \"Show full day\",\n                showWorkDay: \"Show business hours\"\n            }\n        },\n\n        events: [\"remove\", \"add\", \"edit\"],\n\n        _templates: function() {\n            var options = this.options,\n                settings = extend({}, kendo.Template, options.templateSettings);\n\n            this.eventTemplate = kendo.template(EVENT_WRAPPER_TEMPLATE);\n            this.majorTimeHeaderTemplate = kendo.template(options.majorTimeHeaderTemplate, settings);\n            this.dateHeaderTemplate = kendo.template(options.dateHeaderTemplate, settings);\n            this.slotTemplate = kendo.template(options.slotTemplate, settings);\n            this.groupHeaderTemplate = kendo.template(options.groupHeaderTemplate, settings);\n        },\n\n        _render: function(dates) {\n            var that = this;\n\n            dates = dates || [];\n\n            that._dates = dates;\n\n            that._startDate = dates[0];\n\n            that._endDate = dates[(dates.length - 1) || 0];\n\n            that._calculateSlotRanges();\n\n            that.createLayout(that._layout(dates));\n\n            that._content(dates);\n\n            that._footer();\n\n            that._setContentWidth();\n\n            that.refreshLayout();\n\n            that.datesHeader.on(\"click\" + NS, \".k-nav-day\", function(e) {\n                var th = $(e.currentTarget).closest(\"th\");\n\n                var slot = that._slotByPosition(th.offset().left, that.content.offset().top);\n\n                that.trigger(\"navigate\", { view: \"timeline\", date: slot.startDate() });\n            });\n\n            that._groupedView._hideHeaders();\n        },\n\n        _setContentWidth: function() {\n            var content = this.content;\n            var contentWidth = content.width();\n            var contentTable = this.content.find(\"table\");\n            var columnCount = contentTable.find(\"tr\").first().children().length;\n\n            var minWidth = 100;\n            var calculatedWidth = columnCount * this.options.columnWidth;\n\n            if (contentWidth < calculatedWidth) {\n                minWidth = Math.ceil((calculatedWidth / contentWidth) * 100);\n            }\n\n            contentTable.add(this.datesHeader.find(\"table\"))\n                .css(\"width\", minWidth + \"%\");\n        },\n\n        _calculateSlotRanges: function() {\n            var dates = this._dates;\n            var slotStartTime = this.startTime();\n            var slotEndTime = this.endTime();\n\n            slotEndTime = getMilliseconds(slotEndTime);\n            slotStartTime = getMilliseconds(slotStartTime);\n\n            if (slotEndTime === slotStartTime) {\n                slotEndTime += MS_PER_DAY - 1;\n            } else if (slotEndTime < slotStartTime) {\n                slotEndTime += MS_PER_DAY;\n            }\n\n            var slotRanges = [];\n            for (var i = 0; i < dates.length; i++) {\n                var rangeStart = getDate(dates[i]);\n                setTime(rangeStart, slotStartTime);\n\n                var rangeEnd = getDate(dates[i]);\n                setTime(rangeEnd, slotEndTime);\n\n                slotRanges.push({\n                    start: kendo.date.toUtcTime(rangeStart),\n                    end: kendo.date.toUtcTime(rangeEnd)\n                });\n            }\n\n            this._slotRanges = slotRanges;\n        },\n\n        _forTimeRange: function(min, max, action, verticalByDate, groupsCount) {\n            min = toInvariantTime(min); //convert the date to 1/2/1980 and sets the time\n            max = toInvariantTime(max);\n\n            var that = this,\n                msMin = getMilliseconds(min),\n                msMax = getMilliseconds(max),\n                minorTickCount = that.options.minorTickCount,\n                msMajorInterval = that.options.majorTick * MS_PER_MINUTE,\n                msInterval = msMajorInterval / minorTickCount || 1,\n                start = new Date(+min),\n                idx = 0, length,\n                html = \"\";\n\n            length = MS_PER_DAY / msInterval;\n\n            if (msMin != msMax) {\n                if (msMin > msMax) {\n                    msMax += MS_PER_DAY;\n                }\n\n                length = ((msMax - msMin) / msInterval);\n            }\n\n            length = verticalByDate ? 1 : Math.round(length);\n\n            if (groupsCount) {\n                length = length * groupsCount;\n            }\n\n            for (; idx < length; idx++) {\n                var majorTickDivider = idx % (msMajorInterval / msInterval);\n                var isMajorTickColumn = majorTickDivider === 0;\n                var isMiddleColumn = majorTickDivider < minorTickCount - 1;\n                var isLastSlotColumn = majorTickDivider === minorTickCount - 1;\n                var minorTickColumns = minorTickCount;\n\n                if (length % minorTickCount !== 0) {\n                    var isLastMajorSlot = (length - (idx + 1)) < minorTickCount;\n                    if (isMajorTickColumn && isLastMajorSlot) {\n                        minorTickColumns = length % minorTickCount;\n                    }\n                }\n\n                html += action(start, isMajorTickColumn, isMiddleColumn, isLastSlotColumn, minorTickColumns, idx % groupsCount);\n\n                if (!verticalByDate) {\n                    if (groupsCount) {\n                        if ((idx % groupsCount) === groupsCount - 1) {\n                            setTime(start, msInterval, false);\n                        }\n                    } else {\n                        setTime(start, msInterval, false);\n                    }\n                }\n            }\n\n            return html;\n        },\n\n        _layout: function(dates) {\n            var timeColumns = [];\n            var columns = [];\n            var that = this;\n            var rows = [{ text: that.options.messages.defaultRowText }];\n            var groupedView = that._groupedView;\n\n            var minorTickSlots = [];\n            for (var minorTickIndex = 0; minorTickIndex < that.options.minorTickCount; minorTickIndex++) {\n                minorTickSlots.push({\n                    text: \"&#8203;\",\n                    className: \"k-last\",\n                    minorTicks: true\n                });\n            }\n\n            this._forTimeRange(that.startTime(), that.endTime(), function(date, majorTick, middleColumn, lastSlotColumn, minorSlotsCount) {\n                var template = that.majorTimeHeaderTemplate;\n\n                if (majorTick) {\n                    var timeColumn = {\n                        text: template({ date: date }),\n                        className: lastSlotColumn ? \"k-slot-cell\" : \"\",\n                        columns: minorTickSlots.slice(0, minorSlotsCount)\n                    };\n\n                    groupedView._setColspan(timeColumn);\n\n                    timeColumns.push(timeColumn);\n                }\n            });\n\n            for (var idx = 0; idx < dates.length; idx++) {\n                columns.push({\n                    text: that.dateHeaderTemplate({ date: dates[idx] }),\n                    className: \"k-slot-cell\",\n                    columns: timeColumns.slice(0)\n                });\n            }\n\n            var resources = this.groupedResources;\n            if (resources.length) {\n                if (this._groupOrientation() === \"vertical\") {\n                    rows = groupedView._createRowsLayout(resources, null, this.groupHeaderTemplate, columns);\n                    columns = groupedView._createVerticalColumnsLayout(resources, null, this.groupHeaderTemplate, columns);\n\n                } else {\n                    columns = groupedView._createColumnsLayout(resources, columns, this.groupHeaderTemplate, columns);\n                }\n            }\n\n            return {\n                columns: columns,\n                rows: rows\n            };\n        },\n\n        _footerItems: function() {\n            var that = this,\n                items = [],\n                options = this.options,\n                command = options.footer.command;\n\n            if (that._isMobile()) {\n                items.push(that._defaultTools.todayMobile);\n            }\n\n            if (command && command === \"workDay\") {\n                if (that._isMobile()) {\n                    items.push(that._defaultTools.fulldayMobile);\n                } else {\n                    items.push(that._defaultTools.fulldayDesktop);\n                }\n            }\n\n            return items;\n        },\n\n        toggleFullDay: function() {\n            var options = this.options;\n\n            this.trigger(\"navigate\", { view: this.name || options.name, date: options.date, isWorkDay: !options.showWorkHours });\n        },\n\n        _columnCountForLevel: function(level) {\n            var columnLevel = this.columnLevels[level];\n            return columnLevel ? columnLevel.length : 0;\n        },\n\n        _rowCountForLevel: function(level) {\n            var rowLevel = this.rowLevels[level];\n            return rowLevel ? rowLevel.length : 0;\n        },\n\n        _isWorkDay: function(date) {\n            var day = date.getDay();\n            var workDays = this._workDays;\n\n            for (var i = 0; i < workDays.length; i++) {\n                if (workDays[i] === day) {\n                    return true;\n                }\n            }\n            return false;\n        },\n\n        _content: function(dates) {\n            var that = this;\n            var start = that.startTime();\n            var end = this.endTime();\n            var groupsCount = 1;\n            var rowCount = 1;\n            var columnCount = dates.length;\n            var html = '';\n            var resources = this.groupedResources;\n            var slotTemplate = this.slotTemplate;\n            var isVerticalGrouped = false;\n\n            if (resources.length) {\n                isVerticalGrouped = that._groupOrientation() === \"vertical\";\n\n                if (isVerticalGrouped) {\n                    rowCount = that._groupedView._getRowCount(this.rowLevels.length - 1);\n                    groupsCount = that._groupedView._getGroupsCount();\n                } else {\n                    groupsCount = that._groupCount();\n                }\n            }\n\n            html += '<tbody>';\n            html += that._groupedView._addContent(dates, columnCount, groupsCount, rowCount, start, end, slotTemplate, isVerticalGrouped);\n            html += '</tbody>';\n\n            this.content.find(\"table\").append(html);\n        },\n\n        _groups: function() {\n            var groupCount = this._groupCount();\n            var dates = this._dates;\n            var columnCount = dates.length;\n\n            this.groups = [];\n\n            for (var idx = 0; idx < groupCount; idx++) {\n                var view = this._addResourceView(idx);\n\n                var start = dates[0];\n                var end = dates[(dates.length - 1) || 0];\n\n                var startTime = getMilliseconds(this.startTime());\n                var endTime = getMilliseconds(this.endTime());\n\n                if (startTime !== 0 && endTime <= startTime) {\n                    start = getDate(start);\n                    setTime(start, startTime);\n\n                    end = getDate(end);\n                    setTime(end, endTime);\n                }\n\n                view.addTimeSlotCollection(start, kendo.date.addDays(end, 1));\n            }\n\n            this._timeSlotGroups(groupCount, columnCount);\n        },\n\n        _isHorizontallyGrouped: function() {\n            return this.groupedResources.length && this._groupOrientation() === \"horizontal\";\n        },\n\n        _timeSlotGroups: function(groupCount, datesCount) {\n            var interval = this._timeSlotInterval();\n            var isVerticallyGrouped = this._isVerticallyGrouped();\n            var tableRows = this.content.find(\"tr\");\n\n            this._groupedView._addTimeSlotsCollections(groupCount, datesCount, tableRows, interval, isVerticallyGrouped);\n\n        },\n\n        _addTimeSlotToCollection: function(group, cells, cellIndex, cellOffset, dateIndex, time, interval) {\n              var cell = cells[cellIndex + cellOffset];\n              var collection = group.getTimeSlotCollection(0);\n              var currentDate = this._dates[dateIndex];\n              var currentTime = Date.UTC(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate());\n              var start = currentTime + time;\n              var end = start + interval;\n\n              collection.addTimeSlot(cell, start, end, true);\n        },\n\n        startDate: function() {\n            return this._startDate;\n        },\n\n        endDate: function() {\n            return this._endDate;\n        },\n\n        visibleEndDate: function() {\n            var startTime = getMilliseconds(this.startTime());\n            var endTime = getMilliseconds(this.endTime());\n            var endDate = this.endDate();\n\n            if (startTime !== 0 && endTime <= startTime) {\n                endDate = kendo.date.addDays(endDate, 1);\n            }\n\n            return endDate;\n        },\n\n        startTime: function() {\n            var options = this.options;\n            return options.showWorkHours ? options.workDayStart : options.startTime;\n        },\n\n        endTime: function() {\n            var options = this.options;\n            return options.showWorkHours ? options.workDayEnd : options.endTime;\n        },\n\n        _timeSlotInterval: function() {\n            var options = this.options;\n            return (options.majorTick / options.minorTickCount) * MS_PER_MINUTE;\n        },\n\n        nextDate: function() {\n            return kendo.date.nextDay(this.endDate());\n        },\n\n        previousDate: function() {\n            return kendo.date.previousDay(this.startDate());\n        },\n\n        calculateDateRange: function() {\n            this._render([this.options.date]);\n        },\n\n        render: function(events) {\n            this._headerColumnCount = 0;\n\n            this._groups();\n\n            this.element.find(\".k-event\").remove();\n\n            events = new kendo.data.Query(events)\n                .sort([{ field: \"start\", dir: \"asc\" },{ field: \"end\", dir: \"desc\" }])\n                .toArray();\n\n            var eventsByResource = [];\n\n            this._eventsByResource(events, this.groupedResources, eventsByResource);\n\n            var eventGroups = [];\n            var maxRowCount = 0;\n\n            for (var groupIndex = 0; groupIndex < eventsByResource.length; groupIndex++) {\n                var eventGroup = {\n                    groupIndex: groupIndex,\n                    maxRowCount: 0,\n                    events: {}\n                };\n\n                eventGroups.push(eventGroup);\n\n                this._renderEvents(eventsByResource[groupIndex], groupIndex, eventGroup);\n\n                if (maxRowCount < eventGroup.maxRowCount) {\n                    maxRowCount = eventGroup.maxRowCount;\n                }\n            }\n\n            this._setRowsHeight(eventGroups, eventsByResource.length, maxRowCount);\n\n            this._positionEvents(eventGroups, eventsByResource.length);\n\n            this._currentTime(false);\n            this._ongoingEvents(events);\n\n            this.trigger(\"activate\");\n        },\n\n        _positionEvents: function(eventGroups, groupsCount) {\n            for (var groupIndex = 0; groupIndex < groupsCount; groupIndex++) {\n                var eventsForGroup = eventGroups[groupIndex].events;\n                for (var eventUid in eventsForGroup) {\n                    var eventObject = eventsForGroup[eventUid];\n                    if (Array.isArray(eventObject)) {\n                        for (var eventIndex = 0; eventIndex < eventObject.length; eventIndex++) {\n                            this._positionEvent(eventObject[eventIndex]);\n                        }\n                    } else {\n                        this._positionEvent(eventObject);\n                    }\n                }\n            }\n        },\n\n        _setRowsHeight: function(eventGroups, groupsCount, maxRowCount) {\n            var eventHeight = this.options.eventHeight;\n            var eventBottomOffset = this._getBottomRowOffset();\n            var groupedView = this._groupedView;\n            var verticalGroupCount = groupedView._getVerticalGroupCount(groupsCount);\n\n            groupsCount = this._isVerticallyGrouped() ? verticalGroupCount : 1;\n\n            for (var groupIndex = 0; groupIndex < groupsCount; groupIndex++) {\n                var rowsCount = groupedView._getVerticalRowCount(eventGroups, groupIndex, maxRowCount);\n\n                rowsCount = rowsCount ? rowsCount : 1;\n\n                var rowHeight = ((eventHeight + 2) * rowsCount) + eventBottomOffset;\n                var timesRow = $(this.times.find(\"tr\")[groupIndex]);\n                var row = $(this.content.find(\"tr\")[groupIndex]);\n\n                timesRow.height(rowHeight);\n                row.height(rowHeight);\n            }\n\n            this._setContentWidth();\n            this.refreshLayout();\n            this._refreshSlots();\n        },\n\n        _getBottomRowOffset: function() {\n            var eventBottomOffset = this.options.eventHeight * 0.50;\n            var isMobile = this._isMobile();\n            var minOffset;\n            var maxOffset;\n\n            if (isMobile) {\n                minOffset = 30;\n                maxOffset = 60;\n            } else {\n                minOffset = 15;\n                maxOffset = 30;\n            }\n\n            if (eventBottomOffset > maxOffset) {\n                eventBottomOffset = maxOffset;\n            } else if (eventBottomOffset < minOffset) {\n                eventBottomOffset = minOffset;\n            }\n\n            return eventBottomOffset;\n        },\n\n        _positionEvent: function(eventObject) {\n            var eventHeight = this.options.eventHeight;\n            var eventOffset = 2;\n            var rect = eventObject.slotRange.innerRect(eventObject.start, eventObject.end, false);\n            var left = this._adjustLeftPosition(rect.left);\n            var width = rect.right - rect.left;\n\n            if (width < 0) {\n                width = 0;\n            }\n\n            if (width < this.options.eventMinWidth) {\n                var slotsCollection = eventObject.slotRange.collection;\n                var lastSlot = slotsCollection._slots[slotsCollection._slots.length - 1];\n                var offsetRight = lastSlot.offsetLeft + lastSlot.offsetWidth;\n\n                width = this.options.eventMinWidth;\n\n                if (offsetRight < left + width) {\n                    width = offsetRight - rect.left;\n                }\n            }\n\n            eventObject.element.css({\n                top: eventObject.slotRange.start.offsetTop + eventObject.rowIndex * (eventHeight + eventOffset) + \"px\",\n                left: left,\n                width: width\n            });\n        },\n\n        _refreshSlots: function() {\n            for (var groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n                this.groups[groupIndex].refresh();\n            }\n        },\n\n        _eventsByResource: function(events, resources, result, parentValue) {\n            var resource = resources[0];\n\n            if (resource) {\n                var view = resource.dataSource.view();\n\n                view = view.filter(function(item) {\n                    var itemParentValue = kendo.getter(resource.dataParentValueField)(item);\n\n                    return itemParentValue === null || itemParentValue === undefined$1 || itemParentValue === parentValue;\n                });\n\n                for (var itemIdx = 0; itemIdx < view.length; itemIdx++) {\n                    var value = this._resourceValue(resource, view[itemIdx]);\n\n                    var eventsFilteredByResource = new kendo.data.Query(events).filter({ field: resource.field, operator: SchedulerView.groupEqFilter(value) }).toArray();\n\n                    if (resources.length > 1) {\n                        this._eventsByResource(eventsFilteredByResource, resources.slice(1), result, value);\n                    } else {\n                        result.push(eventsFilteredByResource);\n                    }\n                }\n            } else {\n                result.push(events);\n            }\n        },\n\n        _isInDateSlot: function(event) {\n            var startTime = event.start;\n            var endTime = event.end;\n            var rangeStart = getDate(this._startDate);\n            var rangeEnd = kendo.date.addDays(getDate(this.visibleEndDate()), 1);\n\n            if (startTime < rangeEnd && rangeStart <= endTime) {\n                return true;\n            }\n            return false;\n        },\n\n        _isInTimeSlot: function(event) {\n            var startTime = event._startTime || kendo.date.toUtcTime(event.start);\n            var endTime = event._endTime || kendo.date.toUtcTime(event.end);\n\n            var slotRanges = this._slotRanges;\n\n            if (startTime === endTime) {\n                endTime = endTime + 1;\n            }\n\n            for (var slotIndex = 0; slotIndex < slotRanges.length; slotIndex++) {\n                if (startTime < slotRanges[slotIndex].end && slotRanges[slotIndex].start < endTime) {\n                    return true;\n                }\n            }\n            return false;\n        },\n\n        _adjustEvent: function(event) {\n            var start = event.start;\n            var end = event.end;\n            var eventStartTime = event._time(\"start\");\n            var eventEndTime = event._time(\"end\");\n            var startTime = getMilliseconds(this.startTime());\n            var endTime = getMilliseconds(this.endTime());\n            var adjustedStartDate = null;\n            var adjustedEndDate = null;\n            var occurrence;\n            var head = false;\n            var tail = false;\n\n            if (event.isAllDay) {\n                start = getDate(start);\n                eventStartTime = 0;\n\n                end = getDate(end);\n                eventEndTime = MS_PER_DAY;\n                adjustedEndDate = kendo.date.addDays(end, 1);\n            }\n\n            if (endTime === 0) {\n                endTime = MS_PER_DAY;\n            }\n\n            if (endTime <= startTime) {\n                if (eventStartTime < startTime && eventStartTime >= endTime) {\n                    adjustedStartDate = getDate(start);\n                    setTime(adjustedStartDate, startTime);\n                    tail = true;\n                }\n\n                if (eventEndTime > endTime && eventEndTime <= startTime) {\n                    adjustedEndDate = getDate(end);\n                    setTime(adjustedEndDate, endTime);\n                    head = true;\n                }\n            } else {\n                if (startTime > eventStartTime) {\n                    adjustedStartDate = getDate(start);\n                    setTime(adjustedStartDate, startTime);\n                    tail = true;\n                } else if (endTime <= eventStartTime) {\n                    adjustedStartDate = getDate(start);\n                    adjustedStartDate = kendo.date.addDays(adjustedStartDate, 1);\n                    setTime(adjustedStartDate, startTime);\n                    tail = true;\n                }\n\n                if (endTime < eventEndTime) {\n                    adjustedEndDate = getDate(end);\n                    setTime(adjustedEndDate, endTime);\n                    head = true;\n                } else if (startTime > eventEndTime) {\n                    adjustedEndDate = getDate(end);\n                    adjustedEndDate = kendo.date.addDays(adjustedEndDate,-1);\n                    setTime(adjustedEndDate, endTime);\n                    head = true;\n                }\n            }\n\n            occurrence = event.clone({\n                start: adjustedStartDate ? adjustedStartDate : start,\n                end: adjustedEndDate ? adjustedEndDate : end,\n                _startTime: adjustedStartDate ? kendo.date.toUtcTime(adjustedStartDate) : event._startTime,\n                _endTime: adjustedEndDate ? kendo.date.toUtcTime(adjustedEndDate) : event._endTime,\n                isAllDay: false\n            });\n\n            return {\n                occurrence: occurrence,\n                head: head,\n                tail: tail\n            };\n        },\n\n        _renderEvents: function(events, groupIndex, eventGroup) {\n            var event;\n            var idx;\n            var length;\n\n            for (idx = 0, length = events.length; idx < length; idx++) {\n                event = events[idx];\n\n                if (this._isInDateSlot(event)) {\n                    var isMultiDayEvent = event.isAllDay || event.duration() >= MS_PER_DAY;\n                    var container = this.content;\n\n                    if (isMultiDayEvent || this._isInTimeSlot(event)) {\n                        var adjustedEvent = this._adjustEvent(event);\n                        var group = this.groups[groupIndex];\n\n                        if (!group._continuousEvents) {\n                            group._continuousEvents = [];\n                        }\n\n                        if (this._isInTimeSlot(adjustedEvent.occurrence)) {\n                            var ranges = group.slotRanges(adjustedEvent.occurrence, false);\n                            var range = ranges[0];\n                            var startIndex = range.start.index;\n                            var endIndex = range.end.index;\n\n                            this._groupedView._renderEvent(eventGroup, event, adjustedEvent, group, range, container, startIndex, endIndex);\n                        }\n                    }\n                }\n            }\n        },\n\n        addContinuousEvent: function(group, range, element, isAllDay) {\n            var events = group._continuousEvents;\n\n            events.push({\n                element: element,\n                isAllDay: isAllDay,\n                uid: element.attr(kendo.attr(\"uid\")),\n                start: range.start,\n                end: range.end\n            });\n        },\n\n        _createEventElement: function(occurrence, event, head, tail) {\n            var template = this.eventTemplate;\n            var editable = this.options.editable;\n            var isMobile = this._isMobile();\n            var showDelete = editable && editable.destroy !== false && !isMobile;\n            var resizable = editable && editable.resize !== false;\n            var eventStartTime = event._time(\"start\");\n            var eventEndTime = event._time(\"end\");\n            var eventStartDate = event.start;\n            var eventEndDate = event.end;\n\n            var resources = this.eventResources(event);\n\n            if (event._startTime && eventStartTime !== kendo.date.getMilliseconds(event.start)) {\n                eventStartDate = new Date(eventStartTime);\n                eventStartDate = kendo.timezone.apply(eventStartDate, \"Etc/UTC\");\n            }\n\n            if (event._endTime && eventEndTime !== kendo.date.getMilliseconds(event.end)) {\n                eventEndDate = new Date(eventEndTime);\n                eventEndDate = kendo.timezone.apply(eventEndDate, \"Etc/UTC\");\n            }\n\n            var data = extend({}, {\n                ns: kendo.ns,\n                resizable: resizable,\n                showDelete: showDelete,\n                head: head,\n                tail: tail,\n                singleDay: this._dates.length == 1,\n                resources: resources,\n                inverseColor: false,\n                messages: this.options.messages,\n                ariaLabel: this._formatEventAriaLabel(event.title, eventStartDate, eventEndDate, event.isAllDay),\n                template: this.options.eventTemplate\n            }, event, {\n                start: eventStartDate,\n                end: eventEndDate\n            });\n\n            var element = $(template(data));\n            kendo.applyStylesFromKendoAttributes(element, [\"background-color\", \"border-color\"]);\n\n            this.angular(\"compile\", function() {\n                return {\n                    elements: element,\n                    data: [ { dataItem: data } ]\n                };\n            });\n\n            return element;\n        },\n\n        _arrangeRows: function(eventObject, slotRange, eventGroup) {\n            var that = this;\n            var startIndex = slotRange.start.index;\n            var endIndex = slotRange.end.index;\n\n            var rect = eventObject.slotRange.innerRect(eventObject.start, eventObject.end, false);\n            var rectRight = rect.right + this.options.eventMinWidth;\n\n            var events = SchedulerView.collidingEvents(slotRange.events(), rect.left, rectRight);\n\n            slotRange.addEvent({\n                slotIndex: startIndex,\n                slotIndexEnd: endIndex,\n                start: rect.left,\n                end: rectRight,\n                zeroWidthEventOffset: that._zeroWidthEventOffset,\n                rectLeft: rect.left,\n                rectRight: rectRight,\n                element: eventObject.element,\n                uid: eventObject.uid\n            });\n\n            events.push({\n                slotIndex: startIndex,\n                slotIndexEnd: endIndex,\n                start: rect.left,\n                end: rectRight,\n                zeroWidthEventOffset: that._zeroWidthEventOffset,\n                uid: eventObject.uid\n            });\n\n            var rows = SchedulerView.createRows(events);\n\n            if (eventGroup.maxRowCount < rows.length) {\n                eventGroup.maxRowCount = rows.length;\n            }\n\n            for (var idx = 0, length = rows.length; idx < length; idx++) {\n                var rowEvents = rows[idx].events;\n                for (var j = 0, eventLength = rowEvents.length; j < eventLength; j++) {\n                    eventGroup.events[rowEvents[j].uid].rowIndex = idx;\n                }\n            }\n        },\n\n        _groupCount: function() {\n            var resources = this.groupedResources;\n            var groupedView = this._groupedView;\n\n            if (resources.length) {\n                if (this._groupOrientation() === \"vertical\") {\n                    return groupedView._verticalCountForLevel(resources.length - 1);\n                } else {\n                    return groupedView._horizontalCountForLevel(resources.length - 1, this.columnLevels.length - 1);\n                }\n            }\n            return 1;\n        },\n\n        _updateEventForSelection: function(event) {\n            var adjustedEvent = this._adjustEvent(event.clone());\n            return adjustedEvent.occurrence;\n        },\n\n        _eventOptionsForMove: function(event) {\n            if (event.isAllDay) {\n                return { isAllDay: false };\n            }\n\n            return {};\n        },\n\n        _updateEventForResize: function(event) {\n            if (event.isAllDay) {\n                event.set(\"isAllDay\", false);\n            }\n        },\n\n        _updateMoveHint: function(event, groupIndex, distance) {\n            var group = this.groups[groupIndex];\n\n            var clonedEvent = event.clone({ start: event.start, end: event.end });\n\n            var eventDuraton = clonedEvent.duration();\n            clonedEvent.start = new Date(clonedEvent.start.getTime() + distance);\n            clonedEvent.end = new Date(+clonedEvent.start + eventDuraton);\n\n            this._removeMoveHint(event.uid);\n\n            if (this._isInDateSlot(clonedEvent)) {\n                if (clonedEvent.isAllDay || clonedEvent.duration() >= MS_PER_DAY || this._isInTimeSlot(clonedEvent)) {\n                    var adjustedEvent = this._adjustEvent(clonedEvent);\n                    var ranges = group.slotRanges(adjustedEvent.occurrence, false);\n\n                    for (var rangeIndex = 0; rangeIndex < ranges.length; rangeIndex++) {\n                        this._groupedView._createMoveHint(ranges[rangeIndex], adjustedEvent);\n                    }\n                }\n            }\n        },\n\n       _appendMoveHint: function(hint) {\n            hint.appendTo(this.content);\n\n            this._moveHint = this._moveHint.add(hint);\n       },\n\n        _updateResizeHint: function(event, groupIndex, startTime, endTime) {\n            var group = this.groups[groupIndex];\n            var ranges = group.ranges(startTime, endTime, false, false);\n\n            this._removeResizeHint();\n\n            for (var rangeIndex = 0; rangeIndex < ranges.length; rangeIndex++) {\n                var range = ranges[rangeIndex];\n                var start = range.startSlot();\n\n                var startRect = range.innerRect(startTime, endTime, false);\n                startRect.top = start.offsetTop;\n\n                var width = startRect.right - startRect.left;\n\n                if (width < 0) {\n                    for (var i = 0; i < range.events().length; i++) {\n                        if (range.events()[i].uid === event.uid) {\n                            width = range.events()[i].rectRight - startRect.left;\n                            break;\n                        }\n                    }\n                }\n\n                var height = range.endSlot().offsetTop + start.offsetHeight - startRect.top;\n\n                var left = this._adjustLeftPosition(startRect.left);\n\n                var hint = SchedulerView.fn._createResizeHint.call(this,\n                    left,\n                    startRect.top,\n                    width,\n                    height\n                );\n\n                this._resizeHint = this._resizeHint.add(hint);\n            }\n\n            var format = \"t\";\n            var container = this.content;\n\n            this._resizeHint.appendTo(container);\n\n            this._resizeHint.find(\".k-label-top,.k-label-bottom\").text(\"\");\n\n            this._resizeHint.first().addClass(\"k-first\").find(\".k-label-top\").text(kendo.toString(kendo.timezone.toLocalDate(startTime), format));\n\n            this._resizeHint.last().addClass(\"k-last\").find(\".k-label-bottom\").text(kendo.toString(kendo.timezone.toLocalDate(endTime), format));\n        },\n\n        selectionByElement: function(cell) {\n            var offset = cell.offset();\n            return this._slotByPosition(offset.left, offset.top);\n        },\n\n        _updateDirection: function(selection, ranges, multiple, reverse, vertical) {\n\n            var startSlot = ranges[0].start;\n            var endSlot = ranges[ranges.length - 1].end;\n            if (multiple && !vertical) {\n                if (startSlot.index === endSlot.index &&\n                    startSlot.collectionIndex === endSlot.collectionIndex) {\n                    selection.backward = reverse;\n                }\n            }\n        },\n\n        _changeGroup: function(selection, previous) {\n            var method = previous ? \"prevGroupSlot\" : \"nextGroupSlot\";\n\n            var slot = this[method](selection.start, selection.groupIndex, false);\n\n            if (slot) {\n                selection.groupIndex += previous ? -1 : 1;\n            }\n\n            this._groupedView._changeGroup(selection, previous, slot);\n            return slot;\n        },\n\n        prevGroupSlot: function(date, groupIndex, isDay) {\n            var group = this.groups[groupIndex];\n            var slot = group.ranges(date, date, isDay, false)[0].start;\n\n            if (groupIndex <= 0) {\n                return;\n            }\n\n            return this._groupedView._prevGroupSlot(slot, group, isDay);\n        },\n\n        nextGroupSlot: function(date, groupIndex, isDay) {\n            var group = this.groups[groupIndex];\n            var slot = group.ranges(date, date, isDay, false)[0].start;\n\n            if (groupIndex >= this.groups.length - 1) {\n                return;\n            }\n\n            return this._groupedView._nextGroupSlot(slot, group, isDay);\n        },\n\n        _verticalSlots: function(selection, ranges, multiple, reverse) {\n            var groupedView = this._groupedView;\n            var method = groupedView._verticalMethod(reverse, multiple);\n            var startSlot = ranges[0].start;\n            var endSlot = ranges[ranges.length - 1].end;\n            var group = this.groups[selection.groupIndex];\n            var slot = groupedView._normalizeVerticalSelection(selection, ranges, reverse, multiple);\n\n            if (slot) {\n                startSlot = endSlot = slot;\n            }\n\n            startSlot = group[method](startSlot);\n            endSlot = group[method](endSlot);\n\n            if (!multiple && this._isVerticallyGrouped() && (!startSlot || !endSlot)) {\n                startSlot = endSlot = groupedView._verticalSlots(selection, reverse, slot);\n            }\n\n            return {\n                startSlot: startSlot,\n                endSlot: endSlot\n            };\n        },\n\n        _horizontalSlots: function(selection, ranges, multiple, reverse) {\n            var method = reverse ? \"upSlot\" : \"downSlot\";\n            var startSlot = ranges[0].start;\n            var endSlot = ranges[ranges.length - 1].end;\n            var group = this.groups[selection.groupIndex];\n            var result = {};\n\n            if (!multiple) {\n                result = this._groupedView._horizontalSlots(selection, group, method, startSlot, endSlot, multiple, reverse);\n            } else {\n                result.startSlot = group[method](startSlot);\n                result.endSlot = group[method](endSlot);\n\n                if (!multiple && this._isHorizontallyGrouped() && (!startSlot || !endSlot)) {\n                    result.startSlot = result.endSlot = this._changeGroup(selection, reverse);\n                }\n            }\n\n            return result;\n        },\n\n        _changeViewPeriod: function(selection, reverse) {\n            var date = reverse ? this.previousDate() : this.nextDate();\n            var start = selection.start;\n            var end = selection.end;\n            var newStart, newEnd;\n\n            newStart = new Date(date);\n            newEnd = new Date(date);\n\n            if (this._isInRange(newStart, newEnd)) {\n                return false;\n            }\n            selection.start = newStart;\n            selection.end = newEnd;\n\n            if (this._isHorizontallyGrouped()) {\n               selection.groupIndex = reverse ? this.groups.length - 1 : 0;\n            }\n\n            var duration = end - start;\n\n            if (reverse) {\n                end = getMilliseconds(this.endTime());\n                end = end === 0 ? MS_PER_DAY : end;\n\n                setTime(selection.start, end - duration);\n                setTime(selection.end, end);\n            } else {\n                start = getMilliseconds(this.startTime());\n\n                setTime(selection.start, start);\n                setTime(selection.end, start + duration);\n            }\n\n            selection.events = [];\n\n            return true;\n        },\n\n        move: function(selection, key, shift) {\n            var handled = false;\n            var group = this.groups[selection.groupIndex];\n            var keys = kendo.keys;\n            var groupedView = this._groupedView;\n            var ranges = group.ranges(selection.start, selection.end, false, false);\n            var startSlot, endSlot, reverse, slots;\n\n            if (key === keys.DOWN || key === keys.UP) {\n                handled = true;\n                reverse = key === keys.UP;\n\n                groupedView._updateDirection(selection, ranges, shift, reverse);\n\n                slots = this._verticalSlots(selection, ranges, shift, reverse);\n\n                if (groupedView._changeVerticalViewPeriod(slots, shift, selection, reverse)) {\n                    return handled;\n                }\n            } else if (key === keys.LEFT || key === keys.RIGHT) {\n                handled = true;\n                reverse = key === keys.LEFT;\n\n                this._updateDirection(selection, ranges, shift, reverse, false);\n\n                slots = this._horizontalSlots(selection, ranges, shift, reverse);\n\n                if (groupedView._changeHorizontalViewPeriod(slots, shift, selection, reverse)) {\n                     return handled;\n                }\n            }\n\n           if (handled) {\n               startSlot = slots.startSlot;\n               endSlot = slots.endSlot;\n\n               if (shift) {\n                   var backward = selection.backward;\n\n                   if (backward && startSlot) {\n                       selection.start = startSlot.startDate();\n                   } else if (!backward && endSlot) {\n                       selection.end = endSlot.endDate();\n                   }\n               } else if (startSlot && endSlot) {\n                   selection.start = startSlot.startDate();\n                   selection.end = endSlot.endDate();\n               }\n\n               selection.events = [];\n           }\n\n            return handled;\n        },\n\n        destroy: function() {\n            var that = this;\n\n            if (that.element) {\n                that.element.off(NS);\n            }\n\n            if (that._currentTimeUpdateTimer) {\n                clearInterval(that._currentTimeUpdateTimer);\n            }\n\n            SchedulerView.fn.destroy.call(this);\n\n            if (this._isMobile() && that.options.editable) {\n                if (that.options.editable.create !== false) {\n                    that._addUserEvents.destroy();\n                }\n\n                if (that.options.editable.update !== false) {\n                    that._editUserEvents.destroy();\n                }\n            }\n        },\n\n        _resourceBySlot: function(slot) {\n            var resources = this.groupedResources;\n            var result = {},\n            groupOptions = this.options.group;\n\n            if (resources.length && groupOptions.orientation === \"horizontal\" && groupOptions.date) {\n                var resourceIndex = slot.groupIndex,\n                    levels = this.columnLevels,\n                    groupLevel = levels[levels.length - 1],\n                    resource = resources[resources.length - 1],\n                    groupLevelMember = groupLevel[resourceIndex],\n                    passedChildren, numberOfChildren, j, i;\n\n                this._setResourceValue(groupLevelMember, resource, result);\n\n                for (j = levels.length - 2; j >= 3; j--) {\n                    groupLevel = levels[j];\n                    resource = resources[j - 3];\n                    passedChildren = 0;\n\n                    for (i = 0; i < groupLevel.length; i++) {\n                        groupLevelMember = groupLevel[i];\n                        numberOfChildren = groupLevelMember.columns.length;\n\n                        if (numberOfChildren > resourceIndex - passedChildren) {\n                            this._setResourceValue(groupLevelMember, resource, result);\n\n                            i = groupLevel.length;\n                        } else {\n                            passedChildren += numberOfChildren;\n                        }\n                    }\n                }\n\n                return result;\n            } else {\n                return SchedulerView.fn._resourceBySlot.call(this, slot);\n            }\n        }\n    });\n\n    extend(true, ui, {\n        TimelineView: TimelineView,\n        TimelineWeekView: TimelineView.extend({\n            options: {\n                name: \"TimelineWeekView\",\n                title: \"Timeline Week\",\n                selectedDateFormat: \"{0:D} - {1:D}\",\n                selectedShortDateFormat: \"{0:d} - {1:d}\",\n                selectedMobileDateFormat: \"{0:MMM dd} - {1:dd}\",\n                majorTick: 120\n            },\n            name: \"timelineWeek\",\n            calculateDateRange: function() {\n                var selectedDate = this.options.date,\n                    start = kendo.date.dayOfWeek(selectedDate, this.calendarInfo().firstDay, -1),\n                    idx, length,\n                    dates = [];\n\n                for (idx = 0, length = 7; idx < length; idx++) {\n                    dates.push(start);\n                    start = kendo.date.nextDay(start);\n                }\n                this._render(dates);\n            }\n        }),\n        TimelineWorkWeekView: TimelineView.extend({\n            options: {\n                name: \"TimelineWorkWeekView\",\n                title: \"Timeline Work Week\",\n                selectedDateFormat: \"{0:D} - {1:D}\",\n                selectedShortDateFormat: \"{0:d} - {1:d}\",\n                selectedMobileDateFormat: \"{0:MMM dd} - {1:dd}\",\n                majorTick: 120\n            },\n            name: \"timelineWorkWeek\",\n            nextDate: function() {\n                var weekStart = kendo.date.dayOfWeek(kendo.date.nextDay(this.endDate()), this.calendarInfo().firstDay, 1);\n\n                return kendo.date.addDays(weekStart, this._workDays[0]);\n            },\n            previousDate: function() {\n                var weekStart = kendo.date.dayOfWeek(this.startDate(), this.calendarInfo().firstDay, -1);\n                var workDays = this._workDays;\n\n                return kendo.date.addDays(weekStart, workDays[workDays.length - 1] - 7);\n            },\n            calculateDateRange: function() {\n                var options = this.options,\n                    selectedDate = options.date,\n                    dayOfWeek = kendo.date.dayOfWeek,\n                    weekStart = dayOfWeek(selectedDate, this.calendarInfo().firstDay, -1),\n                    start = dayOfWeek(weekStart, options.workWeekStart, 1),\n                    end = dayOfWeek(start, options.workWeekEnd, 1),\n                    dates = [],\n                    workDays = (options.workDays && options.workDays.length) ? options.workDays.map(function(day) {\n                        return dayOfWeek(weekStart, day, 1).getTime();\n                    }) : null;\n\n                if (workDays) {\n                    start = weekStart;\n                    end = dayOfWeek(start, this.calendarInfo().firstDay + 6, 1);\n                }\n\n                while (start <= end) {\n                    if (workDays && workDays.indexOf(start.getTime()) > -1) {\n                        dates.push(start);\n                    } else if (!workDays) {\n                        dates.push(start);\n                    }\n\n                    start = kendo.date.nextDay(start);\n                }\n\n                this._render(dates);\n            }\n        }),\n        TimelineMonthView: TimelineView.extend({\n            options: {\n                name: \"TimelineMonthView\",\n                title: \"Timeline Month\",\n                selectedDateFormat: \"{0:D} - {1:D}\",\n                selectedShortDateFormat: \"{0:d} - {1:d}\",\n                workDayStart: new Date(1980, 1, 1, 0, 0, 0),\n                workDayEnd: new Date(1980, 1, 1, 23, 59, 59),\n                footer: false,\n                majorTick: 1440,\n                minorTickCount: 1\n            },\n            name: \"timelineMonth\",\n            calculateDateRange: function() {\n                var selectedDate = this.options.date,\n                    start = kendo.date.firstDayOfMonth(selectedDate),\n                    end = kendo.date.lastDayOfMonth(selectedDate),\n                    idx, length,\n                    dates = [];\n\n                for (idx = 0, length = end.getDate(); idx < length; idx++) {\n                    dates.push(start);\n                    start = kendo.date.nextDay(start);\n                }\n                this._render(dates);\n            }\n        })\n    });\n\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}