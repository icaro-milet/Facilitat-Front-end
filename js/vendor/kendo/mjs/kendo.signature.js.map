{"version":3,"file":"kendo.signature.js","names":["exports","kendoDrawing","_a","elementOffset","limitValue","Point","Rect","transform","noop","SignaturePad","window","kendo","inputs","common","drawing","util","geometry","element","options","this","lastMoveTime","Object","assign","scale","precision","samplingRate","smooth","color","backgroundColor","strokeWidth","onChange","onDraw","onDrawEnd","pathOptions","stroke","width","lineCap","lineJoin","initSurface","attachEvents","prototype","destroy","detachEvents","clear","rootGroup","path","defineProperty","get","Boolean","points","enumerable","configurable","toString","set","value","MultiPath","parse","append","loadImage","data","size","height","contentWidth","contentHeight","importWidth","importHeight","scaleX","scaleY","Math","min","img","Image","exportImage","_b","exportWidth","exportHeight","exportRect","exportGroup","Group","clip","Path","fromRect","contentGroup","frame","fill","children","push","apply","resize","surface","setOptions","background","Surface","create","type","style","touchAction","offsetWidth","offsetHeight","draw","onPointerDown","bind","onPointerMove","onPointerUp","addEventListener","removeEventListener","touchPoint","e","offset","pageX","pageY","left","top","readonly","isPrimary","button","isMainButton","setPointerCapture","pointerId","point","moveTo","now","Date","getTime","lastPoint","length","minDelta","distanceTo","lineTo","segments","curveFromPoints","paths","splice","pathData","__meta__","id","name","category","description","depends","$","undefined$1","Widget","ui","Dialog","html","outerWidth","_outerWidth","outerHeight","_outerHeight","Pad","ns","CHANGE","OPEN","CLOSE","CLICK","Signature","extend","init","that","fn","call","_createElements","maximizable","_createInput","wrapper","getComputedStyle","_createPad","_createDialogPad","_attachHandlers","_assignLabel","_pad","_dialogPad","enable","fillMode","hideLine","label","popupScale","rounded","exportScale","events","currentOptions","oldBtnClass","getValidCssClass","btns","add","_dialogPadEl","find","targets","removeClass","_clearCssClasses","deepExtend","_destroyPad","_destroyDialog","pad","i","copyPath","_hideLine","_applyCssClasses","toggle","addClass","removeAttr","close","_dialog","open","off","empty","toggleClass","renderButton","icon","insertAfter","_dialogEl","_value","_input","val","reset","attr","_ariaLabel","on","trigger","autocomplete","required","appendTo","remove","line","maximize","padOptions","then","hide","show","canvas","title","closable","keyCode","keys","ESC","cssProperties","registerPrefix","plugin","jQuery","kendo$1"],"sources":["kendo.signature.js"],"mappings":"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","sourcesContent":["import './kendo.core.js';\nimport './kendo.drawing.js';\nimport './kendo.dialog.js';\nimport './kendo.html.button.js';\n\n(function () {\n\nwindow.kendo = window.kendo || {};\nwindow.kendo.inputs = window.kendo.inputs || {};\n(function (exports, kendoDrawing) {\n\n    var _a = kendoDrawing.util, elementOffset = _a.elementOffset, limitValue = _a.limitValue;\n\n    var Point = kendo.geometry.Point, Rect = kendo.geometry.Rect, transform = kendo.geometry.transform;\n    var noop = function () { };\n    var DECIMAL_DIGITS = 3;\n    var DEFAULT_COLOR = '#000';\n    var DEFAULT_BACKGROUND_COLOR = '#fff';\n    var DEFAULT_PRECISION = 1;\n    var DEFAULT_SAMPLING_RATE = 200; // Updates per second\n    var DEFAULT_STROKE_WIDTH = 1;\n    var DEFAULT_WIDTH = 750;\n    var DEFAULT_HEIGHT = 250;\n    var DEFAULT_SCALE = 1;\n    // Export images at maximized scale (3x) and 2x pixel density to cover HiDPI screens.\n    var DEFAULT_EXPORT_SCALE = 6;\n    var SignaturePad = /** @class */ (function () {\n        function SignaturePad(element, options) {\n            if (options === void 0) { options = {}; }\n            this.element = element;\n            this.lastMoveTime = 0;\n            this.options = Object.assign({\n                scale: DEFAULT_SCALE,\n                precision: DEFAULT_PRECISION,\n                samplingRate: DEFAULT_SAMPLING_RATE,\n                smooth: options.smooth !== false,\n                color: options.color || DEFAULT_COLOR,\n                backgroundColor: options.backgroundColor || DEFAULT_BACKGROUND_COLOR,\n                strokeWidth: DEFAULT_STROKE_WIDTH,\n                onChange: noop,\n                onDraw: noop,\n                onDrawEnd: noop\n            }, options);\n            this.pathOptions = {\n                stroke: {\n                    color: this.options.color,\n                    width: this.options.strokeWidth,\n                    lineCap: 'round',\n                    lineJoin: 'round'\n                }\n            };\n            this.initSurface();\n            this.attachEvents();\n        }\n        SignaturePad.prototype.destroy = function () {\n            this.detachEvents();\n        };\n        SignaturePad.prototype.clear = function () {\n            this.rootGroup.clear();\n            this.path = null;\n        };\n        Object.defineProperty(SignaturePad.prototype, \"isDrawing\", {\n            get: function () {\n                return Boolean(this.points);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(SignaturePad.prototype, \"pathData\", {\n            get: function () {\n                var _a;\n                return (_a = this.path) === null || _a === void 0 ? void 0 : _a.toString(DECIMAL_DIGITS);\n            },\n            set: function (value) {\n                this.clear();\n                this.path = kendoDrawing.MultiPath.parse(value, this.pathOptions);\n                this.rootGroup.append(this.path);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        SignaturePad.prototype.loadImage = function (data, size) {\n            if (size === void 0) { size = []; }\n            if (!data) {\n                this.clear();\n                return;\n            }\n            var _a = this.size, width = _a[0], height = _a[1];\n            var contentWidth = width / this.options.scale;\n            var contentHeight = height / this.options.scale;\n            var importWidth = size[0] || contentWidth * DEFAULT_EXPORT_SCALE;\n            var importHeight = size[1] || contentHeight * DEFAULT_EXPORT_SCALE;\n            var scaleX = contentWidth / importWidth;\n            var scaleY = contentHeight / importHeight;\n            var scale = Math.min(scaleX, scaleY);\n            var img = new kendoDrawing.Image(data, new kendo.geometry.Rect([0, 0], [importWidth, importHeight]));\n            img.transform(transform().scale(scale, scale));\n            this.clear();\n            this.rootGroup.append(img);\n        };\n        SignaturePad.prototype.exportImage = function (options) {\n            var _a;\n            var _b = this.size, width = _b[0], height = _b[1];\n            var contentWidth = width / this.options.scale;\n            var contentHeight = height / this.options.scale;\n            var exportWidth = (options === null || options === void 0 ? void 0 : options.width) || contentWidth * DEFAULT_EXPORT_SCALE;\n            var exportHeight = (options === null || options === void 0 ? void 0 : options.height) || contentHeight * DEFAULT_EXPORT_SCALE;\n            var scaleX = exportWidth / contentWidth;\n            var scaleY = exportHeight / contentHeight;\n            var scale = Math.min(scaleX, scaleY);\n            var exportRect = new Rect([0, 0], [exportWidth, exportHeight]);\n            var exportGroup = new kendoDrawing.Group({\n                clip: kendoDrawing.Path.fromRect(exportRect)\n            });\n            var contentGroup = new kendoDrawing.Group({\n                transform: transform().scale(scale, scale)\n            });\n            var frame = kendoDrawing.Path.fromRect(exportRect, {\n                fill: {\n                    color: this.options.backgroundColor\n                }\n            });\n            exportGroup.append(frame);\n            exportGroup.append(contentGroup);\n            (_a = contentGroup.children).push.apply(_a, this.rootGroup.children);\n            return kendoDrawing.exportImage(exportGroup, Object.assign({\n                width: exportWidth,\n                height: exportHeight\n            }, options));\n        };\n        SignaturePad.prototype.resize = function () {\n            this.surface.resize(true);\n        };\n        SignaturePad.prototype.setOptions = function (options) {\n            Object.assign(this.options, options);\n            this.pathOptions.stroke.color = this.options.color;\n            this.pathOptions.stroke.width = this.options.strokeWidth;\n            if (this.path) {\n                this.path.options.set('stroke.color', this.options.color);\n                this.path.options.set('stroke.width', this.options.strokeWidth);\n            }\n            this.background.options.set('fill.color', this.options.backgroundColor);\n        };\n        SignaturePad.prototype.initSurface = function () {\n            this.surface = kendoDrawing.Surface.create(this.element, { type: 'canvas' });\n            this.element.style.touchAction = 'none';\n            var scale = this.options.scale;\n            this.rootGroup = new kendoDrawing.Group({\n                transform: transform().scale(scale, scale)\n            });\n            // The signature is not resizable, store initial dimensions.\n            var width = this.element.offsetWidth || DEFAULT_WIDTH;\n            var height = this.element.offsetHeight || DEFAULT_HEIGHT;\n            this.size = [width, height];\n            this.background = kendoDrawing.Path.fromRect(new Rect([0, 0], this.size), {\n                fill: {\n                    color: this.options.backgroundColor\n                }\n            });\n            this.surface.draw(this.background);\n            this.surface.draw(this.rootGroup);\n        };\n        SignaturePad.prototype.attachEvents = function () {\n            this.onPointerDown = this.onPointerDown.bind(this);\n            this.onPointerMove = this.onPointerMove.bind(this);\n            this.onPointerUp = this.onPointerUp.bind(this);\n            this.element.addEventListener('pointerdown', this.onPointerDown);\n            this.element.addEventListener('pointermove', this.onPointerMove);\n            this.element.addEventListener('pointerup', this.onPointerUp);\n        };\n        SignaturePad.prototype.detachEvents = function () {\n            this.element.removeEventListener('pointerdown', this.onPointerDown);\n            this.element.removeEventListener('pointermove', this.onPointerMove);\n            this.element.removeEventListener('pointerup', this.onPointerUp);\n        };\n        SignaturePad.prototype.touchPoint = function (e) {\n            var offset = elementOffset(this.element);\n            var pageX = e.pageX;\n            var pageY = e.pageY;\n            var scale = 1 / this.options.scale;\n            return new Point(pageX - offset.left, pageY - offset.top).scale(scale, scale);\n        };\n        SignaturePad.prototype.onPointerDown = function (e) {\n            if (this.options.readonly || !e.isPrimary || !isMainButton(e)) {\n                return;\n            }\n            if (!this.path) {\n                this.path = new kendoDrawing.MultiPath(this.pathOptions);\n                this.rootGroup.append(this.path);\n            }\n            this.options.onDraw();\n            this.element.setPointerCapture(e.pointerId);\n            var point = this.touchPoint(e);\n            this.points = [point];\n            this.path.moveTo(point);\n        };\n        SignaturePad.prototype.onPointerMove = function (e) {\n            if (!this.points || !e.isPrimary) {\n                return;\n            }\n            var now = (new Date()).getTime();\n            var elapsed = now - this.lastMoveTime;\n            var minTimeDelta = 1000 / limitValue(this.options.samplingRate, 1, 10000);\n            if (elapsed < minTimeDelta) {\n                return;\n            }\n            else {\n                this.lastMoveTime = now;\n            }\n            var point = this.touchPoint(e);\n            var lastPoint = this.points[this.points.length - 1];\n            var minDelta = 1 / limitValue(this.options.precision, 0.01, 100);\n            if (point.distanceTo(lastPoint) < minDelta) {\n                return;\n            }\n            this.points.push(point);\n            this.path.lineTo(point);\n        };\n        SignaturePad.prototype.onPointerUp = function (e) {\n            if (!e.isPrimary || !this.path || !this.points || this.options.readonly) {\n                return;\n            }\n            if (this.options.smooth) {\n                var segments = kendoDrawing.Path.curveFromPoints(this.points);\n                this.path.paths.splice(this.path.paths.length - 1, 1, segments);\n            }\n            this.points = null;\n            this.options.onDrawEnd();\n            this.options.onChange(this.pathData);\n        };\n        return SignaturePad;\n    }());\n    function isMainButton(e) {\n        return typeof (e.button) !== 'number' || e.button === 0;\n    }\n\n    exports.SignaturePad = SignaturePad;\n\n})(window.kendo.inputs.common = window.kendo.inputs.common || {}, window.kendo.drawing);\n\n\n})();\n\nvar __meta__ = {\n    id: \"signature\",\n    name: \"Signature\",\n    category: \"web\",\n    description: \"The Signature component ...\",\n    depends: [ \"core\", \"dialog\", \"html.button\", \"drawing\" ]\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        Widget = kendo.ui.Widget,\n        Dialog = kendo.ui.Dialog,\n        html = kendo.html,\n        outerWidth = kendo._outerWidth,\n        outerHeight = kendo._outerHeight,\n        Pad = kendo.inputs.common.SignaturePad,\n        ns = \".kendoSignature\",\n        DEFAULT_BACKGROUND_COLOR = '#ffffff',\n        CHANGE = \"change\",\n        OPEN = \"open\",\n        CLOSE = \"close\",\n        CLICK = \"click\",\n        TABINDEX = \"tabindex\",\n        ARIA_LABEL = \"aria-label\",\n        ARIA_LABELLEDBY = \"aria-labelledby\";\n\n    var Signature = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            options = options || {};\n\n            Widget.fn.init.call(that, element, options);\n\n            that._createElements(that.element, that.options.maximizable ? \"maxi\" : \"\", false, 1);\n            that._createInput();\n            that.wrapper = that.element;\n            if (!that.options.backgroundColor) {\n                that.options.backgroundColor = getComputedStyle(that.element[0]).backgroundColor || DEFAULT_BACKGROUND_COLOR;\n            }\n\n            that._createPad();\n            that._createDialogPad();\n            that._attachHandlers();\n            that._assignLabel();\n\n            if (that.options.value) {\n                that._pad.loadImage(that.options.value);\n                that._dialogPad.loadImage(that.options.value);\n            }\n\n            if (that.options.readonly) {\n                that.readonly();\n            }\n\n            if (!that.options.enable) {\n                that.enable(false);\n            }\n        },\n\n        options: {\n            name: \"Signature\",\n            color: \"#000000\",\n            enable: true,\n            fillMode: \"solid\",\n            hideLine: false,\n            label: \"\",\n            maximizable: true,\n            popupScale: 3,\n            readonly: false,\n            rounded: \"medium\",\n            size: \"medium\",\n            smooth: false,\n            strokeWidth: 1,\n            exportScale: 2,\n            value: \"\"\n        },\n\n        events: [ CHANGE, OPEN, CLOSE],\n\n        setOptions: function(options) {\n            var currentOptions = this.options;\n            var path;\n            var oldBtnClass = kendo.getValidCssClass(\"k-button-\", \"size\", currentOptions.size);\n            var btns = this.element.add(this._dialogPadEl).find(\".\" + oldBtnClass);\n            var targets = $(this._pad.element).add(this._dialogPad.element);\n\n            btns.removeClass(oldBtnClass);\n            this._clearCssClasses(currentOptions);\n            this.element.removeClass(kendo.getValidCssClass(\"k-signature-\", \"size\", currentOptions.size));\n            kendo.deepExtend(currentOptions, options);\n            this.options = currentOptions;\n            this.element.width(currentOptions.width);\n            this.element.height(currentOptions.height);\n            this._dialogPadEl.width(currentOptions.width * currentOptions.popupScale);\n            this._dialogPadEl.height(currentOptions.height * currentOptions.popupScale);\n            path = this._pad.path;\n            this._destroyPad();\n            this._destroyDialog();\n            this._createPad();\n            this._createDialogPad();\n            copyPath(this._pad, path);\n            this.enable(currentOptions.enable);\n            this.readonly(currentOptions.readonly);\n            this._hideLine(this.element);\n            this._hideLine(this._dialogPadEl);\n            this._applyCssClasses(this.element);\n            this.element.find(\".k-signature-maximize\").toggle(currentOptions.maximizable);\n            this.element.removeClass(kendo.getValidCssClass(\"k-input-\", \"size\", this.options.size));\n            this.element.addClass(kendo.getValidCssClass(\"k-signature-\", \"size\", this.options.size));\n            btns.addClass(kendo.getValidCssClass(\"k-button-\", \"size\", currentOptions.size));\n\n            targets.removeAttr(\"aria-label\");\n            this._assignLabel();\n        },\n\n        close: function() {\n            if (!this._dialog) {\n                return;\n            }\n            this._dialog.close();\n        },\n\n        open: function() {\n            if (!this.options.maximizable || !this._dialog) {\n                return;\n            }\n            this._dialog.open();\n        },\n\n        destroy: function() {\n            var that = this;\n            that._destroyPad();\n\n            that._destroyDialog();\n\n            that.element.off(ns);\n            that.element.empty();\n            Widget.fn.destroy.call(that);\n        },\n\n        enable: function(enable) {\n            var enable = enable !== false;\n            if (!enable) {\n                this._dialog.close();\n            }\n\n            this.element.find(\".k-button\").toggle(enable);\n            this.element.toggleClass(\"k-disabled\", !enable);\n            this._pad.options.readonly = !enable;\n            this._dialogPad.options.readonly = !enable;\n        },\n\n        readonly: function(toggle) {\n            var that = this;\n            var toggle = toggle !== false;\n\n            that._pad.options.readonly = toggle;\n            that._dialogPad.options.readonly = toggle;\n\n            var clearButton = that.element.find(\".k-signature-clear\");\n\n            if (!clearButton.length && !toggle) {\n                $(html.renderButton('<button class=\"k-signature-action k-signature-clear\"></button>', {\n                    icon: \"x\",\n                    size: this.options.size,\n                    fillMode: \"flat\"\n                })).insertAfter(that.element.find(\".k-signature-actions-bottom\"));\n\n                $(html.renderButton('<button class=\"k-signature-action k-signature-clear\"></button>', {\n                    icon: \"x\",\n                    size: this.options.size,\n                    fillMode: \"flat\"\n                })).insertAfter(that._dialogEl.find(\".k-signature-actions-bottom\"));\n            }\n\n            that.element.find(\".k-signature-clear\").toggle(!toggle);\n            that._dialogEl.find(\".k-signature-clear\").toggle(!toggle);\n        },\n\n        value: function(value) {\n            if (value !== undefined$1) {\n                this._value = value;\n                this._input.val(value);\n                this._pad.loadImage(value);\n            }\n\n            return this._value;\n        },\n\n        reset: function() {\n            this._dialogPad.clear();\n            this._pad.clear();\n            this._value = \"\";\n        },\n\n        _assignLabel: function() {\n            var targets = $(this._pad.element).add(this._dialogPad.element);\n\n            if (this.options.label) {\n                targets.attr(ARIA_LABEL, this.options.label);\n            } else {\n                this._ariaLabel(targets);\n            }\n\n            this.element.removeAttr(ARIA_LABELLEDBY);\n        },\n\n        _attachHandlers: function() {\n            var that = this;\n            that.element\n                .on(CLICK + ns, \".k-signature-clear\", function() {\n                    that.reset();\n                })\n                .on(CLICK + ns, \".k-signature-maximize\", function() {\n                    that._dialog.open();\n                    that._dialog.wrapper.find(\".k-signature-minimize\").trigger(\"focus\");\n                });\n        },\n\n        _createInput: function() {\n            var that = this;\n            var name = that.element.attr(\"name\");\n            var autocomplete = that.element.attr(\"autocomplete\");\n            var required = that.element.attr(\"required\");\n\n            that._input = $(\"<input class='k-hidden' aria-hidden='true'/>\").appendTo(that.element);\n\n            if (name) {\n                that._input.attr(\"name\", name);\n                that.element.removeAttr(\"name\");\n            }\n\n            if (autocomplete) {\n                that._input.attr(\"autocomplete\", autocomplete);\n                that.element.removeAttr(\"autocomplete\");\n            }\n\n            if (required) {\n                that._input.attr(\"required\", required);\n                that.element.removeAttr(\"required\");\n            }\n        },\n\n        _destroyPad: function() {\n            if (this._pad) {\n                kendo.destroy(this.element.find(\".k-signature-canvas\"));\n                this._pad = null;\n                this.element.find(\".k-signature-canvas\").empty();\n            }\n        },\n\n        _destroyDialog: function() {\n            if (this._dialogPad) {\n                this._dialogPad.destroy();\n                this._dialogPad = null;\n                this._dialogEl.off(ns);\n                this._dialog.destroy();\n                this._dialog = null;\n                this._dialogEl.remove();\n                this._dialogEl = null;\n            }\n        },\n\n        _hideLine: function(wrapper) {\n            var line = wrapper.find(\".k-signature-line\");\n            if (!this.options.hideLine && !line.length) {\n                $(\"<div class='k-signature-line'>\").appendTo(wrapper);\n            }\n\n            if (this.options.hideLine) {\n                line.remove();\n            }\n        },\n\n        _createElements: function(wrapper, button, maximize, scale) {\n            $(\"<div class='k-signature-canvas' role='img' tabindex='0'>\").appendTo(wrapper);\n\n            this._hideLine(wrapper);\n\n            $(\"<div class='k-signature-actions k-signature-actions-top'></div>\").appendTo(wrapper);\n\n            if (button == \"mini\") {\n                $(html.renderButton('<button class=\"k-signature-action k-signature-minimize k-rotate-180\" aria-label=\"Minimize signature\"></button>', {\n                    icon: \"hyperlink-open\",\n                    size: this.options.size,\n                    fillMode: \"flat\"\n                })).appendTo(wrapper.find(\".k-signature-actions-top\"));\n            }\n\n            if (button == \"maxi\") {\n                $(html.renderButton('<button class=\"k-signature-action k-signature-maximize\" aria-label=\"Maximize signature\"></button>', {\n                    icon: \"hyperlink-open\",\n                    size: this.options.size,\n                    fillMode: \"flat\"\n                })).appendTo(wrapper.find(\".k-signature-actions-top\"));\n            }\n\n            $(\"<div class='k-signature-actions k-signature-actions-bottom'></div>\").appendTo(wrapper);\n\n            if (!this.options.readonly) {\n                $(html.renderButton('<button class=\"k-signature-action k-signature-clear\"  aria-label=\"Clear signature\"></button>', {\n                    icon: \"x\",\n                    size: this.options.size,\n                    fillMode: \"flat\"\n                })).appendTo(wrapper.find(\".k-signature-actions-bottom\"));\n            }\n\n            wrapper.addClass(\"k-input k-signature\");\n\n            wrapper.width(this.options.width * scale);\n            wrapper.height(this.options.height * scale);\n\n            if (maximize) {\n                wrapper.addClass(\"k-signature-maximized\");\n            }\n\n            this._applyCssClasses(wrapper);\n            //workaround as the sizings are added to -signature- but roundings to -input-\n            wrapper.removeClass(kendo.getValidCssClass(\"k-input-\", \"size\", this.options.size));\n            wrapper.addClass(kendo.getValidCssClass(\"k-signature-\", \"size\", this.options.size));\n        },\n\n        _createPad: function() {\n            var that = this;\n            var padOptions = $.extend(true, {}, that.options, {\n                onChange: function() {\n                    var width = outerWidth(that.element, false);\n                    var height = outerHeight(that.element, false);\n                    that._pad.exportImage({\n                        width: width * that.options.exportScale,\n                        height: height * that.options.exportScale\n                    }).then(function(val) {\n                        that._value = val;\n                        that._input.val(val);\n                        that.trigger(CHANGE);\n                    });\n\n                    that._pad.exportImage({\n                        width: width * that.options.exportScale * that.options.popupScale,\n                        height: height * that.options.exportScale * that.options.popupScale\n                    }).then(function(val) {\n                        that._dialogPad.loadImage(val);\n                    });\n                },\n                onDraw: function() {\n                    that.element.find(\".k-button\").hide();\n                },\n                onDrawEnd: function() {\n                    that.element.find(\".k-button\").show();\n                }\n            });\n\n            that._pad = new Pad(that.element.find(\".k-signature-canvas\")[0], padOptions);\n        },\n\n        _createDialogPad: function() {\n            var that = this;\n            var canvas = null;\n\n            that._dialogEl = $(\"<div>\").appendTo(that.element);\n            that._dialog = new Dialog(that._dialogEl, {\n                title: false,\n                closable: false,\n                open: function() {\n                    that.trigger(OPEN);\n                },\n                close: function() {\n                    that.trigger(CLOSE);\n                }\n            });\n\n            that._dialogEl\n                .removeAttr(TABINDEX)\n                .on(\"keydown\", function(e) {\n                    if (e.keyCode === kendo.keys.ESC) {\n                        that._dialog.close();\n                    }\n                });\n\n            that._dialogPadEl = $(\"<div>\").appendTo(that._dialog.element);\n            that._createElements(that._dialogPadEl, \"mini\", true, this.options.popupScale);\n            canvas = that._dialogPadEl.find(\".k-signature-canvas\")[0];\n\n            that._dialogPad = new Pad(canvas, $.extend(true, {}, that.options, {\n                scale: that.options.popupScale,\n                onChange: function() {\n                    var width = outerWidth(that.element, false);\n                    var height = outerHeight(that.element, false);\n                    that._dialogPad.exportImage({\n                        width: width * that.options.exportScale,\n                        height: height * that.options.exportScale\n                    }).then(function(val) {\n                        that._pad.loadImage(val);\n                        that._value = val;\n                        that._input.val(val);\n                        that.trigger(CHANGE);\n                    });\n                },\n                onDraw: function() {\n                    that._dialogEl.find(\".k-button\").hide();\n                },\n                onDrawEnd: function() {\n                    that._dialogEl.find(\".k-button\").show();\n                }\n            }));\n\n            // Dialog should be opened at first for drawing to work\n            that._dialog.close();\n            that._dialogEl\n                .on(CLICK + ns, \".k-signature-clear\", function() {\n                    that.reset();\n                })\n                .on(CLICK + ns, \".k-signature-minimize\", function() {\n                    that._dialog.close();\n                });\n        }\n    });\n\n    function copyPath(pad, path) {\n        if (!path || !path.paths || !path.paths.length) {\n            return;\n        }\n        pad.path = new kendo.drawing.MultiPath(pad.pathOptions);\n        pad.rootGroup.append(pad.path);\n\n        for (var i = 0; i < path.paths.length; i++) {\n            pad.path.paths.push(path.paths[i]);\n        }\n        pad.options.onChange();\n    }\n\n    kendo.cssProperties.registerPrefix(\"Signature\", \"k-input-\");\n\n    kendo.ui.plugin(Signature);\n\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}