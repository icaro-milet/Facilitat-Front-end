{"version":3,"file":"kendo.taskboard.js","names":["$","undefined$1","kendo","window","ui","Observable","encode","htmlEncode","extend","DOT","NS","CLICK","ACTION","preventDefault","ev","TaskBoardColumn","init","options","dataItem","that","this","_dataItem","sortableUniqueClass","sortableIdentifier","styles","sortableSuffix","_render","_attachEvents","states","isReorderable","_initSortable","fn","call","empty","container","addCard","cardHtml","append","edit","element","addClass","editColumn","_renderEditHeader","getDataItem","cards","children","template","data","headerText","ellipsis","getter","dataTextField","spacer","buttons","editTemplate","textbox","input","messages","newColumn","attr","actionButton","icon","spriteCssClass","text","command","html","renderButton","iconClass","fillMode","builtinButtons","name","rules","deleteColumn","defaultButtons","headerLabelId","guid","uid","css","width","header","cardsContainer","columnCards","appendTo","_renderHeader","_buildActionsHtml","setTimeout","find","trigger","actions","disabled","i","length","button","isPlainObject","Object","keys","_validateRules","tool","split","_actionClick","target","closest","value","_textboxBlur","on","bind","keyCode","ENTER","card","cardTitle","dirClass","isRtl","sortable","Sortable","ignore","ignoreDrag","connectWith","filter","hint","clone","dragHint","grabbingCursor","offsetWidth","height","offsetHeight","placeholder","dragPlaceholder","move","_move","start","_start","end","_end","change","_change","draggable","userEvents","unbind","_select","ignoreDragSelectors","event","is","columnElement","sender","parents","action","newIndex","oldIndex","destroy","off","TaskBoardNewColumn","taskboard","Column","NewColumn","jQuery","TaskBoardCard","resources","contentTemplate","hbox","title","link","selectable","dataTitleField","cardMenuButton","body","dataDescriptionField","cardMenuButtonTemplate","headerActions","flatButton","actionsIcon","categoryColor","moveCursor","cardMenu","_resources","borderDir","isDisabled","toggleClass","dataCategoryField","color","get","categoryBorder","isSelectable","key","resource","field","cardResources","multiple","dataSource","view","resourceIndex","cardResource","valuePrimitive","dataValueField","dataIndex","resourceColor","dataColorField","result","push","_buildTemplate","format","headerTemplate","bodyTemplate","Card","ContextMenu","TaskBoardCardMenu","_overrideTemplates","_extendItems","_onSelect","_onOpen","_focus","templates","sprite","defaultItems","editCard","deleteCard","events","concat","item","items","_append","_extendItem","isEmptyObject","args","CardMenu","TaskBoardCommand","Class","_confirm","content","okText","cancel","confirm","taskboardOptions","editable","confirmation","fakePromise","Deferred","resolve","kendoConfirm","buttonLayout","open","AddColumnCommand","exec","column","columns","each","index","enableByColumn","addColumn","EditColumnCommand","DeleteColumnCommand","columnDS","columnsDataSource","deleteColumnConfirm","done","cancelChanges","remove","sync","SaveColumnCommand","columnSettings","val","set","CancelEditColumnCommand","MoveFocusCommand","columnIndex","cardElement","currentColumnIndex","direction","Math","max","min","_getColumnByElement","eq","_moveFromCardFocus","focusCard","currentIndex","seekFocusableCard","_getFocusableCard","focus","lastIndex","focusable","TaskBoardBaseCardCommand","_updateOrder","nextCard","dataOrderField","currentCard","cardIndex","map","idx","prevCard","SelectCardCommand","SaveChangesCommand","taskBoardOptions","receivedStatus","dataStatusField","targetColumn","_getColumn","activeElm","document","activeElement","pane","form","validate","then","DeleteCardCommand","deleteCardConfirm","fail","MoveCardCommand","EditCardCommand","_openPane","AddCardCommand","OpenPaneCommand","ClosePaneCommand","_closePane","SearchCommand","filters","searchOptions","search","operator","fields","_buildFilters","logic","Command","commands","Form","TaskBoardPane","_commandClick","fieldFormat","close","buttonTemplate","themeColor","delete","saveChanges","create","buttonsContainer","footerActions","footerActionButtons","_renderContent","_buildButtonsHtml","_buildHeaderTemplate","primary","TaskBoardPreviewPane","previewPane","preview","TaskBoardEditPane","formSettings","label","buttonsTemplate","formLabelId","formData","TaskBoardCreatePane","columnStatusField","firstColumn","at","status","add","createNewCard","Pane","panes","Preview","Edit","Create","baseButton","primaryButton","Keyboard","register","registerShortcut","selector","shortcut","isNaN","toUpperCase","charCodeAt","ctrlKey","shiftKey","altKey","handler","_handler","shortcuts","_getAction","_trigger","_compareShortcut","_getShortcutModifier","navigator","platform","indexOf","metaKey","KeyboardManager","__meta__","id","category","description","depends","TaskBoardStyles","wrapper","toolbar","columnsContainer","selected","Widget","DataSource","isArray","Array","GENERIC","MOVE","MOVE_START","MOVE_END","SELECT","EXECUTE","CHANGE","ERROR","DATABINDING","DATABOUND","COLUMNSDATABINDING","COLUMNSDATABOUND","TaskBoard","_sortableIdentifier","_wrapper","_columnsDataSource","_initResources","_dataSource","_initToolbar","_initCardMenu","_initKeyboard","autoBind","load","notify","reorderable","previewCard","defaultTools","type","overflow","component","componentOptions","commandOn","_columns","merge","itemsByStatus","itemsByColumn","columnElm","fetchPromises","_progress","fetch","when","apply","read","cardElm","getByUid","columnDataItem","columnByStatus","select","toggle","removeClass","_extendExecArgs","saveCard","model","_buildStates","_createNewModel","insert","before","executeCommand","saveColumn","keyboardManager","enable","readOnly","readOnlyByColumn","setDataSource","setColumnsDataSource","_renderCards","focusableElement","after","outerWidth","parseInt","ESC","headerElm","contentElm","colsContainer","tools","toolbarElm","toolbarOptions","_processTools","parentMessages","ToolBar","_toolbarClick","forEach","t","hidden","_isToolEnabled","toolName","found","isEditable","_isEditable","_isReorderable","_isSelectable","isReadOnly","isSearchable","_isSearchable","notLocalColumns","transport","LocalTransport","support","commandName","commandOptions","console","warn","cardDataItem","draggableEvent","elm","ns","sort","dir","schema","defaultValue","_columnsChangeHandler","_columnsErrorHandler","_columnsDataSourceChange","_error","statusField","_moveEnd","_moveStart","_changeOrder","_tabindex","_changeHandler","_errorHandler","_clearColumns","_renderCard","cardMenuOptions","showOn","alignToAnchor","_addResource","_resourceDataSource","resourceDS","progress","_registerShortcuts","DELETE","UP","DOWN","LEFT","RIGHT","closePane","plugin","kendo$1"],"sources":["kendo.taskboard.js"],"mappings":"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","sourcesContent":["import './kendo.sortable.js';\nimport './kendo.html.button.js';\nimport './kendo.core.js';\nimport './kendo.icons.js';\nimport './kendo.menu.js';\nimport './kendo.dialog.js';\nimport './kendo.form.js';\nimport './kendo.data.js';\nimport './kendo.toolbar.js';\nimport './kendo.textbox.js';\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        ui = kendo.ui,\n        Observable = kendo.Observable,\n        encode = kendo.htmlEncode,\n        extend = $.extend,\n\n        DOT = \".\",\n        NS = DOT + \"kendoTaskBoardColumn\",\n\n        CLICK = \"click\",\n        BLUR = \"blur\",\n\n        MOVE = \"move\",\n        MOVE_START = \"moveStart\",\n        MOVE_END = \"moveEnd\",\n        CHANGE = \"change\",\n        ACTION = \"action\";\n\n    var TaskBoardColumnStyles = {\n        element: \"k-taskboard-column\",\n        header: \"k-taskboard-column-header\",\n        headerText: \"k-taskboard-column-header-text\",\n        ellipsis: \"k-text-ellipsis\",\n        spacer: \"k-spacer\",\n        actions: \"k-taskboard-column-header-actions\",\n        cardsContainer: \"k-taskboard-column-cards-container\",\n        columnCards: \"k-taskboard-column-cards\",\n        actionButton: \"k-taskboard-column-action-button\",\n        card: \"k-taskboard-card\",\n        cardTitle: \"k-card-title\",\n        sortableSuffix: \"-kendosortable\",\n        textbox: \"k-textbox k-input k-input-md k-rounded-md k-input-solid\",\n        input: \"k-input-inner\",\n        newColumn: \"k-taskboard-column-new\",\n        editColumn: \"k-taskboard-column-edit\",\n        disabled: \"k-disabled\",\n        dragPlaceholder: \"k-taskboard-drag-placeholder\",\n        dragHint: \"k-taskboard-drag-hint\",\n        ignoreDrag: \"k-taskboard-drag-ignore\",\n        grabbingCursor: \"k-cursor-grabbing\"\n    };\n\n    function preventDefault(ev) { ev.preventDefault(); }\n\n    var TaskBoardColumn = Observable.extend({\n        init: function(options, dataItem) {\n            var that = this;\n\n            that._dataItem = dataItem;\n            that.options = extend(true, {}, options);\n\n            that.sortableUniqueClass = that.options.sortableIdentifier + TaskBoardColumn.styles.sortableSuffix;\n            that._render();\n            that._attachEvents();\n\n            if (options.states.isReorderable) {\n                that._initSortable();\n            }\n\n            Observable.fn.init.call(that);\n        },\n\n        empty: function() {\n            var that = this;\n            that.container.empty();\n        },\n\n        addCard: function(cardHtml) {\n            var that = this;\n            that.container.append(cardHtml);\n        },\n\n        edit: function() {\n            var that = this,\n                styles = TaskBoardColumn.styles;\n\n            that.element.addClass(styles.editColumn);\n            that._renderEditHeader();\n        },\n\n        getDataItem: function() {\n            return this._dataItem;\n        },\n\n        cards: function() {\n            var that = this;\n\n            return that.container.children();\n        },\n\n        template: (data) => `<div class=\"${encode(data.styles.headerText)} ${encode(data.styles.ellipsis)}\">${kendo.getter(data.dataTextField)(data)}</div>` +\n                  `<span class=\"${encode(data.styles.spacer)}\"></span>` +\n                  `${data.buttons}`,\n\n        editTemplate: (data) => `<div class=\"${encode(data.styles.headerText)} ${encode(data.styles.ellipsis)}\">` +\n                        `<span class=\"${encode(data.styles.textbox)}\">` +\n                            `<input class=\"${encode(data.styles.input)}\" placeholder=\"${encode(kendo.getter(data.dataTextField)(data) ? data.messages.editColumn : data.messages.newColumn)}\" ${encode(kendo.attr(\"command\"))}=\"SaveColumnCommand\" value=\"${encode(kendo.getter(data.dataTextField)(data))}\" />` +\n                        '</span>' +\n                        '</div>' +\n                        `<span class=\"${encode(data.styles.spacer)}\"></span>` +\n                        `${data.buttons}`,\n\n        actionButton: ({ styles, icon, spriteCssClass, text, command, options }) =>\n                    kendo.html.renderButton(`<button class=\"${encode(styles.actionButton)}\" title=\"${encode(text)}\" ${encode(kendo.attr(\"command\"))}=\"${encode(command)}\" ${options ? encode(kendo.attr('options')) + \"=\" + encode(options) : \"\"}></button>`, {\n                        icon: encode(icon),\n                        iconClass: `k-button-icon ${encode(spriteCssClass)}`,\n                        fillMode: \"flat\"\n                    }),\n\n        builtinButtons: {\n            \"editColumn\": { name: \"editColumn\", icon: \"pencil\", text: \"Edit Column\", command: \"EditColumnCommand\", rules: \"isEditable\" },\n            \"addCard\": { name: \"addCard\", icon: \"plus\", text: \"Add Card\", command: \"AddCardCommand\", rules: \"isEditable\" },\n            \"deleteColumn\": { name: \"deleteColumn\", icon: \"x\", text: \"Delete Column\", command: \"DeleteColumnCommand\", rules: \"isEditable\" }\n        },\n\n        defaultButtons: [ \"editColumn\", \"addCard\", \"deleteColumn\" ],\n\n        _render: function() {\n            var that = this,\n                styles = TaskBoardColumn.styles,\n                headerLabelId = kendo.guid(),\n                element = $(\"<div class='\" + styles.element + \"'></div>\")\n                    .attr(kendo.attr(\"uid\"), that._dataItem.uid)\n                    .css({\n                        width: that.options.width\n                    })\n                    .attr(\"role\", \"list\").attr(\"aria-labelledby\", headerLabelId),\n                header = $(\"<div class='\" + styles.header + \"'></div>\"),\n                cardsContainer = $(\"<div class='\" + styles.cardsContainer + \"'></div>\"),\n                columnCards = $(\"<div class='\" + styles.columnCards + \"'></div>\");\n\n            that.header = header.appendTo(element).attr(\"id\", headerLabelId);\n\n            that._renderHeader();\n\n            cardsContainer.appendTo(element);\n            that.container = columnCards\n                                .appendTo(cardsContainer)\n                                .addClass(that.sortableUniqueClass);\n\n            that.element = element;\n        },\n\n        _renderHeader: function() {\n            var that = this,\n                styles = TaskBoardColumn.styles,\n                options = that.options,\n                template = options.template ? options.template : that.template;\n\n            that.header.append(kendo.template(template)(extend(true, {}, {\n                styles: styles,\n                buttons: that._buildActionsHtml(),\n                dataTextField: options.dataTextField\n            }, that._dataItem)));\n        },\n\n        _renderEditHeader: function() {\n            var that = this,\n                styles = TaskBoardColumn.styles,\n                options = that.options,\n                template = options.editTemplate ? options.editTemplate : that.editTemplate;\n\n            that.header.html(\"\");\n\n            that.header.append(kendo.template(template)(extend(true, {}, {\n                styles: styles,\n                messages: options.messages,\n                buttons: that._buildActionsHtml(),\n                dataTextField: options.dataTextField\n            }, that._dataItem)));\n\n            setTimeout(function() {\n                that.header.find(\"input\").trigger(\"focus\");\n            }, 0);\n\n            that.header.find(DOT + styles.actions).addClass(styles.disabled);\n        },\n\n        _buildActionsHtml: function() {\n            var that = this,\n                options = that.options,\n                messages = options.messages,\n                buttons = options.buttons || that.defaultButtons,\n                styles = TaskBoardColumn.styles,\n                html = \"<div class='\" + styles.actions + \"'>\";\n\n            for (var i = 0; i < buttons.length; i++) {\n                var button = buttons[i];\n                button = ($.isPlainObject(button) && Object.keys(button).length === 1 && button.name) ? button.name : button;\n\n                if (typeof button === \"string\") {\n                    button = extend(true, {},\n                        that.builtinButtons[button] || { spriteCssClass: button, command: button + \"Command\" },\n                        { text: messages[button] || button }\n                    );\n                } else if ($.isPlainObject(button) && button.name) {\n                    button = extend(true, button,\n                        { text: messages[button.name] }\n                    );\n                }\n\n                if (!that._validateRules(button)) {\n                    continue;\n                }\n\n                button.spriteCssClass = button.spriteCssClass || \"\";\n\n                html += kendo.template(that.actionButton)(extend(true, {}, {\n                    styles: styles,\n                    options: false\n                }, button));\n            }\n\n            html += \"</div>\";\n\n            return html;\n        },\n\n        _validateRules: function(tool) {\n            var that = this,\n                states = that.options.states,\n                rules = tool.rules ? tool.rules.split(\";\") : [];\n\n            if (!rules.length) {\n                return true;\n            }\n\n            for (var i = 0; i < rules.length; i++) {\n                if (!states[rules[i]]) {\n                    return false;\n                }\n            }\n\n            return true;\n        },\n\n        _actionClick: function(ev) {\n            var that = this,\n                target = $(ev.target).closest(\"[\" + kendo.attr(\"command\") + \"]\"),\n                command = target.attr(kendo.attr(\"command\")),\n                options = target.attr(kendo.attr(\"options\"));\n\n            options = typeof(options) === \"string\" ? { value: options } : options;\n\n            if (!command) {\n                return;\n            }\n\n            that.trigger(ACTION, {\n                command: command,\n                options: extend({ target: target }, options)\n            });\n        },\n\n        _textboxBlur: function(ev) {\n            var that = this,\n                target = $(ev.target).closest(\"[\" + kendo.attr(\"command\") + \"]\"),\n                command = target.attr(kendo.attr(\"command\")),\n                options = target.attr(kendo.attr(\"options\"));\n\n            options = typeof(options) === \"string\" ? { value: options } : options;\n\n            if (!command) {\n                return;\n            }\n\n            that.trigger(ACTION, {\n                command: command,\n                options: extend({ target: target }, options)\n            });\n        },\n\n        _attachEvents: function() {\n            var that = this;\n\n            that.header.on(CLICK + NS,\n                DOT + TaskBoardColumn.styles.actionButton,\n                that._actionClick.bind(that));\n\n            that.header.on(BLUR + NS,\n                DOT + TaskBoardColumn.styles.input,\n                that._textboxBlur.bind(that));\n\n            that.header.on(\"keyup\" + NS,\n                DOT + TaskBoardColumn.styles.input,\n                function(ev) {\n                    if (ev.keyCode === kendo.keys.ENTER) {\n                        that._textboxBlur(ev);\n                    }\n                }\n            );\n\n            if (that.container) {\n                that.container.on(CLICK + NS,\n                    DOT + TaskBoardColumn.styles.card + \" [\" + kendo.attr(\"command\") + \"]\",\n                    that._actionClick.bind(that));\n\n                that.container.on(CLICK + NS,\n                    DOT + TaskBoardColumn.styles.card + \" a.\" + TaskBoardColumn.styles.cardTitle,\n                    preventDefault);\n\n            }\n        },\n\n        _initSortable: function() {\n            var that = this,\n                isRtl = that.options.states.isRtl,\n                dirClass = isRtl ? \" k-rtl\" : \"\",\n                container = that.container;\n\n            if (!that.container) {\n                return;\n            }\n\n            that.sortable = new ui.Sortable(container, {\n                ignore: DOT + TaskBoardColumn.styles.ignoreDrag + \" *\",\n                connectWith: DOT + that.sortableUniqueClass,\n                filter: DOT + TaskBoardColumn.styles.card,\n                hint: function(element) {\n                    return element.clone()\n                        .addClass(TaskBoardColumn.styles.dragHint + \" \" + TaskBoardColumn.styles.grabbingCursor + dirClass)\n                        .css({\n                        width: element[0].offsetWidth,\n                        height: element[0].offsetHeight\n                    });\n                },\n                placeholder: function(element) {\n                    return $(\"<div></div>\")\n                        .addClass(TaskBoardColumn.styles.dragPlaceholder)\n                        .css({\n                            height: element[0].offsetHeight\n                        });\n                },\n                move: that._move.bind(that),\n                start: that._start.bind(that),\n                end: that._end.bind(that),\n                change: that._change.bind(that)\n            });\n\n            that.sortable.draggable.userEvents.unbind(\"select\");\n            that.sortable.draggable.userEvents.bind(\"select\", that._select.bind(that));\n        },\n\n        _select: function(ev) {\n            var ignoreDragSelectors = TaskBoardColumn.ignoreDragSelectors;\n            var target = $(ev.event.target);\n\n            for (var i = 0; i < ignoreDragSelectors.length; i++) {\n                if (target.is(ignoreDragSelectors[i])) {\n                    ev.preventDefault();\n                    break;\n                }\n            }\n        },\n\n        _move: function(ev) {\n            extend(ev, {\n                columnElement: ev.sender.element.parents(DOT + TaskBoardColumn.styles.element)\n            });\n            this.trigger(MOVE, ev);\n        },\n\n        _start: function(ev) {\n            extend(ev, {\n                columnElement: ev.sender.element.parents(DOT + TaskBoardColumn.styles.element)\n            });\n            this.trigger(MOVE_START, ev);\n        },\n\n        _end: function(ev) {\n            extend(ev, {\n                columnElement: ev.sender.element.parents(DOT + TaskBoardColumn.styles.element)\n            });\n            this.trigger(MOVE_END, ev);\n        },\n\n        _change: function(ev) {\n            var that = this;\n\n            extend(ev, {\n                columnElement: ev.sender.element.parents(DOT + TaskBoardColumn.styles.element)\n            });\n\n            that.trigger(CHANGE, ev);\n\n            if ((ev.action === \"receive\" && ev.newIndex >= 0) || (ev.action === \"sort\" && ev.newIndex !== ev.oldIndex)) {\n                that.trigger(ACTION, {\n                    command: \"MoveCardCommand\",\n                    options: ev\n                });\n            }\n        },\n\n        destroy: function() {\n            var that = this;\n\n            that.header.off(NS);\n            that.container.off(NS);\n\n            if (that.sortable) {\n                that.sortable.destroy();\n            }\n        }\n    });\n\n    var TaskBoardNewColumn = TaskBoardColumn.extend({\n        _render: function() {\n            var that = this,\n                styles = TaskBoardColumn.styles,\n                element = $(\"<div class='\" + styles.element + \"'></div>\").addClass(styles.newColumn).attr(kendo.attr(\"uid\"), that._dataItem.uid),\n                header = $(\"<div class='\" + styles.header + \"'></div>\");\n\n            that.header = header.appendTo(element);\n\n            that._renderEditHeader();\n\n            that.element = element;\n        }\n    });\n\n    extend(kendo.ui, {\n        taskboard: {\n            Column: TaskBoardColumn,\n            NewColumn: TaskBoardNewColumn\n        }\n    });\n\n    extend(true, kendo.ui.taskboard.Column, {\n        styles: TaskBoardColumnStyles,\n        ignoreDragSelectors: [\"img\"]\n    });\n\n})(window.kendo.jQuery);\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        Observable = kendo.Observable,\n        encode = kendo.htmlEncode,\n        extend = $.extend;\n\n    var TaskBoardCardStyles = {\n        element: \"k-taskboard-card\",\n        card: \"k-card\",\n        header: \"k-card-header\",\n        hbox: \"k-hbox\",\n        title: \"k-card-title\",\n        link: \"k-link\",\n        spacer: \"k-spacer\",\n        button: \"k-button\",\n        cardMenuButton: \"k-taskboard-card-menu-button k-icon-button\",\n        flatButton: \"k-button-md k-rounded-md k-button-flat k-button-flat-base\",\n        body: \"k-card-body\",\n        actionsIcon: \"more-vertical\",\n        moveCursor: \"k-cursor-move\",\n        categoryBorder: \"k-taskboard-card-category\",\n        headerActions: \"k-card-header-actions\",\n        disabled: \"k-disabled\"\n    };\n\n    var TaskBoardCard = Observable.extend({\n        init: function(options, dataItem, resources) {\n            var that = this;\n\n            that._dataItem = dataItem;\n            that.resources = resources;\n\n            that.options = extend(true, {}, options);\n\n            that._render();\n\n            Observable.fn.init.call(that);\n        },\n\n        contentTemplate: (data) => `<div class=\"${encode(data.styles.header)} ${encode(data.styles.hbox)}\">` +\n            `<a class=\"${encode(data.styles.title)} ${encode(data.styles.link)}\" href=\"#\" ${data.selectable ? kendo.attr(\"command\") + '=SelectCardCommand' : ''}>${encode(kendo.getter(data.dataTitleField)(data))}</a>` +\n            `<span class=\"${encode(data.styles.spacer)}\"></span>` +\n            `${data.cardMenuButton}` +\n        '</div>' +\n        `<div class=\"${encode(data.styles.body)}\"><p>${encode(kendo.getter(data.dataDescriptionField)(data))}</p></div>`,\n\n        cardMenuButtonTemplate: ({ styles }) => `<div class=\"${encode(styles.headerActions)}\"><button aria-label=\"menu\" class=\"${encode(styles.button)} ${encode(styles.flatButton)} ${encode(styles.cardMenuButton)}\">` +\n                                    kendo.ui.icon({ icon: encode(styles.actionsIcon), iconClass: \"k-button-icon\" }) +\n                                '</button></div>',\n\n        _render: function() {\n            var that = this,\n                options = that.options,\n                styles = TaskBoardCard.styles,\n                template = options.template || that.contentTemplate,\n                element = $(\"<div class='\" + styles.element + \" \" + styles.card + \" \" + styles.moveCursor + \"'></div>\"),\n                cardMenuButtonTemplate = options.cardMenu ? that.cardMenuButtonTemplate : \"\",\n                resources = that._resources(that._dataItem),\n                borderDir = options.states.isRtl ? \"borderRightColor\" : \"borderLeftColor\",\n                categoryColor;\n\n            element\n                .attr(kendo.attr(\"uid\"), that._dataItem.uid)\n                .attr(\"aria-disabled\", !options.states.isDisabled)\n                .attr(\"role\", \"listitem\")\n                .toggleClass(styles.disabled, options.states.isDisabled);\n\n            categoryColor = (resources[options.dataCategoryField] && resources[options.dataCategoryField].color) ||\n                                that._dataItem.get(options.dataCategoryField);\n\n            if (categoryColor) {\n                element.addClass(styles.categoryBorder).css(borderDir, categoryColor);\n            }\n\n            element.append(kendo.template(template)(extend(true, {}, {\n                styles: styles,\n                cardMenuButton: kendo.template(cardMenuButtonTemplate)({ styles: styles }),\n                selectable: options.states.isSelectable,\n                resources: resources,\n                dataTitleField: options.dataTitleField,\n                dataDescriptionField: options.dataDescriptionField\n            }, that._dataItem)));\n\n            that.element = element;\n        },\n\n        _resources: function(card) {\n            var that = this,\n                resources = {};\n\n            if (!that.resources) {\n                return resources;\n            }\n\n            for (var key in that.resources) {\n                var resource = that.resources[key];\n                var field = resource.field;\n                var cardResources = kendo.getter(field)(card);\n\n                if (!cardResources) {\n                    continue;\n                }\n\n                if (!resource.multiple) {\n                    cardResources = [cardResources];\n                }\n\n                var data = resource.dataSource.view();\n\n                for (var resourceIndex = 0; resourceIndex < cardResources.length; resourceIndex++) {\n                    var cardResource = null;\n\n                    var value = cardResources[resourceIndex];\n\n                    if (!resource.valuePrimitive) {\n                        value = kendo.getter(resource.dataValueField)(value);\n                    }\n\n                    for (var dataIndex = 0; dataIndex < data.length; dataIndex++) {\n                        if (data[dataIndex].get(resource.dataValueField) == value) {\n                            cardResource = data[dataIndex];\n                            break;\n                        }\n                    }\n\n                    if (cardResource !== null) {\n                        var resourceColor = kendo.getter(resource.dataColorField)(cardResource);\n                        var result = {\n                            field: resource.field,\n                            title: resource.title,\n                            name: resource.name,\n                            text: kendo.getter(resource.dataTextField)(cardResource),\n                            value: value,\n                            color: resourceColor\n                        };\n\n                        if (resource.multiple) {\n                            if (resources[resource.field]) {\n                                resources[resource.field].push(result);\n                            } else {\n                                resources[resource.field] = [result];\n                            }\n                        } else {\n                            resources[resource.field] = result;\n                        }\n                    }\n                }\n            }\n            return resources;\n        },\n\n        _buildTemplate: function() {\n            var that = this,\n                options = that.options,\n                headerTemplate = kendo.format(that.headerTemplate, options.dataTitleField),\n                bodyTemplate = kendo.format(that.bodyTemplate, options.dataDescriptionField);\n\n            return headerTemplate + bodyTemplate;\n        }\n    });\n\n    extend(kendo.ui.taskboard, {\n        Card: TaskBoardCard\n    });\n\n    extend(true, kendo.ui.taskboard.Card, { styles: TaskBoardCardStyles });\n\n})(window.kendo.jQuery);\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        extend = $.extend,\n        template = kendo.template,\n        ContextMenu = kendo.ui.ContextMenu,\n        encode = kendo.htmlEncode,\n\n        ACTION = \"action\";\n\n    var TaskBoardCardMenu = ContextMenu.extend({\n        init: function(element, options) {\n            var that = this;\n\n            ContextMenu.fn.init.call(that, element, options);\n\n            that._overrideTemplates();\n            that._extendItems();\n\n            that.bind(\"select\", that._onSelect.bind(that));\n            that.bind(\"open\", that._onOpen.bind(that));\n            that.bind(\"activate\", that._focus.bind(that));\n        },\n\n        _overrideTemplates: function() {\n            this.templates.sprite = ({ icon, spriteCssClass }) => `${(icon || spriteCssClass) ? kendo.ui.icon({ icon: encode(icon || \"\"), iconClass: encode(spriteCssClass || \"\") }) : ''}`;\n        },\n\n        defaultItems: {\n            \"editCard\": { name: \"editCard\", text: \"Edit card\", icon: \"pencil\", command: \"EditCardCommand\", rules: \"isEditable\" },\n            \"deleteCard\": { name: \"deleteCard\", text: \"Delete card\", icon: \"trash\", command: \"DeleteCardCommand\", rules: \"isEditable\" }\n        },\n\n        events: ContextMenu.fn.events.concat([\n            ACTION\n        ]),\n\n        _extendItems: function() {\n            var that = this,\n                items = that.options.items,\n                item, isBuiltInTool;\n\n            if (items && items.length) {\n                for (var i = 0; i < items.length; i++) {\n                    item = items[i];\n                    isBuiltInTool = $.isPlainObject(item) && Object.keys(item).length === 1 && item.name;\n\n                    if (isBuiltInTool) {\n                        item = item.name;\n                    }\n\n                    if ($.isPlainObject(item)) {\n                        that._append(item);\n                    } else if (that.defaultItems[item]) {\n                        item = that.defaultItems[item];\n                        that._append(item);\n                    } else if (typeof(item) === \"string\") {\n                        item = { name: item, text: item, spriteCssClass: item, command: item + \"Command\" };\n                        that._append(item);\n                    }\n                }\n            } else {\n                for (var key in that.defaultItems) {\n                    item = that.defaultItems[key];\n                    that._append(item);\n                }\n            }\n        },\n\n        _append: function(item) {\n            var that = this;\n\n            that._extendItem(item);\n\n            if (that._validateRules(item)) {\n                that.append(item);\n            }\n        },\n\n        _extendItem: function(item) {\n            var that = this,\n                messages = that.options.messages,\n                attr = {};\n\n            attr[kendo.attr(\"command\")] = item.command;\n\n            if (item.options) {\n                attr[kendo.attr(\"options\")] = item.options;\n            }\n\n            extend(item, {\n                text: messages[item.name],\n                icon: item.icon || \"\",\n                spriteCssClass: item.spriteCssClass || \"\",\n                attr: attr,\n                uid: kendo.guid()\n            });\n        },\n\n        _validateRules: function(tool) {\n            var that = this,\n                states = that.options.states,\n                rules = tool.rules ? tool.rules.split(\";\") : [];\n\n            if (!rules.length) {\n                return true;\n            }\n\n            for (var i = 0; i < rules.length; i++) {\n                if (!states[rules[i]]) {\n                    return false;\n                }\n            }\n\n            return true;\n        },\n\n        _onSelect: function(ev) {\n            var command = $(ev.item).attr(kendo.attr(\"command\")),\n                options = $(ev.item).attr(kendo.attr(\"options\")),\n                target = $(ev.target);\n\n            options = typeof(options) === \"string\" ? { value: options } : options;\n\n            if (!command) {\n                return;\n            }\n\n            this.action({\n                command: command,\n                options: extend({ target: target }, options)\n            });\n        },\n\n        _onOpen: function(ev) {\n            var menu = ev.sender,\n                items = menu.options.items;\n\n            if (!items && $.isEmptyObject(this.defaultItems)) {\n                ev.preventDefault();\n            }\n        },\n\n        _focus: function(ev) {\n            if (ev.sender) {\n                ev.sender.element.trigger(\"focus\");\n            }\n        },\n\n        action: function(args) {\n            this.trigger(ACTION, args);\n        }\n    });\n\n    extend(kendo.ui.taskboard, {\n        CardMenu: TaskBoardCardMenu\n    });\n\n    })(window.kendo.jQuery);\n\n(function($, undefined$1) {\n        var kendo = window.kendo,\n            extend = $.extend,\n            isPlainObject = $.isPlainObject,\n            Class = kendo.Class;\n\n        var TaskBoardCommand = Class.extend({\n            init: function(options) {\n                this.options = options;\n                this.taskboard = options.taskboard;\n            },\n            _confirm: function(title, content, okText, cancel) {\n                var that = this,\n                    taskboard = that.taskboard,\n                    taskboardOptions = taskboard.options,\n                    confirm;\n\n                if (isPlainObject(taskboardOptions.editable) && taskboardOptions.editable.confirmation === false ) {\n                    var fakePromise = $.Deferred();\n                    fakePromise.resolve();\n                    return fakePromise;\n                }\n\n                confirm = $(\"<div></div>\").kendoConfirm(extend({}, {\n                    title: title,\n                    content: content,\n                    messages: {\n                        okText: okText,\n                        cancel: cancel\n                    },\n                    buttonLayout: \"normal\"\n                })).data(\"kendoConfirm\");\n\n                confirm.open();\n\n                setTimeout(function() {\n                    confirm.element.trigger(\"focus\");\n                });\n\n                return confirm.result;\n            }\n        });\n\n        // Column commands\n        var AddColumnCommand = TaskBoardCommand.extend({\n            exec: function() {\n                var that = this,\n                    taskboard = that.taskboard;\n\n                if (taskboard.trigger(\"editColumn\", { column: null })) {\n                    return;\n                }\n\n                taskboard.columns().each(function(index, column) {\n                    taskboard.enableByColumn(column, false);\n                });\n                taskboard.addColumn();\n            }\n        });\n\n        var EditColumnCommand = TaskBoardCommand.extend({\n            exec: function() {\n                var that = this,\n                    options = that.options,\n                    taskboard = that.taskboard;\n\n                if (taskboard.trigger(\"editColumn\", { column: options.column })) {\n                    return;\n                }\n\n                taskboard.columns().each(function(index, column) {\n                    taskboard.enableByColumn(column, false);\n                });\n                taskboard.editColumn(options.columnElement);\n            }\n        });\n\n        var DeleteColumnCommand = TaskBoardCommand.extend({\n            exec: function() {\n                var that = this,\n                    options = that.options,\n                    taskboard = that.taskboard,\n                    taskboardOptions = taskboard.options,\n                    messages = taskboardOptions.messages,\n                    columnDS = taskboard.columnsDataSource;\n\n                var result = that._confirm(messages.deleteColumn, messages.deleteColumnConfirm, messages[\"delete\"], messages.cancel);\n\n                result.done(function() {\n                    if (taskboard.trigger(\"deleteColumn\", { column: options.column })) {\n                        taskboard.dataSource.cancelChanges();\n                        return;\n                    }\n\n                    columnDS.remove(options.column);\n                    columnDS.sync();\n                });\n            }\n        });\n\n        var SaveColumnCommand = TaskBoardCommand.extend({\n            exec: function() {\n                var that = this,\n                    options = that.options,\n                    taskboard = that.taskboard,\n                    columnSettings = taskboard.options.columnSettings,\n                    columnDS = taskboard.columnsDataSource,\n                    column = options.column,\n                    text = options.target.val();\n\n                if (taskboard.trigger(\"saveColumn\", { column: options.column })) {\n                    taskboard.dataSource.cancelChanges();\n                    return;\n                }\n\n                column.set(columnSettings.dataTextField, text);\n                columnDS.sync();\n            }\n        });\n\n        var CancelEditColumnCommand = TaskBoardCommand.extend({\n            exec: function() {\n                var that = this,\n                    taskboard = that.taskboard,\n                    columnDS = taskboard.columnsDataSource;\n\n                columnDS.cancelChanges();\n            }\n        });\n\n        //Move focus command\n        var MoveFocusCommand = TaskBoardCommand.extend({\n            exec: function() {\n                var that = this,\n                    taskboard = that.taskboard,\n                    options = that.options,\n                    cardElement = options.cardElement,\n                    columnElement = options.columnElement,\n                    columns = taskboard.columns(),\n                    currentColumnIndex = columnElement.index(),\n                    direction = options.value,\n                    columnIndex, column;\n\n                switch (direction) {\n                    case \"left\":\n                        columnIndex = Math.max(0, currentColumnIndex - 1);\n                        break;\n                    case \"right\":\n                        columnIndex = Math.min(columns.length - 1, currentColumnIndex + 1);\n                        break;\n                    default:\n                        columnIndex = currentColumnIndex;\n                        break;\n                }\n\n                that.columns = columns;\n                that.columnIndex = columnIndex;\n                that.column = column = taskboard._getColumnByElement(columns.eq(columnIndex));\n                that.cards = column.cards();\n\n                if (cardElement) {\n                    that._moveFromCardFocus(direction, cardElement);\n                } else if (columnElement && direction === \"down\") {\n                    that.cards.eq(0).trigger(\"focus\");\n                } else {\n                    columns.eq(columnIndex).trigger(\"focus\");\n                }\n            },\n            _moveFromCardFocus: function(direction, cardElement) {\n                var that = this,\n                    currentIndex = cardElement.index(),\n                    focusCard, index, seekFocusableCard = false;\n\n                switch (direction) {\n                    case \"up\":\n                        index = currentIndex - 1;\n                        break;\n                    case \"down\":\n                        index = currentIndex + 1;\n                        break;\n                    default:\n                        seekFocusableCard = true;\n                        index = currentIndex;\n                        break;\n                }\n\n                focusCard = that.cards.eq(index);\n\n                if (!focusCard.length && seekFocusableCard) {\n                    focusCard = that._getFocusableCard(index, direction);\n                }\n\n                if (index >= 0) {\n                    focusCard.trigger(\"focus\");\n                } else {\n                    that.options.columnElement.focus();\n                }\n            },\n            _getFocusableCard: function(index, direction) {\n                var that = this,\n                    lastIndex = that.cards.length - 1,\n                    focusable = that.cards.eq(Math.min(index, lastIndex));\n\n                if (focusable.length) {\n                    return focusable;\n                }\n\n                if (that.columnIndex <= 0 || that.columnIndex >= that.columns.length - 1) {\n                    return;\n                }\n\n                switch (direction) {\n                    case \"left\":\n                        that.columnIndex = Math.max(0, that.columnIndex - 1);\n                        break;\n                    case \"right\":\n                        that.columnIndex = Math.min(that.columns.length - 1, that.columnIndex + 1);\n                        break;\n                }\n\n                that.column = that.taskboard._getColumnByElement(that.columns.eq(that.columnIndex));\n                that.cards = that.column.cards();\n\n                return that._getFocusableCard(index, direction);\n\n            }\n        });\n\n        // Card commands\n        var TaskBoardBaseCardCommand = TaskBoardCommand.extend({\n            _updateOrder: function(column, currentIndex) {\n                var that = this,\n                    taskboard = that.taskboard,\n                    taskBoardOptions = taskboard.options,\n                    dataOrderField = taskBoardOptions.dataOrderField,\n                    options = that.options,\n                    currentCard = options.card,\n                    cardIndex = options.cardElement ? options.cardElement.index() : column.cards().length,\n                    newIndex = currentIndex,\n                    cards = column.cards().map(function(idx, card) {\n                        return taskboard.dataItem(card);\n                    }),\n                    prevCard = cards[cardIndex - 1],\n                    nextCard;\n\n                    currentCard.set(dataOrderField, newIndex);\n\n                    if (prevCard && prevCard.get(dataOrderField) >= currentCard.get(dataOrderField)) {\n                        currentCard.set(dataOrderField, prevCard.get(dataOrderField) + 1);\n                    }\n\n                    for (var i = newIndex + 1; i < cards.length; i++) {\n                        nextCard = cards[i];\n\n                        if (nextCard.get(dataOrderField) <= currentCard.get(dataOrderField)) {\n                            nextCard.set(dataOrderField, currentCard.get(dataOrderField) + 1);\n                            currentCard = nextCard;\n                        } else {\n                            break;\n                        }\n                    }\n            }\n        });\n\n        var SelectCardCommand = TaskBoardCommand.extend({\n            exec: function() {\n                var that = this,\n                    taskboard = that.taskboard,\n                    options = that.options,\n                    cardElement = options.cardElement;\n\n                taskboard._select(cardElement, true);\n                cardElement.focus();\n            }\n        });\n\n        var SaveChangesCommand = TaskBoardBaseCardCommand.extend({\n            exec: function() {\n                var that = this,\n                    taskboard = that.taskboard,\n                    taskBoardOptions = taskboard.options,\n                    options = that.options,\n                    receivedStatus = options.card.get(taskBoardOptions.dataStatusField),\n                    targetColumn = taskboard._getColumn(receivedStatus),\n                    activeElm = $(document.activeElement);\n\n                if (activeElm.length) {\n                    activeElm.trigger(\"change\");\n                }\n\n                if (taskboard.pane && taskboard.pane.form && !taskboard.pane.form.validate()) {\n                    return;\n                }\n\n                if (taskboard.trigger(\"saveCard\", { card: options.card })) {\n                    taskboard.dataSource.cancelChanges();\n                    return;\n                }\n\n                if (targetColumn && taskBoardOptions.dataOrderField) {\n                    that._updateOrder(targetColumn, options.card.get(taskBoardOptions.dataOrderField));\n                }\n\n                taskboard.dataSource.sync().then(function() {\n                    taskboard.columns().eq(0).trigger(\"focus\");\n                });\n            }\n        });\n\n        var DeleteCardCommand = TaskBoardCommand.extend({\n            exec: function() {\n                var that = this,\n                    taskboard = that.taskboard,\n                    messages = taskboard.options.messages,\n                    options = that.options;\n\n                var result = that._confirm(messages.deleteCard, messages.deleteCardConfirm, messages[\"delete\"], messages.cancel);\n\n                result\n                    .done(function() {\n                        if (taskboard.trigger(\"deleteCard\", { card: options.card })) {\n                            taskboard.dataSource.cancelChanges();\n                            return;\n                        }\n\n                        taskboard.dataSource.remove(options.card);\n                        taskboard.dataSource.sync().then(function() {\n                            taskboard.columns().eq(0).trigger(\"focus\");\n                        });\n                    })\n                    .fail(function() {\n                        options.cardElement.trigger(\"focus\");\n                    });\n            }\n        });\n\n        var MoveCardCommand = TaskBoardBaseCardCommand.extend({\n            exec: function() {\n                var that = this,\n                    taskboard = that.taskboard,\n                    taskBoardOptions = taskboard.options,\n                    columnSettings = taskBoardOptions.columnSettings,\n                    options = that.options,\n                    receivedStatus = options.column.get(columnSettings.dataStatusField);\n\n                options.card.set(taskBoardOptions.dataStatusField, receivedStatus);\n\n                if (taskBoardOptions.dataOrderField) {\n                    that._updateOrder(taskboard._getColumn(receivedStatus), options.newIndex);\n                }\n\n                taskboard.dataSource.sync();\n            }\n        });\n\n        var EditCardCommand = TaskBoardCommand.extend({\n            exec: function() {\n                var that = this,\n                    taskboard = that.taskboard,\n                    options = that.options;\n\n                if (taskboard.trigger(\"editCard\", { card: options.card })) {\n                    return;\n                }\n\n                taskboard._openPane(extend({\n                    pane: \"Edit\"\n                }, options));\n            }\n        });\n\n        var AddCardCommand = TaskBoardCommand.extend({\n            exec: function() {\n                var that = this,\n                    taskboard = that.taskboard,\n                    options = that.options;\n\n                if (taskboard.trigger(\"editCard\", { card: null })) {\n                    return;\n                }\n                taskboard.dataSource.cancelChanges();\n                taskboard._openPane(extend({\n                    pane: \"Create\"\n                }, options));\n            }\n        });\n\n        // Pane commands\n        var OpenPaneCommand = TaskBoardCommand.extend({\n            exec: function() {\n                var that = this,\n                    options = that.options,\n                    taskboard = that.taskboard;\n\n                taskboard._openPane({\n                    pane: options.value,\n                    card: options.card,\n                    cardElement: options.cardElement,\n                    column: options.column,\n                    columnElement: options.columnElement\n                });\n            }\n        });\n\n        var ClosePaneCommand = TaskBoardCommand.extend({\n            exec: function() {\n                var that = this,\n                    taskboard = that.taskboard;\n\n                taskboard._closePane();\n                taskboard.dataSource.cancelChanges();\n            }\n        });\n\n        // Search command\n\n        var SearchCommand = TaskBoardCommand.extend({\n            exec: function() {\n                var that = this,\n                    value = that.options.value,\n                    taskboard = that.taskboard,\n                    taskboardOptions = taskboard.options,\n                    searchOptions = taskboardOptions.search,\n                    operator = searchOptions.operator,\n                    fields = (searchOptions && searchOptions.fields) || [ taskboardOptions.dataTitleField, taskboardOptions.dataDescriptionField ],\n                    filters;\n\n                filters = that._buildFilters(fields, operator, value);\n\n                taskboard.dataSource.filter(filters);\n            },\n            _buildFilters: function(fields, operator, value) {\n                var filters = fields.map(function(field) {\n                    return { field: field, operator: operator, value: value };\n                });\n\n                return { logic: \"or\", filters: filters };\n            }\n        });\n\n        extend(kendo.ui.taskboard, {\n            Command: TaskBoardCommand,\n            commands: {\n                AddColumnCommand: AddColumnCommand,\n                EditColumnCommand: EditColumnCommand,\n                DeleteColumnCommand: DeleteColumnCommand,\n                SaveColumnCommand: SaveColumnCommand,\n                CancelEditColumnCommand: CancelEditColumnCommand,\n                OpenPaneCommand: OpenPaneCommand,\n                ClosePaneCommand: ClosePaneCommand,\n                SelectCardCommand: SelectCardCommand,\n                MoveFocusCommand: MoveFocusCommand,\n                SaveChangesCommand: SaveChangesCommand,\n                DeleteCardCommand: DeleteCardCommand,\n                MoveCardCommand: MoveCardCommand,\n                EditCardCommand: EditCardCommand,\n                AddCardCommand: AddCardCommand,\n                SearchCommand: SearchCommand\n            }\n        });\n\n    })(window.kendo.jQuery);\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        extend = $.extend,\n        Observable = kendo.Observable,\n        encode = kendo.htmlEncode,\n\n        Form = kendo.ui.Form,\n\n        DOT = \".\",\n        NS = DOT + \"kendoTaskBoardPane\",\n\n        ACTION = \"action\",\n        CLICK = \"click\";\n\n    var TaskBoardPaneStyles = {\n        element: \"k-taskboard-pane\",\n        edit: \"k-taskboard-edit-pane\",\n        preview: \"k-taskboard-preview-pane\",\n        header: \"k-taskboard-pane-header\",\n        headerText: \"k-taskboard-pane-header-text\",\n        spacer: \"k-spacer\",\n        headerActions: \"k-taskboard-pane-header-actions\",\n        content: \"k-taskboard-pane-content\",\n        footerActions: \"k-taskboard-pane-actions\",\n        footerActionButtons: \"k-actions k-hstack k-justify-content-start\",\n        baseButton: \"k-button-solid-base\",\n        primaryButton: \"k-button-solid-primary\"\n    };\n\n    var TaskBoardPane = Observable.extend({\n        init: function(taskboard, options, dataItem, resources) {\n            var that = this;\n\n            that.taskboard = taskboard;\n            that._dataItem = dataItem;\n            that.resources = resources;\n            that.options = extend(true, {}, options);\n\n            that._render();\n\n            that.element.on(CLICK + NS,\n                \"[\" + kendo.attr(\"command\") + \"]\",\n                that._commandClick.bind(that));\n\n            Observable.fn.init.call(that);\n        },\n        headerTemplate: ({ styles, messages, fieldFormat }) => `<div class=\"${encode(styles.headerText)}\">${fieldFormat}</div>` +\n                        `<span class=\"${encode(styles.spacer)}\"></span>` +\n                        `<div class=\"${encode(styles.headerActions)}\">` +\n                            kendo.html.renderButton(`<button title=\"${encode(messages.close)}\" ${encode(kendo.attr(\"command\"))}=\"ClosePaneCommand\"></button>`, {\n                                icon: \"x\",\n                                iconClass: 'k-button-icon',\n                                fillMode: \"flat\",\n                            }) +\n                        '</div>',\n        buttonTemplate: ({ styles, icon, spriteCssClass, text, fillMode, themeColor, command, options }) =>\n            kendo.html.renderButton(`<button title=\"${encode(text)}\" ${encode(kendo.attr(\"command\"))}=\"${encode(command)}\" ${encode(kendo.attr(\"options\"))}=\"${encode(options)}\">` +\n                `${encode(text)}` +\n            '</button>', {\n                icon: encode(icon),\n                iconClass: `k-button-icon ${encode(spriteCssClass)}`,\n                fillMode: fillMode,\n                themeColor: themeColor\n            }),\n        contentTemplate: () => ``,\n        builtinButtons: {\n            \"edit\": { name: \"edit\", icon: \"pencil\", text: \"Edit\", themeColor: \"primary\", command: \"EditCardCommand\", rules: \"isEditable\" },\n            \"delete\": { name: \"delete\", icon: \"trash\", text: \"Delete\", command: \"DeleteCardCommand\", rules: \"isEditable\", fillMode: \"flat\", themeColor: \"primary\" },\n            \"cancel\": { name: \"cancel\", icon: \"cancel-outline\", text: \"Cancel\", command: \"ClosePaneCommand\" },\n            \"saveChanges\": { name: \"saveChanges\", icon: \"save\", text: \"Save\", command: \"SaveChangesCommand\", themeColor: \"primary\", rules: \"isEditable\" },\n            \"create\": { name: \"create\", icon: \"save\", text: \"Create\", command: \"SaveChangesCommand\", themeColor: \"primary\", rules: \"isEditable\" }\n        },\n        defaultButtons: [],\n        _render: function() {\n            var that = this,\n                styles = TaskBoardPane.styles,\n                element = $(\"<div class='\" + styles.element + \"'></div>\"),\n                header = $(\"<div class='\" + styles.header + \"'></div>\"),\n                content = $(\"<div class='\" + styles.content + \"'></div>\"),\n                buttonsContainer = $(\"<div class='\" + styles.footerActions + \" \" + styles.footerActionButtons + \"'></div>\");\n\n            that.header = header.appendTo(element);\n            that._renderHeader();\n            that.content = content.appendTo(element);\n            that._renderContent();\n            that.buttonsContainer = buttonsContainer.appendTo(element);\n            that.buttonsContainer.append(that._buildButtonsHtml());\n            that.element = element;\n        },\n        _renderHeader: function() {\n            var that = this,\n                styles = TaskBoardPane.styles,\n                options = that.options,\n                messages = options.messages,\n                headerTemplate = options.headerTemplate ? options.headerTemplate : that.headerTemplate,\n                resources = that._resources(that._dataItem);\n\n            that.header.append(kendo.template(headerTemplate)(extend(true, {}, {\n                styles: styles,\n                messages: messages,\n                resources: resources,\n                fieldFormat: that._buildHeaderTemplate(that._dataItem)\n            }, that._dataItem)));\n        },\n        _buildHeaderTemplate: function(dataItem) {\n            var that = this;\n            return encode(kendo.getter(that.options.dataTitleField)(dataItem));\n        },\n        _renderContent: function() {\n            var that = this,\n                styles = TaskBoardPane.styles,\n                options = that.options,\n                messages = options.messages,\n                contentTemplate = options.template || that.contentTemplate,\n                resources = that._resources(that._dataItem);\n\n            that.content.append(kendo.template(contentTemplate)(extend(true, {}, {\n                styles: styles,\n                messages: messages,\n                resources: resources\n            }, that._dataItem)));\n        },\n        _resources: function(card) {\n            var that = this,\n                resources = {};\n\n            if (!that.resources) {\n                return resources;\n            }\n\n            for (var key in that.resources) {\n                var resource = that.resources[key];\n                var field = resource.field;\n                var cardResources = kendo.getter(field)(card);\n\n                if (!cardResources) {\n                    continue;\n                }\n\n                if (!resource.multiple) {\n                    cardResources = [cardResources];\n                }\n\n                var data = resource.dataSource.view();\n\n                for (var resourceIndex = 0; resourceIndex < cardResources.length; resourceIndex++) {\n                    var cardResource = null;\n\n                    var value = cardResources[resourceIndex];\n\n                    if (!resource.valuePrimitive) {\n                        value = kendo.getter(resource.dataValueField)(value);\n                    }\n\n                    for (var dataIndex = 0; dataIndex < data.length; dataIndex++) {\n                        if (data[dataIndex].get(resource.dataValueField) == value) {\n                            cardResource = data[dataIndex];\n                            break;\n                        }\n                    }\n\n                    if (cardResource !== null) {\n                        var resourceColor = kendo.getter(resource.dataColorField)(cardResource);\n                        var result = {\n                            field: resource.field,\n                            title: resource.title,\n                            name: resource.name,\n                            text: kendo.getter(resource.dataTextField)(cardResource),\n                            value: value,\n                            color: resourceColor\n                        };\n\n                        if (resource.multiple) {\n                            if (resources[resource.field]) {\n                                resources[resource.field].push(result);\n                            } else {\n                                resources[resource.field] = [result];\n                            }\n                        } else {\n                            resources[resource.field] = result;\n                        }\n                    }\n                }\n            }\n            return resources;\n        },\n        _buildButtonsHtml: function() {\n            var that = this,\n                options = that.options,\n                messages = options.messages,\n                buttons = options.buttons || that.defaultButtons,\n                styles = TaskBoardPane.styles,\n                html = \"\";\n\n            for (var i = 0; i < buttons.length; i++) {\n                var button = buttons[i];\n                button = ($.isPlainObject(button) && Object.keys(button).length === 1 && button.name) ? button.name : button;\n\n                if (typeof button === \"string\") {\n                    if (button === \"spacer\") {\n                        html += '<span class=\"k-spacer\"></span>';\n                        continue;\n                    }\n\n                    button = extend(true, {},\n                        that.builtinButtons[button] || { spriteCssClass: button, command: button + \"Command\" },\n                        { text: messages[button] || button }\n                    );\n                } else if ($.isPlainObject(button) && button.name) {\n                    button = extend(true, button,\n                        { text: messages[button.name] }\n                    );\n                }\n\n                if (!that._validateRules(button)) {\n                    continue;\n                }\n\n                button.spriteCssClass = button.spriteCssClass || \"\";\n\n                html += kendo.template(that.buttonTemplate)(extend(true, {}, {\n                    styles: styles,\n                    messages: messages,\n                    primary: false,\n                    options: null\n                }, button));\n            }\n\n            return html;\n        },\n        _commandClick: function(ev) {\n            var that = this,\n                target = $(ev.target).closest(\"[\" + kendo.attr(\"command\") + \"]\"),\n                command = target.attr(kendo.attr(\"command\")),\n                options = target.attr(kendo.attr(\"options\")),\n                card = that._dataItem;\n\n            options = typeof(options) === \"string\" ? { value: options } : options;\n\n            if (!command) {\n                return;\n            }\n\n            that.trigger(ACTION, {\n                command: command,\n                options: extend({ card: card }, options)\n            });\n        },\n        _validateRules: function(tool) {\n            var that = this,\n                states = that.options.states,\n                rules = tool.rules ? tool.rules.split(\";\") : [];\n\n            if (!rules.length) {\n                return true;\n            }\n\n            for (var i = 0; i < rules.length; i++) {\n                if (!states[rules[i]]) {\n                    return false;\n                }\n            }\n\n            return true;\n        },\n        destroy: function() {\n            var that = this;\n\n            that.element.off(NS);\n            that.element.remove();\n        }\n    });\n\n    var TaskBoardPreviewPane = TaskBoardPane.extend({\n        init: function(taskboard, options, dataItem, resources) {\n            var that = this;\n\n            options = extend({}, options.previewPane, {\n                dataTitleField: options.dataTitleField,\n                dataDescriptionField: options.dataDescriptionField,\n                messages: options.messages,\n                states: options.states\n            });\n\n            that.contentTemplate = (data) => encode(kendo.getter(options.dataDescriptionField)(data));\n\n            TaskBoardPane.fn.init.call(that, taskboard, options, dataItem, resources);\n\n            that.element.addClass(TaskBoardPane.styles.preview);\n        },\n        defaultButtons: [ \"edit\", \"spacer\", \"delete\" ]\n    });\n\n    var TaskBoardEditPane = TaskBoardPane.extend({\n        init: function(taskboard, options, dataItem) {\n            var that = this;\n\n            options = extend({}, options.editable, {\n                dataTitleField: options.dataTitleField,\n                dataDescriptionField: options.dataDescriptionField,\n                messages: options.messages,\n                states: options.states\n            });\n\n            that.formSettings = extend(that.formSettings, {\n                items: [\n                    { field: options.dataTitleField, label: options.messages[options.dataTitleField] },\n                    { field: options.dataDescriptionField, label: options.messages[options.dataDescriptionField] }\n                ]\n            }, options.form);\n\n            TaskBoardPane.fn.init.call(that, taskboard, options, dataItem);\n\n            that.element.addClass(TaskBoardPane.styles.edit);\n        },\n        defaultButtons: [ \"saveChanges\", \"cancel\" ],\n        formSettings: {\n            buttonsTemplate: () => \"\"\n        },\n        _buildHeaderTemplate: function(dataItem) {\n            var that = this;\n            return `${that.options.messages.edit} ${encode(kendo.getter(that.options.dataTitleField)(dataItem))}`;\n        },\n        _renderContent: function() {\n            var that = this,\n                options = that.options,\n                styles = TaskBoardPane.styles,\n                formSettings = options.form || that.formSettings,\n                formLabelId = kendo.guid(),\n                element = $(\"<div></div>\")\n                    .attr(\"role\", \"form\")\n                    .attr(\"aria-labelledby\", formLabelId);\n\n            that.header.find(DOT + styles.headerText).attr(\"id\", formLabelId);\n\n            that.content.append(element);\n\n            that.form = new Form(element, extend({}, formSettings, {\n                formData: that._dataItem\n            }));\n\n            that.form.element.find(\"input\").trigger(\"focus\");\n        }\n    });\n\n    var TaskBoardCreatePane = TaskBoardEditPane.extend({\n        init: function(taskboard, options, dataItem, resources, column) {\n            var that = this,\n                columnStatusField = options.columnSettings.dataStatusField,\n                firstColumn = taskboard.columnsDataSource.view().at(0),\n                status = column ? column[columnStatusField] : firstColumn[columnStatusField],\n                clone = extend({}, dataItem);\n\n            dataItem = taskboard.dataSource.add();\n            dataItem.set(options.dataStatusField, status);\n\n            for (var key in clone) {\n                dataItem.set(key, clone[key]);\n            }\n\n            TaskBoardEditPane.fn.init.call(that, taskboard, options, dataItem, resources);\n        },\n        _buildHeaderTemplate: function(dataItem) {\n            var that = this;\n            return that.options.messages.createNewCard;\n        },\n        defaultButtons: [ \"create\", \"cancel\"]\n    });\n\n    extend(kendo.ui.taskboard, {\n        Pane: TaskBoardPane,\n        panes: {\n            Preview: TaskBoardPreviewPane,\n            Edit: TaskBoardEditPane,\n            Create: TaskBoardCreatePane\n        }\n    });\n\n    extend(true, kendo.ui.taskboard.Pane, { styles: TaskBoardPaneStyles });\n\n})(window.kendo.jQuery);\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        Observable = kendo.Observable,\n\n        extend = $.extend,\n\n        DOT = \".\",\n        NS = DOT + \"kendoKeyboardManager\",\n        KEYDOWN = \"keydown\",\n        ACTION = \"action\";\n\n\n    var Keyboard = Observable.extend({\n        init: function(element) {\n            var that = this;\n\n            that.register = {};\n            that.element = element;\n\n            that._attachEvents();\n\n            Observable.fn.init.call(that);\n        },\n\n        registerShortcut: function(selector, shortcut, options) {\n            var that = this;\n\n            if (!that.register[selector]) {\n                that.register[selector] = [];\n            }\n\n            if (shortcut.keyCode && isNaN(shortcut.keyCode) && shortcut.keyCode.toUpperCase) {\n                shortcut.keyCode = shortcut.keyCode.toUpperCase().charCodeAt(0);\n            }\n\n            that.register[selector].push({\n                shortcut: extend({\n                    keyCode: null,\n                    ctrlKey: false,\n                    shiftKey: false,\n                    altKey: false\n                }, shortcut),\n                options: options\n            });\n\n        },\n\n        _attachEvents: function() {\n            var that = this,\n                handler = that._handler.bind(that);\n\n            that.element.on(KEYDOWN + NS, handler);\n        },\n\n        _handler: function(ev) {\n            var that = this,\n                target = $(ev.target),\n                shortcuts, action;\n\n            for (var selector in that.register) {\n                if (target.is(selector)) {\n                    shortcuts = that.register[selector];\n                    action = that._getAction(shortcuts, ev);\n\n                    if (action) {\n                        that._trigger(action, ev);\n                        break;\n                    }\n                }\n            }\n        },\n\n        _trigger: function(action, ev) {\n            var that = this,\n                target = $(ev.target);\n\n            if (action.command) {\n                that.trigger(ACTION, extend({}, ev, {\n                    command: action.command,\n                    options: extend({}, {\n                        target: target\n                    }, action.options)\n                }));\n            }\n\n            if (action.handler) {\n                action.handler(ev);\n            }\n        },\n\n        _getAction: function(shortcuts, ev) {\n            var that = this;\n\n            for (var i = 0; i < shortcuts.length; i++) {\n                if (that._compareShortcut(shortcuts[i].shortcut, ev)) {\n                    return shortcuts[i].options;\n                }\n            }\n        },\n\n        _compareShortcut: function(shortcut, ev) {\n            var that = this;\n\n            for (var key in shortcut) {\n                var result = false;\n\n                switch (key) {\n                    case \"ctrlKey\":\n                        result = shortcut[key] !== that._getShortcutModifier(ev);\n                        break;\n                    default:\n                        result = shortcut[key] !== ev[key];\n                        break;\n                }\n\n                if (result) {\n                    return false;\n                }\n            }\n\n            return true;\n        },\n\n        _getShortcutModifier: function(ev) {\n            var mac = navigator.platform.toUpperCase().indexOf('MAC') >= 0;\n            return mac ? ev.metaKey : ev.ctrlKey;\n        },\n\n        destroy: function() {\n            var that = this;\n\n            that.element.off(NS);\n        }\n    });\n\n    extend(kendo.ui.taskboard, {\n        KeyboardManager: Keyboard\n    });\n\n})(window.kendo.jQuery);\n\nvar __meta__ = {\n        id: \"taskboard\",\n        name: \"TaskBoard\",\n        category: \"web\",\n        description: \"The TaskBoard widget displays cards.\",\n        depends: [\"data\", \"sortable\", \"dialog\", \"form\", \"menu\", \"toolbar\", \"textbox\"]\n    };\n\n    var TaskBoardStyles = {\n        wrapper: \"k-taskboard\",\n        header: \"k-taskboard-header\",\n        content: \"k-taskboard-content\",\n        toolbar: \"k-taskboard-toolbar k-toolbar-flat\",\n        columnsContainer: \"k-taskboard-columns-container\",\n        card: \"k-taskboard-card\",\n        column: \"k-taskboard-column\",\n        selected: \"k-selected\",\n        disabled: \"k-disabled\",\n        ignoreDrag: \"k-taskboard-drag-ignore\"\n    };\n\n    var preventDefault = function(ev) { ev.preventDefault(); };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            Widget = kendo.ui.Widget,\n            DataSource = kendo.data.DataSource,\n            extend = $.extend,\n            ui = kendo.ui,\n            isArray = Array.isArray,\n            isPlainObject = $.isPlainObject,\n\n            GENERIC = \"_generic\",\n\n            DOT = \".\",\n\n            MOVE = \"move\",\n            MOVE_START = \"moveStart\",\n            MOVE_END = \"moveEnd\",\n            SELECT = \"select\",\n            EXECUTE = \"execute\",\n            ACTION = \"action\",\n            CHANGE = \"change\",\n            CLICK = \"click\",\n            TOGGLE = \"toggle\",\n            ERROR = \"change\",\n            DATABINDING = \"dataBinding\",\n            DATABOUND = \"dataBound\",\n            EDIT_CARD = \"editCard\",\n            SAVE_CARD = \"saveCard\",\n            DELETE_CARD = \"deleteCard\",\n            EDIT_COLUMN = \"editColumn\",\n            SAVE_COLUMN = \"saveColumn\",\n            DELETE_COLUMN = \"deleteColumn\",\n\n            COLUMNSDATABINDING = \"columnsDataBinding\",\n            COLUMNSDATABOUND = \"columnsDataBound\";\n\n        var TaskBoard = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n\n                element = that.wrapper = that.element;\n\n                that._sortableIdentifier = that.element.attr(\"id\") || kendo.guid();\n\n                that._wrapper();\n                that._columnsDataSource();\n                that._initResources();\n                that._dataSource();\n                that._initToolbar();\n                that._initCardMenu();\n                that._initKeyboard();\n\n                if (that.options.autoBind) {\n                    that.load();\n                }\n\n                kendo.notify(that);\n            },\n\n            events: [\n                MOVE,\n                MOVE_START,\n                MOVE_END,\n                CHANGE,\n                EXECUTE,\n                SELECT,\n                DATABINDING,\n                DATABOUND,\n                COLUMNSDATABINDING,\n                COLUMNSDATABOUND,\n                EDIT_CARD,\n                SAVE_CARD,\n                DELETE_CARD,\n                EDIT_COLUMN,\n                SAVE_COLUMN,\n                DELETE_COLUMN\n            ],\n\n            options: {\n                name: \"TaskBoard\",\n                autoBind: true,\n                height: 600,\n                width: \"100%\",\n                toolbar: true,\n                dataStatusField: \"status\",\n                dataTitleField: \"title\",\n                dataDescriptionField: \"description\",\n                dataCategoryField: \"category\",\n                dataOrderField: null,\n                cardMenu: true,\n                editable: true,\n                selectable: true,\n                reorderable: true,\n                previewPane: true,\n                search: {\n                    operator: \"contains\"\n                },\n                dataSource: [],\n                columns: [],\n                columnSettings: {\n                    dataStatusField: \"status\",\n                    dataTextField: \"text\",\n                    dataOrderField: null\n                },\n                resources: [],\n                messages: {\n                    edit: \"Edit\",\n                    createNewCard: \"Create new card\",\n                    create: \"Create\",\n                    search: \"Search\",\n                    previewCard: \"Preview card\",\n                    addCard: \"Add card\",\n                    editCard: \"Edit card\",\n                    deleteCard: \"Delete Card\",\n                    addColumn: \"Add column\",\n                    editColumn: \"Edit column\",\n                    deleteColumn: \"Delete column\",\n                    close: \"Close\",\n                    cancel: \"Cancel\",\n                    \"delete\": \"Delete\",\n                    saveChanges: \"Save changes\",\n                    title: \"Title:\",\n                    description: \"Description:\",\n                    newColumn: \"New column\",\n                    deleteColumnConfirm: \"Are you sure you want to delete this column?\",\n                    deleteCardConfirm: \"Are you sure you want to delete this card?\"\n                }\n            },\n\n            defaultTools: {\n                addColumn: { type: \"button\", name: \"addColumn\", command: \"AddColumnCommand\", icon: \"plus\", rules: \"isEditable\" },\n                spacer: { type: \"spacer\" },\n                search: {\n                    type: \"component\",\n                    name: \"search\",\n                    command: \"SearchCommand\",\n                    options: \"{ \\\"field\\\": \\\"name\\\", \\\"operator\\\": \\\"startswith\\\" }\",\n                    rules: \"isSearchable\",\n                    overflow: \"never\",\n                    component: \"TextBox\",\n                    componentOptions: {\n                        placeholder: \"Search\",\n                        icon: \"search\",\n                        commandOn: \"input\"\n                    }\n                }\n            },\n\n            items: function() {\n                var that = this,\n                    result = $([]);\n\n                for (var key in that._columns) {\n                    $.merge(result, that._columns[key].cards());\n                }\n\n                return result;\n            },\n\n            itemsByStatus: function(status) {\n                var that = this,\n                    result = that._getColumn(status).cards();\n\n                return result;\n            },\n\n            itemsByColumn: function(columnElm) {\n                var that = this,\n                    column = that._getColumnByElement(columnElm);\n\n                if (column) {\n                    return column.cards();\n                }\n            },\n\n            load: function() {\n                var that = this,\n                    fetchPromises = [];\n\n                that._progress(true);\n\n                fetchPromises.push(that.columnsDataSource.fetch());\n\n                for (var key in that.resources) {\n                    fetchPromises.push(that.resources[key].dataSource.fetch());\n                }\n\n                $.when.apply(null, fetchPromises)\n                    .then(that.dataSource.read.bind(that.dataSource));\n            },\n\n            dataItem: function(cardElm) {\n                var that = this,\n                    dataSource = that.dataSource,\n                    uid;\n\n                cardElm = $(cardElm);\n                uid = cardElm.attr(kendo.attr(\"uid\"));\n\n                return dataSource.getByUid(uid);\n            },\n\n            columnDataItem: function(columnElm) {\n                var that = this,\n                    columnsDataSource = that.columnsDataSource,\n                    uid;\n\n                columnElm = $(columnElm);\n                uid = columnElm.attr(kendo.attr(\"uid\"));\n\n                return columnsDataSource.getByUid(uid);\n            },\n\n            columns: function() {\n                var that = this,\n                    result = $([]);\n\n                for (var key in that._columns) {\n                    $.merge(result, that._columns[key].element);\n                }\n\n                return result;\n            },\n\n            columnByStatus: function(status) {\n                return this._getColumn(status).element;\n            },\n\n            select: function(card, toggle) {\n                var that = this;\n\n                if (!card) {\n                    return that.element\n                        .find(DOT + TaskBoard.styles.card + DOT + TaskBoard.styles.selected).eq(0);\n                }\n\n                card = $(card);\n                toggle = toggle !== false;\n\n                if (toggle) {\n                    that.element\n                        .find(DOT + TaskBoard.styles.card + DOT + TaskBoard.styles.selected)\n                        .removeClass(TaskBoard.styles.selected);\n                }\n\n                card.toggleClass(TaskBoard.styles.selected, toggle);\n            },\n\n            previewCard: function(cardElement) {\n                var that = this,\n                    options = that.options,\n                    args = that._extendExecArgs({ target: cardElement });\n\n                if (options.previewPane) {\n                    that._openPane(extend({\n                        pane: \"Preview\"\n                    }, args));\n                }\n            },\n\n            editCard: function(cardElement) {\n                var that = this,\n                    options = that.options,\n                    args;\n\n                cardElement = $(cardElement);\n                args = that._extendExecArgs({ target: cardElement });\n\n                if (options.editable) {\n                    that._openPane(extend({\n                        pane: \"Edit\"\n                    }, args));\n                }\n            },\n\n            saveCard: function() {\n                var that = this;\n\n                that.dataSource.sync();\n            },\n\n            deleteCard: function(cardElement) {\n                var that = this,\n                    card = that.dataItem(cardElement);\n\n                that.dataSource.remove(card);\n                that.dataSource.sync();\n            },\n\n            addCard: function(dataItem) {\n                var that = this,\n                    options = that.options,\n                    args = { card: dataItem };\n\n                if (options.editable) {\n                    that._openPane(extend({\n                        pane: \"Create\"\n                    }, args));\n                }\n            },\n\n            addColumn: function(index, data) {\n                var that = this,\n                    columnSettings = extend(true, {}, that.options.columnSettings, {\n                        messages: that.options.messages,\n                        states: that._buildStates(),\n                        sortableIdentifier: that._sortableIdentifier\n                    }),\n                    newColumn, model, column;\n\n                if (isNaN(index) && !data) {\n                    data = index;\n                    index = null;\n                }\n\n                model = that.columnsDataSource._createNewModel(data);\n                index = isNaN(index) || index === null ? that.columnsDataSource.data().length : index;\n                column = that.columns().eq(index);\n                that.columnsDataSource.insert(index, model);\n\n                newColumn = new ui.taskboard.NewColumn(columnSettings, model);\n\n                if (isNaN(index) || !column.length) {\n                    that.columnsContainer.append(newColumn.element);\n                } else {\n                    column.before(newColumn.element);\n                }\n\n                newColumn.bind(ACTION, that.executeCommand.bind(that));\n            },\n\n            editColumn: function(columnElement) {\n                var that = this;\n\n                columnElement = $(columnElement);\n\n                that._getColumnByElement(columnElement).edit();\n            },\n\n            saveColumn: function() {\n                var that = this;\n\n                that.columnsDataSource.sync();\n            },\n\n            deleteColumn: function(columnElement) {\n                var that = this,\n                    column = that.columnDataItem(columnElement);\n\n                that.columnsDataSource.remove(column);\n                that.columnsDataSource.sync();\n            },\n\n            registerShortcut: function(selector, shortcut, options) {\n                var that = this;\n\n                that.keyboardManager.registerShortcut(selector, shortcut, options);\n            },\n\n            enable: function(cardElement, toggle) {\n                cardElement = $(cardElement);\n\n                cardElement.toggleClass(TaskBoard.styles.disabled, toggle === false);\n                cardElement.attr(\"aria-disabled\", toggle === false);\n            },\n\n            enableByColumn: function(columnElement, toggle) {\n                var that = this;\n\n                columnElement = $(columnElement);\n\n                that.itemsByColumn(columnElement).each(function(index, card) {\n                    that.enable(card, toggle);\n                });\n            },\n\n            readOnly: function(cardElement, toggle) {\n                cardElement = $(cardElement);\n\n                toggle = toggle !== false;\n\n                cardElement.find(\"[\" + kendo.attr(\"command\") + \"]\").toggleClass(TaskBoard.styles.disabled, toggle);\n                cardElement.find(\"a,button\").toggleClass(TaskBoard.styles.disabled, toggle);\n\n                cardElement.toggleClass(TaskBoard.styles.ignoreDrag, toggle);\n                cardElement.attr(\"aria-readonly\", toggle);\n            },\n\n            readOnlyByColumn: function(columnElement, toggle) {\n                var that = this;\n\n                columnElement = $(columnElement);\n\n                that.itemsByColumn(columnElement).each(function(index, card) {\n                    that.readOnly(card, toggle);\n                });\n            },\n\n            setDataSource: function(dataSource) {\n                var that = this;\n\n                that.options.dataSource = dataSource;\n                that._dataSource();\n\n                if (that.options.autoBind) {\n                    that.dataSource.read();\n                }\n            },\n\n            setColumnsDataSource: function(dataSource) {\n                var that = this;\n\n                that.options.columns = dataSource;\n                that._columnsDataSource();\n\n                if (that.options.autoBind) {\n                    that.columnsDataSource.fetch(function() {\n                        that._renderCards(that.dataSource.view());\n                    });\n                }\n            },\n\n            _getColumn: function(status) {\n                return this._columns[status];\n            },\n\n            _getColumnByElement: function(columnElement) {\n                var that = this;\n\n                columnElement = $(columnElement);\n\n                for (var key in that._columns) {\n                    if (that._columns[key].element[0] === columnElement[0]) {\n                        return that._columns[key];\n                    }\n                }\n            },\n\n            _openPane: function(options) {\n                var that = this,\n                    pane = new ui.taskboard.panes[options.pane](that, extend({}, that.options, {\n                        states: that._buildStates()\n                    }), options.card, that.resources, options.column),\n                    focusableElement, keyboardManager;\n\n                if (that.pane) {\n                    that._closePane();\n                }\n\n                that.pane = pane;\n                that.content.after(that.pane.element);\n                that.content.css(\"margin-right\",\n                    that.pane.element.outerWidth() -\n                    parseInt(that.content.css(\"paddingRight\"), 10));\n\n                that.pane.bind(ACTION, that.executeCommand.bind(that));\n\n                that.pane.keyboardManager = keyboardManager = new ui.taskboard.KeyboardManager(that.pane.element);\n\n                keyboardManager.bind(ACTION, that.executeCommand.bind(that));\n\n                keyboardManager.registerShortcut(\"*\", {\n                    keyCode: kendo.keys.ESC\n                }, { command: \"ClosePaneCommand\" });\n\n                keyboardManager.registerShortcut(\"*\", {\n                    keyCode: kendo.keys.ENTER\n                }, { command: \"SaveChangesCommand\", options: {\n                    card: that.pane._dataItem\n                } });\n\n                focusableElement = that.pane.element.find(\"input\");\n\n                if (!focusableElement.length) {\n                    focusableElement = that.pane.element.find(\"button\");\n                }\n\n                setTimeout(function() {\n                    focusableElement.eq(0).trigger(\"focus\");\n                }, 0);\n            },\n\n            _closePane: function() {\n                var that = this;\n\n                if (that.pane) {\n                    that.pane.keyboardManager.destroy();\n                    that.pane.unbind(ACTION);\n                    that.pane.destroy();\n                    delete that.pane;\n\n                    that.content.css(\"margin-right\", \"\");\n                }\n            },\n\n            _wrapper: function() {\n                var that = this,\n                    options = that.options,\n                    styles = TaskBoard.styles,\n                    headerElm = \"<div class='\" + styles.header + \"'></div>\",\n                    contentElm = \"<div class='\" + styles.content + \"'></div>\",\n                    colsContainer = \"<div class='\" + styles.columnsContainer + \"'></div>\";\n\n                that.element.addClass(styles.wrapper)\n                    .width(options.width)\n                    .height(options.height)\n                    .attr(\"role\", \"application\");\n                that.header = $(headerElm).appendTo(that.element);\n                that.content = $(contentElm).appendTo(that.element);\n                that.columnsContainer = $(colsContainer).appendTo(that.content);\n            },\n\n            _initToolbar: function() {\n                var that = this,\n                    styles = TaskBoard.styles,\n                    options = that.options,\n                    toolbarElm = $(\"<div class='\" + styles.toolbar + \"'></div>\"),\n                    toolbarOptions = isArray(options.toolbar) ? { items: options.toolbar } : options.toolbar,\n                    tools;\n\n                if (options.toolbar === false) {\n                    return;\n                } else if (toolbarOptions === true) {\n                    toolbarOptions = {};\n                }\n\n                tools = toolbarOptions.items ? toolbarOptions.items : Object.keys(that.defaultTools);\n                tools = that._processTools(tools);\n                toolbarOptions.tools = tools;\n                toolbarOptions.defaultTools = that.defaultTools;\n                toolbarOptions.parentMessages = that.options.messages;\n\n                that.header.append(toolbarElm);\n                that.toolbar = new kendo.ui.ToolBar(toolbarElm, toolbarOptions);\n                that.options.toolbar = that.toolbar.options;\n\n                that.toolbar.bind(CLICK, that._toolbarClick.bind(that));\n                that.toolbar.bind(TOGGLE, that._toolbarClick.bind(that));\n                that.toolbar.bind(CHANGE, that._toolbarClick.bind(that));\n            },\n\n            _processTools: function(tools) {\n                var that = this,\n                    states = that._buildStates();\n\n                tools.forEach(t => {\n                    var rules = t.rules || that.defaultTools[t] ? that.defaultTools[t].rules : null;\n\n                    if (!rules) {\n                        return;\n                    }\n\n                    rules = rules.split(\";\");\n\n                    if (!rules.length) {\n                        return;\n                    }\n\n                    for (var i = 0; i < rules.length; i++) {\n                        if (!states[rules[i]]) {\n                            if (t.rules) {\n                                t.hidden = true;\n                            } else {\n                                that.defaultTools[t].hidden = true;\n                            }\n                        }\n                    }\n                });\n\n                return tools;\n            },\n\n            _toolbarClick: function(ev) {\n                var command = $(ev.target).data(\"command\"),\n                    options = $(ev.target).data(\"options\");\n\n                options = extend({}, options, { value: $(ev.target).val() });\n\n                if (!command) {\n                    return;\n                }\n\n                this.executeCommand({\n                    command: command,\n                    options: options\n                });\n            },\n\n            _isToolEnabled: function(toolName) {\n                var that = this,\n                    options = that.options.toolbar,\n                    items = options.items || that.defaultTools,\n                    found = false;\n\n                for (var i = 0; i < items.length; i++) {\n                    if (items[i].name == toolName) {\n                        found = true;\n                        break;\n                    }\n                }\n\n                return items[toolName] || found;\n            },\n\n            _buildStates: function() {\n                var that = this;\n\n                return {\n                    isEditable: that._isEditable(),\n                    isReorderable: that._isReorderable(),\n                    isSelectable: that._isSelectable(),\n                    isReadOnly: !that._isReorderable() && !that._isEditable(),\n                    isDisabled: !that._isReorderable() && !that._isEditable() && !that._isSelectable(),\n                    isSearchable: that._isSearchable(),\n                    notLocalColumns: !(that.columnsDataSource.transport instanceof kendo.data.LocalTransport),\n                    isRtl: kendo.support.isRtl(that.wrapper)\n                };\n            },\n\n            _isSearchable: function() {\n                return !!this.options.search;\n            },\n\n            _isEditable: function() {\n                return !!this.options.editable;\n            },\n\n            _isReorderable: function() {\n                return !!this.options.reorderable;\n            },\n\n            _isSelectable: function() {\n                return !!this.options.selectable;\n            },\n\n            executeCommand: function(args) {\n                var that = this,\n                    commandName = args.command,\n                    commandOptions = extend({ taskboard: this }, isPlainObject(args.options) ? that._extendExecArgs(args.options) : { value: args.options }),\n                    command = ui.taskboard.commands[commandName] && new ui.taskboard.commands[commandName](commandOptions);\n\n\n                if (!that.trigger(EXECUTE, args)) {\n                    if (command) {\n                        command.exec();\n                    } else {\n                        window.console.warn(kendo.format(\"Trying to use {0} command, but such is not available in the kendo.ui.taskboard.commands namespace!\", commandName));\n                    }\n                }\n            },\n\n            _extendExecArgs: function(args) {\n                var that = this,\n                    target = args.draggableEvent ? args.item : args.target,\n                    columnElm, cardElm, columnDataItem, cardDataItem;\n\n                if (args.card) {\n                    target = that.items().filter(function(idx, elm) {\n                        return $(elm).attr(kendo.attr(\"uid\")) === args.card.get(\"uid\");\n                    });\n                }\n\n                if (!target || !(target && target.length)) {\n                    return args;\n                }\n\n                columnElm = args.columnElement || (target.is(DOT + TaskBoard.styles.column) ? target : target.parents(DOT + TaskBoard.styles.column));\n                columnDataItem = that.columnsDataSource.getByUid(columnElm.data(kendo.ns + \"uid\"));\n                cardElm = target.is(DOT + TaskBoard.styles.card) ? target : target.closest(DOT + TaskBoard.styles.card);\n                cardDataItem = that.dataSource.getByUid(cardElm.data(kendo.ns + \"uid\"));\n\n                return extend(args, {\n                    card: cardDataItem,\n                    cardElement: cardElm.length ? cardElm : undefined$1,\n                    column: columnDataItem,\n                    columnElement: columnElm.length ? columnElm : undefined$1\n                });\n            },\n\n\n            _select: function(card, toggle) {\n                var that = this;\n\n                if (toggle === null) {\n                    toggle = true;\n                }\n\n                if (!that.trigger(SELECT, { card: card })) {\n                    that.select(card, toggle);\n                    that.previewCard(card);\n                }\n            },\n\n            _columnsDataSource: function() {\n                var that = this,\n                    options = that.options,\n                    columnSettings = options.columnSettings,\n                    columnsDataSource = options.columns;\n\n                columnsDataSource = isArray(columnsDataSource) ? { data: columnsDataSource } : columnsDataSource;\n\n                if (columnSettings.dataOrderField && !columnsDataSource.sort) {\n                    columnsDataSource.sort = { field: columnSettings.dataOrderField, dir: \"asc\" };\n                }\n\n                if (!columnsDataSource.schema) {\n                    var fields = {};\n\n                    fields[columnSettings.dataStatusField] = { type: \"string\", defaultValue: function() { return kendo.guid().split(\"-\")[0]; } };\n                    fields[columnSettings.dataTextField] = { type: \"string\" };\n\n                    if (columnSettings.dataOrderField) {\n                        fields[columnSettings.dataOrderField] = { type: \"number\" };\n                    }\n\n                    columnsDataSource.schema = {\n                        model: {\n                            fields: fields\n                        }\n                    };\n                }\n\n                if (that.columnsDataSource && that._columnsChangeHandler) {\n                    that.columnsDataSource.unbind(CHANGE, that._columnsChangeHandler);\n                    that.columnsDataSource.unbind(CHANGE, that._columnsErrorHandler);\n                } else {\n                    that._columnsChangeHandler = that._columnsDataSourceChange.bind(that);\n                    that._columnsErrorHandler = that._error.bind(that);\n                }\n\n                that.columnsDataSource = DataSource.create(columnsDataSource)\n                                .bind(CHANGE, that._columnsChangeHandler)\n                                .bind(ERROR, that._columnsErrorHandler);\n            },\n\n            _columnsDataSourceChange: function(ev) {\n                var that = this,\n                    view = that.columnsDataSource.view(),\n                    columnSettings = extend(true, {}, that.options.columnSettings, {\n                        messages: that.options.messages,\n                        states: that._buildStates(),\n                        sortableIdentifier: that._sortableIdentifier\n                     }),\n                    statusField = columnSettings.dataStatusField;\n\n                if (ev.action && ev.action !== \"sync\") {\n                    return;\n                }\n\n                if (that.trigger(COLUMNSDATABINDING, ev)) {\n                    return;\n                }\n\n                that._progress(true);\n\n                that._columns = {};\n                that.columnsContainer.html(\"\");\n\n                for (var i = 0; i < view.length; i++) {\n                    var data = view[i];\n                    var status = data[statusField] || GENERIC;\n                    var column;\n\n                    column = that._columns[status] = new ui.taskboard.Column(columnSettings, data);\n                    that.columnsContainer.append(column.element);\n                    column.bind(ACTION, that.executeCommand.bind(that));\n                    column.bind(MOVE, that._move.bind(that));\n                    column.bind(MOVE_END, that._moveEnd.bind(that));\n                    column.bind(MOVE_START, that._moveStart.bind(that));\n                    column.bind(CHANGE, that._changeOrder.bind(that));\n                    that._tabindex(column.element);\n                }\n\n                if (ev.action === \"sync\" || ev.action === undefined$1) {\n                    that._renderCards(that.dataSource.view());\n                }\n\n                that._progress(false);\n                that.trigger(COLUMNSDATABOUND, ev);\n            },\n\n            _move: function(ev) {\n                this.trigger(MOVE, this._extendExecArgs(ev));\n            },\n\n            _moveEnd: function(ev) {\n                this.trigger(MOVE_END, this._extendExecArgs(ev));\n            },\n\n            _moveStart: function(ev) {\n                this.trigger(MOVE_START, this._extendExecArgs(ev));\n            },\n\n            _changeOrder: function(ev) {\n                this.trigger(CHANGE, this._extendExecArgs(ev));\n            },\n\n            _dataSource: function() {\n                var that = this,\n                    options = that.options,\n                    dataSource = options.dataSource;\n\n                    dataSource = isArray(dataSource) ? { data: dataSource } : dataSource;\n\n                if (options.dataOrderField && !dataSource.sort) {\n                    dataSource.sort = { field: options.dataOrderField, dir: \"asc\" };\n                }\n\n                if (!dataSource.schema) {\n                    var fields = {};\n\n                    fields[options.dataStatusField] = { type: \"string\" };\n                    fields[options.dataTitleField] = { type: \"string\" };\n                    fields[options.dataDescriptionField] = { type: \"string\" };\n                    fields[options.dataCategoryField] = { type: \"string\" };\n\n                    if (options.dataOrderField) {\n                        fields[options.dataOrderField] = { type: \"number\" };\n                    }\n\n                    dataSource.schema = {\n                        model: {\n                            fields: fields\n                        }\n                    };\n                }\n\n                if (that.dataSource && that._changeHandler) {\n                    that.dataSource.unbind(CHANGE, that._changeHandler);\n                    that.dataSource.unbind(ERROR, that._errorHandler);\n                } else {\n                    that._changeHandler = that._change.bind(that);\n                    that._errorHandler = that._error.bind(that);\n                }\n\n                that.dataSource = DataSource.create(dataSource)\n                                .bind(CHANGE, that._changeHandler);\n            },\n\n            _change: function(ev) {\n                var that = this;\n\n                if (ev.action && ev.action !== \"sync\") {\n                    return;\n                }\n\n                if (that.trigger(DATABINDING, ev)) {\n                    return;\n                }\n\n                that._progress(true);\n\n                that._clearColumns();\n                that._renderCards(that.dataSource.view());\n                that._closePane();\n\n                that.trigger(DATABOUND, ev);\n                that._progress(false);\n            },\n\n            _error: function() {\n                this._progress(false);\n            },\n\n            _renderCards: function(data) {\n                var that = this;\n\n                for (var i = 0; i < data.length; i++) {\n                    that._renderCard(data[i]);\n                }\n            },\n\n            _renderCard: function(card) {\n                var that = this,\n                    options = extend({}, that.options, { states: that._buildStates() }),\n                    statusField = options.dataStatusField,\n                    status = card[statusField] || GENERIC;\n\n                if (status && that._columns[status]) {\n                    card = new ui.taskboard.Card(options, card, that.resources);\n                    that._columns[status].addCard(card.element);\n                    that._tabindex(card.element);\n                }\n            },\n\n            _clearColumns: function() {\n                var that = this;\n\n                for (var key in that._columns) {\n                    that._columns[key].empty();\n                }\n            },\n\n            _initCardMenu: function() {\n                var that = this,\n                    options = that.options,\n                    cardMenuOptions = isArray(options.cardMenu) ? { items: options.cardMenu } : options.cardMenu;\n\n                cardMenuOptions = extend({}, {\n                    messages: options.messages,\n                    target: that.columnsContainer,\n                    filter: \".k-taskboard-card-menu-button\",\n                    action: that.executeCommand.bind(that),\n                    showOn: \"click\",\n                    alignToAnchor: true,\n                    states: that._buildStates()\n                }, cardMenuOptions);\n\n                if (options.cardMenu === false) {\n                    return;\n                }\n\n                that.cardMenu = new ui.taskboard.CardMenu(\"<ul></ul>\", cardMenuOptions);\n            },\n\n            _initResources: function() {\n                var that = this,\n                    resources = that.options.resources;\n\n                for (var i = 0; i < resources.length; i++) {\n                    that._addResource(resources[i]);\n                }\n            },\n\n            _addResource: function(resource) {\n                var that = this;\n\n                if (!that.resources) {\n                    that.resources = {};\n                }\n\n                that.resources[resource.field] = {\n                    field: resource.field,\n                    name: resource.name,\n                    title: resource.title || resource.field,\n                    dataTextField: resource.dataTextField || \"text\",\n                    dataValueField: resource.dataValueField || \"value\",\n                    dataColorField: resource.dataColorField || \"color\",\n                    valuePrimitive: resource.valuePrimitive === false ? false : true,\n                    multiple: resource.multiple || false,\n                    dataSource: that._resourceDataSource(resource.dataSource)\n                };\n            },\n\n            _resourceDataSource: function(resourceDS) {\n                var dataSource = isArray(resourceDS) ? { data: resourceDS } : resourceDS,\n                    dataSourceInstance = kendo.data.DataSource.create(dataSource);\n\n                return dataSourceInstance;\n            },\n\n            _progress: function(toggle) {\n                var that = this;\n\n                kendo.ui.progress(that.element, toggle);\n            },\n\n            _initKeyboard: function() {\n                var that = this;\n\n                that.keyboardManager = new ui.taskboard.KeyboardManager(that.element);\n\n                that.keyboardManager.bind(ACTION, that.executeCommand.bind(that));\n                that._registerShortcuts();\n            },\n\n            _registerShortcuts: function() {\n                var that = this,\n                    states = that._buildStates();\n\n                if (states.isEditable) {\n                    that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.column, {\n                        keyCode: kendo.keys.DELETE\n                    }, { command: \"DeleteColumnCommand\" });\n\n                    that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.column, {\n                        keyCode: \"e\",\n                        ctrlKey: true\n                    }, { command: \"EditColumnCommand\", handler: preventDefault });\n\n                    that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.column, {\n                        keyCode: \"a\",\n                        ctrlKey: true\n                    }, { command: \"AddCardCommand\", handler: preventDefault });\n\n                    that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.column + \" *\", {\n                        keyCode: kendo.keys.ESC\n                    }, { command: \"CancelEditColumnCommand\" });\n\n                    that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.card, {\n                        keyCode: kendo.keys.DELETE\n                    }, { command: \"DeleteCardCommand\" });\n\n                    that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.card, {\n                        keyCode: \"e\",\n                        ctrlKey: true\n                    }, { command: \"EditCardCommand\", handler: preventDefault });\n                }\n\n                if (states.isSelectable) {\n                    that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.card, {\n                        keyCode: kendo.keys.ENTER\n                    }, { command: \"SelectCardCommand\", handler: preventDefault });\n                }\n\n                that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.card, {\n                    keyCode: kendo.keys.UP\n                }, { command: \"MoveFocusCommand\", options: { value: \"up\" }, handler: preventDefault });\n\n                that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.card, {\n                    keyCode: kendo.keys.DOWN\n                }, { command: \"MoveFocusCommand\", options: { value: \"down\" }, handler: preventDefault });\n\n                that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.card, {\n                    keyCode: kendo.keys.LEFT\n                }, { command: \"MoveFocusCommand\", options: { value: \"left\" }, handler: preventDefault });\n\n                that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.card, {\n                    keyCode: kendo.keys.RIGHT\n                }, { command: \"MoveFocusCommand\", options: { value: \"right\" }, handler: preventDefault });\n\n                that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.column, {\n                    keyCode: kendo.keys.LEFT\n                }, { command: \"MoveFocusCommand\", options: { value: \"left\" }, handler: preventDefault });\n\n                that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.column, {\n                    keyCode: kendo.keys.RIGHT\n                }, { command: \"MoveFocusCommand\", options: { value: \"right\" }, handler: preventDefault });\n\n                that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.column, {\n                    keyCode: kendo.keys.DOWN\n                }, { command: \"MoveFocusCommand\", options: { value: \"down\" }, handler: preventDefault });\n            },\n\n            destroy: function() {\n                var that = this;\n\n                if (that._columnsChangeHandler) {\n                    that.columnsDataSource.unbind(CHANGE, that._columnsChangeHandler);\n                    that.columnsDataSource.unbind(CHANGE, that._columnsErrorHandler);\n                }\n\n                if (that._changeHandler) {\n                    that.dataSource.unbind(CHANGE, that._changeHandler);\n                    that.dataSource.unbind(ERROR, that._errorHandler);\n                }\n\n                for (var key in that._columns) {\n                    that._columns[key].destroy();\n                }\n\n                if (that.toolbar) {\n                    that.toolbar.destroy();\n                }\n\n                if (that.cardMenu) {\n                    that.cardMenu.destroy();\n                }\n\n                if (that.keyboardManager) {\n                    that.keyboardManager.destroy();\n                }\n\n                if (that.pane) {\n                    that.closePane();\n                }\n\n                Widget.fn.destroy.call(that);\n            }\n        });\n\n        kendo.ui.plugin(TaskBoard);\n\n        extend(true, TaskBoard, { styles: TaskBoardStyles });\n\n    })(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}