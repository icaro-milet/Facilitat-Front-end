{"version":3,"file":"kendo.tilelayout.js","names":["__meta__","id","name","category","depends","features","description","$","kendo","window","ui","Widget","Draggable","keys","selector","selectorFromClasses","RESIZE","REORDER","NS","GRABCURSOR","TileLayout","extend","init","element","options","that","this","fn","call","cssNumber","gridColumnStart","gridColumnEnd","gridRowStart","gridRowEnd","addClass","styles","wrapper","attr","role","_setWrapperStyles","_initContainers","_resizable","_navigatable","_reorderable","events","columns","gap","rows","containers","resizable","reorderable","navigatable","columnsWidth","rowsHeight","height","width","destroy","_draggableInstance","find","each","item","data","resizeHandle","off","remove","setOptions","deepExtend","empty","getOptions","result","items","container","header","headerSettings","body","containerSettings","headerContent","containerElements","children","hasElements","length","itemsMap","i","guid","current","_addContainer","template","text","itemHeader","itemHeaderTitle","append","appendTo","itemBody","bodyTemplate","Error","index","order","_setContainerCoordinates","push","css","format","padding","settings","colSpan","rowSpan","_updateContainers","_createResizeHandle","side","down","_isresizing","_positionResizeHandle","cursorClass","leftBorderWidth","parseFloat","bottomBorderWidth","containerHeight","containerWidth","top","left","support","isRtl","removeClass","show","_createResizeHint","hint","resizeHint","insertAfter","_removeResizeHint","_positionHint","_removeAbsoluteStyles","_positionAbsolutely","position","outerWidth","outerHeight","on","_keyDown","bind","e","target","canHandle","is","ctrlKey","keyCode","LEFT","_resizeItem","RIGHT","UP","DOWN","shiftKey","_reorderItem","preventDefault","dir","delta","newSpan","parseInt","replace","split","trigger","newOrder","oldOrder","maxOrder","_updateDOM","newIndex","oldIndex","_sortContainers","indexAttr","sort","a","b","indexA","indexB","undefined","fractionWidth","fractionHeight","currentContainer","rowsCount","lastXLocation","lastYLocation","initialWidth","initialHeight","startColSpan","startRowSpan","itemsMaxSpace","rightPosition","downPosition","rectPosition","getBoundingClientRect","Math","abs","right","clientX","bottom","clientY","Resizable","handle","start","currentTarget","_calculateFractionWidth","_calculateRightEndSide","x","location","scrollHeight","y","resize","overflowsLayout","isBeyondMinimum","hintColumns","hintRows","mouseDeltaX","mouseDeltaY","deltaFromStart","resizeRowsCount","resizeColumnsCount","clientRect","style","scrollX","floor","max","scrollY","resizeend","first","columnGap","_createDropHint","dropHint","reorderHint","columnEnd","rowEnd","direction","_insertDropHint","insertBefore","_removeDropHint","originalElement","itemSelector","headerSelector","group","filter","autoScroll","ignore","clickMoveClick","closest","clone","dragstart","document","cursor","drag","dropContainer","containerBoundaries","elementUnderCursor","sender","draggedItem","containsOrEqualTo","hide","hasClass","next","prev","dragend","end","itemId","min","dragcancel","kendoDropTarget","dragenter","dropContainerBoundaries","dropTarget","parent","child","contains","plugin","jQuery","kendo$1"],"sources":["kendo.tilelayout.js"],"mappings":"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","sourcesContent":["import './kendo.core.js';\nimport './kendo.draganddrop.js';\nimport './kendo.resizable.js';\n\nvar __meta__ = {\n        id: \"tilelayout\",\n        name: \"TileLayout\",\n        category: \"web\",\n        depends: [\"core\"],\n        features: [\n            {\n                id: \"tilelayout-resizable\",\n                name: \"Resizable\",\n                description: \"Support for resizing\",\n                depends: [\"resizable\"]\n            },\n            {\n                id: \"tilelayout-reorderable\",\n                name: \"Reorderable\",\n                description: \"Support for reordering\",\n                depends: [\"draganddrop\"]\n            }\n        ]\n    };\n\n    (function($) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            Widget = ui.Widget,\n            Draggable = ui.Draggable,\n            keys = kendo.keys,\n            selector = kendo.selectorFromClasses,\n            RESIZE = \"resize\",\n            REORDER = \"reorder\",\n            NS = \".kendoTileLayout\",\n            DOWNCURSOR = \"k-cursor-ns-resize\",\n            RIGHTCURSOR = \"k-cursor-ew-resize\",\n            DIAGONALCURSOR = \"k-cursor-nwse-resize\",\n            RTLDIAGONALCURSOR = \"k-cursor-nesw-resize\",\n            GRABCURSOR = \"k-cursor-move\",\n            GRABBINGCURSOR = \"k-cursor-grabbing\",\n            MINIMALSPAN = 1,\n            CURSORCLASSES = \"k-cursor-nesw-resize k-cursor-nwse-resize k-cursor-ew-resize k-cursor-ns-resize\";\n\n        var tileLayoutStyles = {\n            wrapper: \"k-tilelayout\",\n            item: \"k-tilelayout-item k-card\",\n            itemHeader: \"k-tilelayout-item-header k-card-header\",\n            itemHeaderTitle: \"k-card-title\",\n            itemBody: \"k-tilelayout-item-body k-card-body\",\n            reorderHint: \"k-layout-item-hint k-layout-item-hint-reorder\",\n            resizeHint: \"k-layout-item-hint k-layout-item-hint-resize\"\n        };\n\n        var TileLayout = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n\n                $.cssNumber.gridColumnStart = true;\n                $.cssNumber.gridColumnEnd = true;\n                $.cssNumber.gridRowStart = true;\n                $.cssNumber.gridRowEnd = true;\n\n                that.element = $(element)\n                    .addClass(TileLayout.styles.wrapper)\n                    .attr({\n                        role: \"list\"\n                    });\n\n                that._setWrapperStyles();\n                that._initContainers();\n                that._resizable();\n                that._navigatable();\n                that._reorderable();\n            },\n\n            events: [\n                RESIZE,\n                REORDER\n            ],\n\n            options: {\n                name: \"TileLayout\",\n                columns: null,\n                gap: {\n                    columns: 16,\n                    rows: 16\n                },\n                containers: [],\n                resizable: false,\n                reorderable: false,\n                navigatable: false,\n                columnsWidth: \"1fr\",\n                rowsHeight: \"1fr\",\n                height: \"\",\n                width: \"\"\n            },\n\n            destroy: function() {\n                Widget.fn.destroy.call(this);\n\n                if (this._draggableInstance) {\n\n                    this.element.find(\".k-tilelayout-item\").each(function() {\n                        var item = $(this);\n                        if (item.data(\"kendoDropTarget\")) {\n                            item.data(\"kendoDropTarget\").destroy();\n                        }\n                    });\n\n                    this._draggableInstance.destroy();\n                    this._draggableInstance = null;\n                }\n\n                if (this.resizable) {\n                    this.resizable.destroy();\n                    this.resizable = null;\n                }\n\n                if (this.resizeHandle) {\n                    this.resizeHandle.off(NS).remove();\n                    this.resizeHandle = null;\n                }\n\n                this.element.off(NS);\n            },\n\n            setOptions: function(options) {\n                this.destroy();\n                kendo.deepExtend(this.options, options);\n                this.element.empty();\n                this.init(this.element, this.options);\n            },\n\n            getOptions: function() {\n                var result = $.extend(true, {}, this.options);\n                result.containers = kendo.deepExtend([], this.items);\n\n                return result;\n            },\n\n            _initContainers: function() {\n                var that = this;\n                var containers = that.options.containers;\n                var containerElements = that.element.children();\n                var hasElements = !!containerElements.length;\n                var id;\n                var container;\n                var header;\n                var headerSettings;\n                var body;\n                var containerSettings;\n                var headerContent;\n\n                that.items = [];\n                that.itemsMap = {};\n\n                if (hasElements) {\n                    containerElements.each(function(i, element) {\n                        id = kendo.guid();\n                        var current = $(element)\n                            .addClass(TileLayout.styles.item)\n                            .attr({\n                                id: id,\n                                role: \"listitem\",\n                                \"aria-keyshortcuts\": \"Enter\"\n                            });\n\n                        that._addContainer(current, containers[i], i, id);\n                    });\n                } else {\n                    for (var i = 0; i < containers.length; i++) {\n                        id = kendo.guid();\n                        containerSettings = containers[i];\n                        container = $(\"<div></div>\")\n                            .addClass(TileLayout.styles.item)\n                            .attr({\n                                id: id,\n                                role: \"listitem\",\n                                \"aria-keyshortcuts\": \"Enter\"\n                            });\n\n                        headerSettings = containerSettings.header;\n                        if (headerSettings && (headerSettings.template || headerSettings.text)) {\n                            header = $(\"<div></div>\").addClass(TileLayout.styles.itemHeader);\n                            if (that.options.reorderable) {\n                                header.addClass(GRABCURSOR);\n                            }\n\n                            headerContent = headerSettings.text ? \"<div class='\" + TileLayout.styles.itemHeaderTitle + \"'>\" + headerSettings.text + \"</div>\" : null;\n                            header.append(headerContent || kendo.template(headerSettings.template)({}));\n                            header.appendTo(container);\n                        }\n                        body = $(\"<div></div>\").addClass(TileLayout.styles.itemBody);\n                        if (!containerSettings.bodyTemplate) {\n                            throw new Error(\"Having a bodyTemplate for the container is mandatory\");\n                        }\n                        body.append(kendo.template(containerSettings.bodyTemplate)({}));\n                        body.appendTo(container);\n                        container.appendTo(that.element);\n\n                        that._addContainer(container, containerSettings, i, id);\n                    }\n                }\n            },\n\n            _addContainer: function(element, item, index, id) {\n                var that = this;\n                item.order = typeof item.order == 'number' ? item.order : index;\n                element.attr(kendo.attr(\"index\"), item.order);\n                item.id = id;\n                that._setContainerCoordinates(element, item);\n                that.itemsMap[id] = item;\n                that.items.push(that.itemsMap[id]);\n            },\n\n            _setWrapperStyles: function() {\n                var that = this;\n                var options = that.options;\n                that.element.css({\n                    \"grid-template-columns\": kendo.format(\"repeat({0}, minmax(0, {1}))\", options.columns, typeof options.columnsWidth === \"string\" ? options.columnsWidth : options.columnsWidth + \"px\"),\n                    \"grid-auto-rows\": kendo.format(\"minmax(0, {0})\", typeof options.rowsHeight === \"string\" ? options.rowsHeight : options.rowsHeight + \"px\"),\n                    \"column-gap\": options.gap.columns,\n                    \"width\": typeof options.width === \"string\" ? options.width : options.width + \"px\",\n                    \"height\": typeof options.height === \"string\" ? options.height : options.height + \"px\",\n                    \"padding\": options.gap.rows + \"px \" + options.gap.columns + \"px \",\n                    \"row-gap\": options.gap.rows\n                });\n            },\n\n            _setContainerCoordinates: function(element, settings) {\n                if (!settings) {\n                    return;\n                }\n                element.css({\n                    \"order\": settings.order,\n                    \"grid-column-end\": kendo.format(\"span {0}\", settings.colSpan),\n                    \"grid-row-end\": kendo.format(\"span {0}\", settings.rowSpan)\n                })\n                    .attr(kendo.attr(\"index\"), settings.order);\n            },\n\n            _updateContainers: function() {\n                var that = this;\n\n                for (var i = 0; i < that.items.length; i++) {\n                    that._setContainerCoordinates(that.element.find(\"#\" + that.items[i].id), that.items[i]);\n                }\n            },\n\n            _createResizeHandle: function(container, side, down) {\n                var that = this;\n\n                if (that._isresizing) {\n                    return;\n                }\n\n                if (that.resizeHandle && that.resizeHandle.data(\"div\")[0] !== container[0]) {\n                    that.resizeHandle.off(NS).remove();\n                    that.resizeHandle = null;\n                }\n\n                if (!that.resizeHandle) {\n                    that.resizeHandle = $(\n                        '<div class=\"k-resize-handle\"></div>'\n                    );\n                    that.resizeHandle.appendTo(container);\n                }\n\n                that._positionResizeHandle(container, side, down);\n            },\n\n            _positionResizeHandle: function(container, side, down) {\n                var that = this;\n                var leftBorderWidth = parseFloat(container.css(\"borderRightWidth\"));\n                var bottomBorderWidth = parseFloat(container.css(\"borderBottomWidth\"));\n                var containerHeight = container.height();\n                var containerWidth = container.width();\n                var top = down ? containerHeight - 6.5 - bottomBorderWidth : 0;\n                var left = side ? containerWidth - 4.5 - leftBorderWidth : 0;\n                var width = 9;\n                var height = 9;\n                var cursorClass;\n\n                if (side && down) {\n                    height = width = 25;\n                    top -= 12.5;\n                    left -= 12.5;\n                    cursorClass = kendo.support.isRtl(that.element) ? RTLDIAGONALCURSOR : DIAGONALCURSOR;\n                } else if (side && !down) {\n                    height = containerHeight;\n                    cursorClass = RIGHTCURSOR;\n                } else if (!side && down) {\n                    width = containerWidth;\n                    cursorClass = DOWNCURSOR;\n                }\n\n                that.resizeHandle\n                    .css({\n                        top: top,\n                        left: left,\n                        height: height,\n                        width: width\n                    })\n                    .attr(\"side\", side)\n                    .attr(\"down\", down)\n                    .removeClass(CURSORCLASSES)\n                    .addClass(cursorClass)\n                    .data(\"div\", container)\n                    .show();\n            },\n\n            _createResizeHint: function(container) {\n                var that = this;\n\n                if (that.hint) {\n                    return;\n                }\n\n                var colSpan = container.css(\"grid-column-end\");\n                var rowSpan = container.css(\"grid-row-end\");\n                var order = container.css(\"order\");\n\n                that.hint = $(\"<div class='\" + TileLayout.styles.resizeHint + \"'></div>\")\n                    .css({\n                        \"order\": order,\n                        \"grid-column-end\": colSpan,\n                        \"grid-row-end\": rowSpan\n                    })\n                    .insertAfter(container);\n            },\n\n            _removeResizeHint: function() {\n                if (this._isresizing) {\n                    return;\n                }\n\n                if (this.hint) {\n                    this.hint.remove();\n                    this.hint = null;\n                }\n            },\n\n            _positionHint: function(colSpan, rowSpan) {\n                var that = this;\n\n                if (colSpan) {\n                    that.hint.css(\"grid-column-end\", kendo.format(\"span {0}\", colSpan));\n                }\n\n                if (rowSpan) {\n                    that.hint.css(\"grid-row-end\", kendo.format(\"span {0}\", rowSpan));\n                }\n            },\n\n            _removeAbsoluteStyles: function(container) {\n                container.css(\"position\", \"\");\n                container.css(\"left\", \"\");\n                container.css(\"top\", \"\");\n                container.css(\"width\", \"\");\n                container.css(\"height\", \"\");\n                container.css(\"z-index\", \"\");\n            },\n\n            _positionAbsolutely: function(container) {\n                if (container.css(\"position\") == \"absolute\") {\n                    return;\n                }\n                var position = container.position();\n                var width = container.outerWidth();\n                var height = container.outerHeight();\n\n                container.css(\"position\", \"absolute\");\n                container.css(\"left\", position.left);\n                container.css(\"top\", position.top);\n                container.css(\"width\", width);\n                container.css(\"height\", height);\n                container.css(\"z-index\", 2);\n            },\n\n            _navigatable: function() {\n\n                if (!this.options.navigatable) {\n                    return;\n                }\n\n                var that = this;\n\n                that.element.children().attr(\"tabindex\", 0);\n                that.element.on(\"keydown\" + NS, that, that._keyDown.bind(that));\n            },\n\n            _keyDown: function(e) {\n                var target = $(e.target);\n                var canHandle = false;\n\n                if (!target.is(\".k-tilelayout-item.k-card\")) {\n                    return;\n                }\n\n\n                if (e.ctrlKey && e.keyCode == keys.LEFT) {\n                    canHandle = true;\n                    this._resizeItem(target, \"horizontal\", -1);\n                }\n\n                if (e.ctrlKey && e.keyCode == keys.RIGHT) {\n                    canHandle = true;\n                    this._resizeItem(target, \"horizontal\", 1);\n                }\n\n                if (e.ctrlKey && e.keyCode == keys.UP) {\n                    canHandle = true;\n                    this._resizeItem(target, \"vertical\", -1);\n                }\n\n                if (e.ctrlKey && e.keyCode == keys.DOWN) {\n                    canHandle = true;\n                    this._resizeItem(target, \"vertical\", 1);\n                }\n\n                if (e.shiftKey && e.keyCode == keys.LEFT) {\n                    canHandle = true;\n                    this._reorderItem(target, -1);\n                }\n\n                if (e.shiftKey && e.keyCode == keys.RIGHT) {\n                    canHandle = true;\n                    this._reorderItem(target, 1);\n                }\n\n                if (canHandle) {\n                    e.preventDefault();\n                }\n            },\n\n            _resizeItem: function(item, dir, delta) {\n                var that = this;\n                var id = item.attr(\"id\");\n                var newSpan;\n                var maxSpan;\n\n                if (!that.options.resizable) {\n                    return;\n                }\n\n                if (dir === \"horizontal\") {\n                    newSpan = parseInt(item.css(\"grid-column-end\").replace('span', ''), 10) + delta;\n                    maxSpan = that.element.css(\"grid-template-columns\").split(\" \").length;\n\n                    if (maxSpan >= newSpan && newSpan > 0) {\n                        that.itemsMap[id].colSpan = newSpan;\n                        item.css({\n                            \"grid-column-end\": kendo.format(\"span {0}\", newSpan)\n                        });\n                        that.trigger(RESIZE, {\n                            container: item\n                        });\n                    }\n                } else {\n                    newSpan = parseInt(item.css(\"grid-row-end\").replace('span', ''), 10) + delta;\n                    maxSpan = that.element.css(\"grid-template-rows\").split(\" \").length;\n\n                    if (maxSpan >= newSpan && newSpan > 0) {\n                        that.itemsMap[id].rowSpan = newSpan;\n                        item.css({\n                            \"grid-row-end\": kendo.format(\"span {0}\", newSpan)\n                        });\n                        that.trigger(RESIZE, {\n                            container: item\n                        });\n                    }\n                }\n            },\n\n            _reorderItem: function(item, newOrder) {\n                if (!this.options.reorderable) {\n                    return;\n                }\n\n                var oldOrder = parseInt(item.css(\"order\"), 10);\n                var maxOrder = this.element.children().length;\n                newOrder = oldOrder + newOrder;\n\n                if (newOrder >= 0 && newOrder < maxOrder) {\n                    var target = this.element.find(\"> [\" + kendo.attr(\"index\") + \"='\" + newOrder + \"']\");\n\n                    this.itemsMap[item.attr(\"id\")].order = newOrder;\n                    this.itemsMap[target.attr(\"id\")].order = oldOrder;\n\n                    this._updateContainers();\n                    this._updateDOM();\n                    item.trigger(\"focus\");// need to restore focus after DOM gets reordered\n\n                    this.trigger(REORDER, {\n                        newIndex: newOrder,\n                        oldIndex: oldOrder,\n                        container: item\n                    });\n                }\n            },\n\n            _sortContainers: function(containers) {\n                var indexAttr = kendo.attr(\"index\");\n\n                return containers.sort(function(a, b) {\n                    a = $(a);\n                    b = $(b);\n\n                    var indexA = a.attr(indexAttr);\n                    var indexB = b.attr(indexAttr);\n\n                    if (indexA === undefined) {\n                        indexA = $(a).index();\n                    }\n                    if (indexB === undefined) {\n                        indexB = $(b).index();\n                    }\n\n                    indexA = parseInt(indexA, 10);\n                    indexB = parseInt(indexB, 10);\n                    return indexA > indexB ? 1 : (indexA < indexB ? -1 : 0);\n                });\n            },\n            _updateDOM: function() {\n                var that = this;\n                var containers = that.element.children(\":visible\");\n\n                containers = that._sortContainers(containers);\n\n                containers.each(function() {\n                    $(this).appendTo(that.element);\n                });\n            },\n\n            _resizable: function() {\n                var that = this;\n                var side;\n                var down;\n                var id;\n                var fractionWidth;\n                var fractionHeight;\n                var currentContainer;\n                var lastXLocation = 0;\n                var lastYLocation = 0;\n                var initialWidth = 0;\n                var initialHeight = 0;\n                var startColSpan = 0;\n                var startRowSpan = 0;\n                var itemsMaxSpace = 0;\n                var rowsCount;\n\n                if (that.options.resizable) {\n                    that.element.on(\"mousemove\" + NS, selector(TileLayout.styles.item), function(e) {\n                        var rightPosition;\n                        var downPosition;\n                        var container = $(this);\n                        var rectPosition = container[0].getBoundingClientRect();\n\n                        rightPosition = Math.abs(rectPosition.right - e.clientX) < 16;\n                        downPosition = Math.abs(rectPosition.bottom - e.clientY) < 16;\n\n                        if (rightPosition && downPosition) {\n                            that._createResizeHandle(container, true, true);\n                        } else if (rightPosition) {\n                            that._createResizeHandle(container, true, false);\n                        } else if (downPosition) {\n                            that._createResizeHandle(container, false, true);\n                        }\n                    });\n\n                    that.resizable = new ui.Resizable(that.element, {\n                        handle: \"div.k-tilelayout-item > .k-resize-handle\",\n                        start: function(e) {\n                            var resizeHandle = $(e.currentTarget);\n                            currentContainer = resizeHandle.data(\"div\");\n                            id = currentContainer.attr(\"id\");\n                            side = resizeHandle.attr(\"side\");\n                            down = resizeHandle.attr(\"down\");\n                            rowsCount = that.element.css(\"grid-template-rows\").split(\" \").length;\n\n                            if (side) {\n                                fractionWidth = that._calculateFractionWidth();\n                                itemsMaxSpace = that._calculateRightEndSide(fractionWidth);\n                                lastXLocation = e.x.location;\n                                initialWidth = currentContainer.width();\n                                startColSpan = parseInt(currentContainer.css(\"grid-column-end\").replace('span', ''), 10);\n                            }\n\n                            if (down) {\n                                fractionHeight = (that.element[0].scrollHeight - (rowsCount + 1) * that.options.gap.rows) / rowsCount;\n                                lastYLocation = e.y.location;\n                                initialHeight = currentContainer.height();\n                                startRowSpan = parseInt(currentContainer.css(\"grid-row-end\").replace('span', ''), 10);\n                            }\n\n                            that._isresizing = true;\n                        },\n                        resize: function(e) {\n                            var hintColumns = 0;\n                            var hintRows = 0;\n                            var mouseDeltaX = 0;\n                            var mouseDeltaY = 0;\n                            var overflowsLayout;\n                            var isBeyondMinimum;\n                            var deltaFromStart = 0;\n                            var resizeRowsCount = 0;\n                            var resizeColumnsCount = 0;\n                            var clientRect = that.element[0].getBoundingClientRect();\n                            var height = that.element[0].style.height ? true : false;\n\n                            that._positionAbsolutely(currentContainer);\n                            that._createResizeHint(currentContainer);\n\n                            if (side == \"true\") {\n                                mouseDeltaX = e.x.location - lastXLocation;\n                                overflowsLayout = (clientRect.left + itemsMaxSpace - window.scrollX - e.x.location) < that.options.gap.columns;\n                                isBeyondMinimum = (initialWidth + mouseDeltaX) < fractionWidth;\n\n                                if (!overflowsLayout && !isBeyondMinimum) {\n                                    resizeColumnsCount = (mouseDeltaX) / (fractionWidth + that.options.gap.columns);\n                                    deltaFromStart = mouseDeltaX - (Math.floor(resizeColumnsCount) * (fractionWidth + that.options.gap.columns));\n                                    hintColumns = startColSpan + Math.floor(resizeColumnsCount) + ((deltaFromStart >= (fractionWidth / 2)) ? 1 : 0);\n                                    that.itemsMap[id].colSpan = Math.max(hintColumns, MINIMALSPAN);\n                                } else {\n                                    mouseDeltaX = 0;\n                                }\n                            }\n\n                            if (down == \"true\") {\n                                mouseDeltaY = e.y.location - lastYLocation;\n                                overflowsLayout = (clientRect.bottom + window.scrollY - e.y.location) < that.options.gap.rows;\n                                isBeyondMinimum = (initialHeight + mouseDeltaY) <= fractionHeight;\n\n                                if (!isBeyondMinimum && (!overflowsLayout || !height)) {\n                                    resizeRowsCount = (mouseDeltaY) / (fractionHeight + that.options.gap.rows);\n                                    deltaFromStart = mouseDeltaY - (Math.floor(resizeRowsCount) * (fractionHeight + that.options.gap.rows));\n                                    hintRows = startRowSpan + Math.floor(resizeRowsCount) + ((deltaFromStart >= (fractionHeight / 2)) ? 1 : 0);\n                                    that.itemsMap[id].rowSpan = Math.max(hintRows, MINIMALSPAN);\n                                } else {\n                                    mouseDeltaY = 0;\n                                }\n                            }\n\n                            that._positionHint(hintColumns, hintRows);\n                            that._positionResizeHandle(currentContainer, side == \"true\", down == \"true\");\n                            if (mouseDeltaY) {\n                                currentContainer.css(\"height\", initialHeight + mouseDeltaY);\n                            }\n                            if (mouseDeltaX) {\n                                currentContainer.css(\"width\", initialWidth + mouseDeltaX);\n                            }\n                        },\n                        resizeend: function() {\n                            that._isresizing = false;\n                            that._setContainerCoordinates(currentContainer, that.itemsMap[id]);\n                            that._removeAbsoluteStyles(currentContainer);\n                            that._removeResizeHint();\n                            that.trigger(RESIZE, {\n                                container: currentContainer\n                            });\n                        }\n                    });\n                }\n            },\n\n            _calculateFractionWidth: function() {\n                var that = this;\n                var container = that.element.children().first();\n                var colSpan = that.itemsMap[container.attr(\"id\")].colSpan;\n                var totalWidth = container.outerWidth();\n\n                return (totalWidth - (colSpan - 1) * (that.options.gap.columns)) / colSpan;\n            },\n\n            _calculateRightEndSide: function(fractionWidth) {\n                var that = this;\n                var columns = that.options.columns;\n                var columnGap = that.options.gap.columns;\n\n                return columns * (fractionWidth + columnGap) + columnGap;\n            },\n\n            _createDropHint: function(settings) {\n                this.dropHint = $(\"<div class='\" + TileLayout.styles.reorderHint + \"'></div>\")\n                    .css({\n                        \"order\": settings.order,\n                        \"grid-column-end\": settings.columnEnd,\n                        \"grid-row-end\": settings.rowEnd\n                    })\n                    .attr(kendo.attr(\"index\"), settings.order)\n                    .attr(\"direction\", settings.direction);\n            },\n\n            _insertDropHint: function(container, direction) {\n                if (direction == \"right\") {\n                    this.dropHint.insertAfter(container);\n                } else {\n                    this.dropHint.insertBefore(container);\n                }\n            },\n\n            _removeDropHint: function() {\n                if (this.dropHint) {\n                    this.dropHint.remove();\n                    this.dropHint = null;\n                }\n            },\n\n            _reorderable: function() {\n                if (!this.options.reorderable) {\n                    return;\n                }\n\n                var that = this;\n                var element = that.element;\n                var originalElement;\n                var itemSelector = selector(TileLayout.styles.item);\n                var headerSelector = selector(TileLayout.styles.itemHeader);\n                var group = kendo.guid();\n\n                this._draggableInstance = new Draggable(this.element, {\n                    filter: headerSelector + \",.k-layout-item-hint-reorder\",\n                    autoScroll: true,\n                    ignore: \":input\",\n                    group: group,\n                    clickMoveClick: this.options.reorderable.clickMoveClick === false ? false : true,\n                    hint: function(target) {\n                        var item = target.closest(itemSelector);\n                        var width = item.width();\n                        var height = item.height();\n                        var clone = item.clone();\n                        clone.find(headerSelector)\n                            .removeClass(GRABCURSOR)\n                            .addClass(GRABBINGCURSOR);\n                        return clone.width(width).height(height);\n                    },\n                    dragstart: function(e) {\n                        originalElement = $(e.currentTarget).closest(itemSelector);\n                        document.body.style.cursor = \"move\";\n                    },\n                    drag: function(e) {\n                        var elementUnderCursor = kendo.elementUnderCursor(e);\n                        var hint = e.sender.hint;\n                        var dropContainer;\n                        var containerBoundaries;\n                        var pixelsToLeftBorder;\n                        var pixelsToRightBorder;\n                        var direction;\n\n                        var draggedItem = that._draggableInstance.currentTarget.closest(itemSelector);\n                        var newOrder;\n\n                        if (containsOrEqualTo(hint[0], elementUnderCursor)) {\n                            hint.hide();\n\n                            elementUnderCursor = kendo.elementUnderCursor(e);\n\n                            if (!containsOrEqualTo(originalElement[0], elementUnderCursor)) {\n\n                                if (that.dropHint && that.dropHint[0] == elementUnderCursor[0]) {\n                                    hint.show();\n                                    return;\n                                }\n\n                                dropContainer = $(elementUnderCursor);\n                                dropContainer = dropContainer.hasClass(TileLayout.styles.item) ? dropContainer : dropContainer.closest(itemSelector);\n\n                                if (dropContainer.hasClass(TileLayout.styles.item)) {\n                                    containerBoundaries = dropContainer[0].getBoundingClientRect();\n                                    pixelsToLeftBorder = e.clientX - containerBoundaries.left;\n                                    pixelsToRightBorder = containerBoundaries.right - e.clientX;\n                                    direction = pixelsToLeftBorder > pixelsToRightBorder ? \"right\" : \"left\";\n                                    newOrder = dropContainer.css(\"order\");\n\n                                    if (that.dropHint && that.dropHint.attr(\"direction\") !== direction) {\n                                        var clone = that.dropHint.clone();\n                                        clone.css(\"order\", newOrder);\n                                        that.dropHint.remove();\n                                        that.dropHint = clone;\n\n                                        that._insertDropHint(dropContainer, direction);\n\n                                        that.dropHint\n                                            .attr(\"direction\", direction)\n                                            .attr(kendo.attr(\"index\"), newOrder);\n                                    } else if (!that.dropHint) {\n\n                                        var futureContainer = direction == \"right\" ? dropContainer.next() : dropContainer.prev();\n\n                                        if (futureContainer[0] != originalElement[0]) {\n                                            that._createDropHint({ order: newOrder, columnEnd: draggedItem.css(\"grid-column-end\"), rowEnd: draggedItem.css(\"grid-row-end\"), direction: direction });\n                                            originalElement.hide();\n                                            that._insertDropHint(dropContainer, direction);\n                                        }\n                                    }\n                                }\n                            }\n                            hint.show();\n                        }\n                    },\n                    dragend: function(e) {\n                        document.body.style.cursor = \"auto\";\n\n                        if (!that.dropHint) {\n                            e.sender.hint.remove();\n                            that._removeDropHint();\n                            return;\n                        }\n\n                        var newOrder = parseInt(that.dropHint.css(\"order\"), 10);\n                        var container = e.currentTarget.closest(itemSelector);\n                        var items = that.element.find(itemSelector);\n                        var oldOrder = parseInt(container.css(\"order\"), 10);\n                        var itemId = container.attr(\"id\");\n                        var containers = that.element.children(\":visible\");\n                        var start;\n                        var end;\n                        var item;\n                        var direction;\n\n                        containers = that._sortContainers(containers);\n\n                        newOrder = containers.index(that.dropHint[0]);\n                        end = Math.max(newOrder, oldOrder);\n                        start = Math.min(newOrder, oldOrder);\n\n                        that.itemsMap[itemId].order = newOrder;\n\n                        direction = newOrder > oldOrder ? \"right\" : \"left\"; //this is direction of movement\n\n                        if (direction == \"left\") {\n                            end--;\n                        } else {\n                            start++;\n                        }\n\n                        for (var i = start; i <= end; i++) {\n                            item = items.filter(\"[\" + kendo.attr(\"index\") + \"='\" + i + \"']\");\n                            that.itemsMap[item.attr(\"id\")].order += direction == \"left\" ? 1 : -1;\n                        }\n\n                        container.show();\n\n                        that._updateContainers();\n\n                        e.sender.hint.remove();\n                        that._removeDropHint();\n\n                        if (that.options.navigatable) {\n                            that._updateDOM();\n                        }\n\n                        that.trigger(REORDER, {\n                            newIndex: newOrder,\n                            oldIndex: oldOrder,\n                            container: container\n                        });\n                    },\n                    dragcancel: function() {\n                        document.body.style.cursor = \"auto\";\n\n                        that._removeDropHint();\n\n                        if (originalElement) {\n                            originalElement.show();\n                        }\n                    }\n                });\n\n                element.find(itemSelector).kendoDropTarget({\n                    group: group,\n                    dragenter: function(e) {\n                        if (that._isresizing) {\n                            return;\n                        }\n                        var dropContainer = $(e.dropTarget);\n                        var target = that._draggableInstance.currentTarget.closest(itemSelector);\n                        var dropContainerBoundaries;\n                        var pixelsToLeftBorder;\n                        var pixelsToRightBorder;\n                        var futureContainer;\n                        var direction;\n\n                        if (originalElement[0] != dropContainer[0]) {\n\n                            dropContainerBoundaries = dropContainer[0].getBoundingClientRect();\n                            pixelsToLeftBorder = e.clientX - dropContainerBoundaries.left;\n                            pixelsToRightBorder = dropContainerBoundaries.right - e.clientX;\n                            direction = pixelsToLeftBorder > pixelsToRightBorder ? \"right\" : \"left\";\n\n                            futureContainer = direction == \"right\" ? dropContainer.next() : dropContainer.prev();\n\n                            //handle the case when the container will be shown over the original one\n                            if (futureContainer[0] == originalElement[0]) {\n                                return;\n                            }\n\n                            that._removeDropHint();\n\n                            originalElement.hide();\n\n                            that._createDropHint({ order: dropContainer.css(\"order\"), columnEnd: target.css(\"grid-column-end\"), rowEnd: target.css(\"grid-row-end\"), direction: direction });\n\n                            originalElement.hide();\n                            that._insertDropHint(dropContainer, direction);\n                        }\n                    }\n                });\n            }\n        });\n\n        function containsOrEqualTo(parent, child) {\n            try {\n                return $.contains(parent, child) || parent == child;\n            } catch (e) {\n                return false;\n            }\n        }\n\n        ui.plugin(TileLayout);\n\n        $.extend(true, TileLayout, { styles: tileLayoutStyles });\n    })(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}