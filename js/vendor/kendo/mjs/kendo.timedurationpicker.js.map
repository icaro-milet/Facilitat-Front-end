{"version":3,"file":"kendo.timedurationpicker.js","names":["__meta__","id","name","category","description","docsCategory","depends","$","undefined$1","kendo","window","ui","Widget","html","map","extend","mediaQuery","OPEN","CLOSE","CHANGE","FOCUSED","ARIA_EXPANDED","HOVEREVENTS","NS","STATEDISABLED","ARIA_HIDDEN","ARIA_DISABLED","ARIA_READONLY","DISABLED","READONLY","STATEINVALID","MASKCHAR","caret","keys","defaultColumns","hours","format","divider","min","max","step","minutes","seconds","milliseconds","days","TimeDurationPicker","init","element","options","columns","that","this","fn","call","_columns","column","extended","selectorFormat","repeat","match","length","readonly","Boolean","attr","enable","is","parents","bigScreenMQL","adaptiveMode","onChange","_timeSelector","destroy","_popupView","_wrapper","_button","_applyCssClasses","_input","_buildMask","_validation","_editable","disable","_ariaLabel","_listsContainer","value","_old","_maskedInput","val","_canUpdateLast","notify","separator","shortcuts","size","fillMode","rounded","messages","set","cancel","events","wrapper","off","_value","parseInt","_updateValueFromTimeSelector","_toggleHover","e","currentTarget","toggleClass","type","add","addClass","removeClass","on","removeAttr","_attachHandlers","TimeSelector","anchor","mediaQueryList","matches","focus","trigger","_selectNearestSection","_lastCaret","close","preventDefault","open","change","_removeInvalidState","button","next","renderButton","icon","shape","insertAfter","role","part","toAdd","_emtpyMask","_maskParts","i","replace","end","mask","symbolsLength","start","indexOf","numberEnd","lastIndexOf","numberStart","push","autocomplete","insertBefore","hide","wrap","parent","_keydown","bind","_inputHandler","_focus","_focusout","_paste","_mouseDown","_mouseUp","_click","_mouseOnInput","selection","_triggerChange","_lastValue","_updateValueFromInput","setTimeout","index","_getPartValue","startSeparator","lastSeparator","substring","_getEmptyPart","_fillParts","clipNumber","symbols","parts","split","join","_clearParts","endBoundary","_updatePart","oldValue","entered","emrtyPart","current","search","_replacePart","newPart","toggle","_switchPart","future","past","key","keyCode","_backward","BACKSPACE","LEFT","RIGHT","popup","visible","_scrollerKeyDownHandler","UP","DOWN","altKey","ENTER","partValue","masksToAdd","valueParts","rest","Math","floor","getTimeParts","_validationIcon","iconClass","_addInvalidState","colValue","values","valid","emptyPart","_isPasted","_pasted","clipboardData","originalEvent","getData","_replaceEntire","_activeElement","validEntry","updatedPart","endSubstring","startSubstring","deletedPart","canUpdate","restored","oldpartValue","nextSeparator","old","lengthDiff","test","cssProperties","registerPrefix","registerValues","prop","roundedValues","concat","plugin","jQuery","kendo$1"],"sources":["kendo.timedurationpicker.js"],"mappings":"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","sourcesContent":["import './kendo.timeselector.js';\nimport './kendo.icons.js';\n\nvar __meta__ = {\n    id: \"timedurationpicker\",\n    name: \"TimeDurationPicker\",\n    category: \"web\",\n    description: \"The TimeDurationPicker widget allows the end user to select a time range stored in milliseconds.\",\n    docsCategory: \"editors\",\n    depends: [ \"timeselector\" ]\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        ui = kendo.ui,\n        Widget = ui.Widget,\n        html = kendo.html,\n        map = $.map,\n        extend = $.extend,\n        mediaQuery = kendo.mediaQuery,\n        OPEN = \"open\",\n        FOCUS = \"focus\",\n        CLOSE = \"close\",\n        CHANGE = \"change\",\n        CLICK = \"click\",\n        SPAN = \"<span></span>\",\n        KEYDOWN = \"keydown\",\n        FOCUSOUT = \"focusout\",\n        FOCUSED = \"k-focus\",\n        MOUSEUP = \"mouseup\",\n        MOUSEDOWN = \"mousedown\",\n        PASTE = \"paste\",\n        NS = \".kendoTimeDurationPicker\",\n        ARIA_EXPANDED = \"aria-expanded\",\n        HOVEREVENTS = \"mouseenter\" + NS + \" mouseleave\" + NS,\n        STRING = \"string\",\n        INPUT = \"input\",\n        HOVER = \"k-hover\",\n        STATEDISABLED = \"k-disabled\",\n        ARIA_HIDDEN = \"aria-hidden\",\n        ARIA_DISABLED = \"aria-disabled\",\n        ARIA_READONLY = \"aria-readonly\",\n        ARIA_READONLY = \"aria-readonly\",\n        DISABLED = \"disabled\",\n        READONLY = \"readonly\",\n        STATEINVALID = \"k-invalid\",\n        MASKCHAR = \"_\",\n        caret = kendo.caret,\n        keys = kendo.keys,\n        NS = \".kendoTimeDurationPicker\";\n        html = kendo.html;\n\n    var defaultColumns = {\n        \"hours\": {\n            name: \"hours\",\n            format: \"## hours\",\n            divider: 3600000,\n            min: 0,\n            max: 23,\n            step: 1\n        },\n        \"minutes\": {\n            name: \"minutes\",\n            format: \"## mins\",\n            divider: 60000,\n            min: 0,\n            max: 59,\n            step: 1\n        },\n        \"seconds\": {\n            name: \"seconds\",\n            format: \"## sec\",\n            divider: 1000,\n            min: 0,\n            max: 59,\n            step: 1\n        },\n        \"milliseconds\": {\n            name: \"milliseconds\",\n            format: \"### msec\",\n            min: 0,\n            max: 999,\n            step: 1\n        },\n        \"days\": {\n            format: \"## days\",\n            name: \"days\",\n            divider: 86400000,\n            min: 0,\n            max: 365,\n            step: 1\n        }\n    };\n\n    function convertToMsec(value) {\n        return ((value.days || 0) * 86400000) + ((value.hours || 0) * 3600000) + ((value.minutes || 0) * 60000) + ((value.seconds || 0) * 1000) + (value.milliseconds || 0);\n    }\n\n    function getTimeParts(value) {\n        var rest;\n        var days = Math.floor(value / 86400000);\n        rest = value % 86400000;\n        var hours = Math.floor(rest / 3600000);\n        rest = value % 3600000;\n        var minutes = Math.floor(rest / 60000);\n        rest = value % 60000;\n        var seconds = Math.floor(rest / 1000);\n        rest = value % 1000;\n\n        return {\n            days: days,\n            hours: hours,\n            minutes: minutes,\n            seconds: seconds,\n            milliseconds: rest\n        };\n    }\n\n    function normalizeColumns(columns) {\n        return map(columns, function(column) {\n            column = typeof column === STRING ? { name: column } : column;\n            var extended = extend(true, {}, defaultColumns[column.name], column);\n            extended.selectorFormat = \"{0:\" + \"0\".repeat(extended.format.match(/#/g).length) + \"}\";\n            return extended;\n        });\n    }\n\n    var TimeDurationPicker = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            options = options || {};\n\n            Widget.fn.init.call(that, element, options);\n\n            that._columns = normalizeColumns(options.columns);\n            that.options.columns = that._columns;\n            that.options.readonly = options.readonly !== undefined$1 ? options.readonly : Boolean(that.element.attr(\"readonly\"));\n            that.options.enable = options.enable !== undefined$1 ? options.enable : !(Boolean(that.element.is(\"[disabled]\") || $(element).parents(\"fieldset\").is(':disabled')));\n\n            that.bigScreenMQL = mediaQuery(\"large\");\n            if (that.options.adaptiveMode == \"auto\") {\n                that.bigScreenMQL.onChange(()=> {\n                    if (that._timeSelector) {\n                        that._timeSelector.destroy();\n                        that._timeSelector = null;\n                    }\n\n                    that._popupView();\n                });\n            }\n\n            that._wrapper();\n            that._button();\n            that._applyCssClasses();\n            that._input();\n            that._popupView();\n\n            that._buildMask();\n            that._validation();\n            that._editable({\n                readonly: that.options.readonly,\n                disable: !that.options.enable\n            });\n            that._ariaLabel(that._timeSelector._listsContainer);\n            if (that.options.value) {\n                that.value(options.value);\n                that._old = that._maskedInput.val();\n            }\n            that._canUpdateLast = true;\n\n            kendo.notify(that);\n        },\n\n        options: {\n            name: \"TimeDurationPicker\",\n            columns: [],\n            separator: \",\",\n            shortcuts: [],\n            value: null,\n            adaptiveMode: \"none\",\n            size: \"medium\",\n            fillMode: \"solid\",\n            rounded: \"medium\",\n            messages: {\n                set: \"Set\",\n                cancel: \"Cancel\",\n                days: \"Days\",\n                hours: \"Hours\",\n                minutes: \"Minutes\",\n                milliseconds: \"Milliseconds\",\n                seconds: \"Seconds\"\n            }\n        },\n\n        events: [\n            OPEN,\n            CLOSE,\n            CHANGE\n        ],\n\n        destroy: function() {\n            var that = this;\n\n            that.wrapper.off(NS);\n            that._maskedInput.off(NS);\n            if (that._timeSelector) {\n                that._timeSelector.destroy();\n                that._timeSelector = null;\n            }\n\n\n            if (that.bigScreenMQL) {\n                that.bigScreenMQL.destroy();\n            }\n        },\n\n        value: function(value) {\n            var that = this;\n\n            if (value === undefined$1) {\n                return that._value;\n            }\n\n            if (typeof value === \"number\") {\n                value = parseInt(value);\n            } else {\n                value = null;\n            }\n\n            that._value = value;\n            that.element.val(that._value);\n            that._timeSelector._value = that._value;\n            that._updateValueFromTimeSelector();\n        },\n\n        _toggleHover: function(e) {\n            $(e.currentTarget).toggleClass(HOVER, e.type === \"mouseenter\");\n        },\n\n        _editable: function(options) {\n            var that = this,\n                disable = options.disable,\n                readonly = options.readonly,\n                element = that._maskedInput.add(that.element).off(NS),\n                wrapper = that.wrapper.off(NS);\n\n            if (!readonly && !disable) {\n                wrapper\n                    .removeClass(STATEDISABLED)\n                    .on(HOVEREVENTS, that._toggleHover);\n\n                if (element && element.length) {\n                    element.removeAttr(DISABLED);\n                    element.removeAttr(READONLY);\n                }\n                element.attr(ARIA_DISABLED, false)\n                       .attr(ARIA_READONLY, false);\n\n                that._attachHandlers();\n            } else {\n                wrapper\n                    .addClass(disable ? STATEDISABLED : \"\")\n                    .removeClass(disable ? \"\" : STATEDISABLED);\n\n                element.attr(DISABLED, disable)\n                       .attr(READONLY, readonly)\n                       .attr(ARIA_DISABLED, disable)\n                       .attr(ARIA_READONLY, readonly);\n            }\n        },\n\n        readonly: function(readonly) {\n            this._editable({\n                readonly: readonly === undefined$1 ? true : readonly,\n                disable: false\n            });\n        },\n\n        enable: function(enable) {\n            this._editable({\n                readonly: false,\n                disable: !(enable = enable === undefined$1 ? true : enable)\n            });\n        },\n\n        _popupView: function() {\n            var that = this;\n            var options = that.options;\n\n            if (!that._timeSelector) {\n                that._timeSelector = new kendo.ui.TimeSelector(that._maskedInput, {\n                    id: that.element.attr(\"id\") + \"_timeSelector\",\n                    anchor: that.wrapper,\n                    adaptiveMode: options.adaptiveMode,\n                    columns: options.columns,\n                    shortcuts: options.shortcuts,\n                    value: options.value,\n                    size: options.adaptiveMode != \"auto\" || that.bigScreenMQL.mediaQueryList.matches ? options.size : \"large\",\n                    fillMode: options.fillMode,\n                    rounded: options.rounded,\n                    messages: options.messages,\n                    focus: function() {\n                        that._maskedInput.trigger(\"focus\");\n                        that._selectNearestSection(that._lastCaret || 0);\n                    },\n                    close: function(e) {\n                        if (that.trigger(CLOSE)) {\n                            e.preventDefault();\n                        } else {\n                            that._maskedInput.attr(ARIA_EXPANDED, false);\n                            that._timeSelector._listsContainer.attr(ARIA_HIDDEN, true);\n                        }\n                    },\n                    open: function(e) {\n                        if (that.trigger(OPEN)) {\n                            e.preventDefault();\n                        } else {\n                            that._maskedInput.attr(ARIA_EXPANDED, true);\n                            that._timeSelector._listsContainer.attr(ARIA_HIDDEN, false);\n                            that._lastCaret = caret(that._maskedInput)[0];\n                            if (that._lastCaret === that._maskedInput.val().length) {\n                                that._lastCaret = 0;\n                            }\n                        }\n                    },\n                    change: function(value) {\n                        that._value = value;\n                        that._updateValueFromTimeSelector();\n                        that._removeInvalidState();\n                        that.trigger(CHANGE);\n                    }\n                });\n            }\n        },\n\n        _button: function() {\n            var that = this,\n                element = that.element,\n                options = that.options,\n                button;\n\n            button = element.next(\"button.k-input-button\");\n\n            if (!button[0]) {\n                button = $(html.renderButton('<button unselectable=\"on\" tabindex=\"-1\" class=\"k-input-button\" aria-label=\"select\"></button>', {\n                    icon: \"clock-arrow-rotate\",\n                    size: options.size,\n                    fillMode: options.fillMode,\n                    shape: \"none\",\n                    rounded: \"none\"\n                })).insertAfter(element);\n            }\n\n            that._button = button.attr({\n                \"role\": \"button\"\n            });\n        },\n\n        _buildMask: function() {\n            var columns = this.options.columns;\n            var format;\n            var toAdd = \"\";\n            var part;\n\n            this._emtpyMask = \"\";\n            this._maskParts = [];\n\n            for (var i = 0; i < columns.length; i++) {\n                part = {};\n                format = columns[i].format;\n\n                if (i) {\n                    toAdd = this.options.separator;\n                }\n\n                toAdd += format.replace(/#/g, '_');\n                this._emtpyMask += toAdd;\n                part.end = this._emtpyMask.length - 1;\n                part.mask = format.replace(/#/g, '_');\n                part.symbolsLength = part.mask.match(/_/g).length;\n                part.start = this._emtpyMask.indexOf(part.mask);\n                part.numberEnd = this._emtpyMask.lastIndexOf(MASKCHAR) + 1;\n                part.numberStart = this._emtpyMask.indexOf(MASKCHAR, part.start);\n\n                this._maskParts.push(part);\n            }\n\n            this._old = this._emtpyMask;\n            this._maskedInput.val(this._emtpyMask);\n        },\n\n        _input: function() {\n            var that = this;\n\n            that._maskedInput = $(\"<input />\")\n                        .attr(kendo.attr(\"validate\"), false)\n                        .attr({\n                            \"role\": \"combobox\",\n                            \"aria-expanded\": false,\n                            \"aria-controls\": that.element.attr(\"id\") + \"_timeSelector\",\n                            \"autocomplete\": \"off\"\n                        })\n                        .addClass(\"k-input-inner\")\n                        .insertBefore(that.element);\n\n            that.element.hide();\n        },\n\n        _wrapper: function() {\n            var that = this,\n                element = that.element,\n                wrapper;\n\n            wrapper = element.parents(\".k-timedurationpicker\");\n\n            if (!wrapper[0]) {\n                wrapper = element.wrap(SPAN).parent();\n            }\n\n            that.wrapper = wrapper.addClass(\"k-timedurationpicker k-input\");\n        },\n\n        _attachHandlers: function() {\n            var that = this;\n\n            that._maskedInput\n                    .on(KEYDOWN + NS, that._keydown.bind(that))\n                    .on(INPUT + NS, that._inputHandler.bind(that))\n                    .on(FOCUS + NS, that._focus.bind(that))\n                    .on(FOCUSOUT + NS, that._focusout.bind(that))\n                    .on(PASTE + NS, that._paste.bind(that))\n                    .on(MOUSEDOWN + NS, that._mouseDown.bind(that))\n                    .on(MOUSEUP + NS, that._mouseUp.bind(that));\n\n            that.wrapper.on(CLICK + NS, \".k-input-button\", that._click.bind(that));\n        },\n\n        _mouseDown: function() {\n            this._mouseOnInput = true;\n        },\n\n        _mouseUp: function() {\n            var selection = caret(this._maskedInput[0]);\n            var value = this._maskedInput[0].value;\n            if (selection[0] === selection[1]) {\n                this._selectNearestSection(selection[1] == value.length ? value.length - 1 : selection[1]);\n            }\n        },\n\n        _triggerChange: function() {\n            if ((this._lastValue == undefined$1 && this._value) || this._lastValue != this._value) {\n                this._lastValue = this._value;\n                this.trigger(CHANGE);\n            }\n        },\n\n        _focusout: function() {\n            this._updateValueFromInput();\n            this._triggerChange();\n\n            this._canUpdateLast = true;\n            this.wrapper.removeClass(FOCUSED);\n        },\n\n        _focus: function() {\n            var that = this;\n            if (!that._mouseOnInput) {\n                setTimeout(function() {\n                    that._selectNearestSection(0);\n                }, 10);\n            }\n            that._mouseOnInput = false;\n            that.wrapper.addClass(FOCUSED);\n        },\n\n        _selectNearestSection: function(index) {\n            var part;\n\n            for (var i = 0; i < this._maskParts.length; i++ ) {\n                part = this._maskParts[i];\n                if (index >= part.start && index <= part.end) {\n                    caret(this._maskedInput[0], part.numberStart, part.numberEnd);\n                }\n            }\n        },\n\n        _getPartValue: function(value, index) {\n            var that = this;\n            var separator = that.options.separator;\n            var startSeparator = value.indexOf(separator,index);\n            var lastSeparator = value.lastIndexOf(separator,index);\n            return value.substring(lastSeparator < 0 ? 0 : lastSeparator + 1 , startSeparator < 0 ? value.length : startSeparator );\n        },\n\n        _getEmptyPart: function(index) {\n            return this._getPartValue(this._emtpyMask, index);\n        },\n\n        _fillParts: function(clipNumber) {\n            var parts = this._emtpyMask.split(this.options.separator);\n            var symbols;\n            clipNumber = clipNumber + \"\";\n\n            for (var i = 0; i < parts.length; i++) {\n                symbols = parts[i].match(/_/g).length;\n                if (symbols > clipNumber.length) {\n                    parts[i] = parts[i].replace(MASKCHAR.repeat(symbols), \"0\".repeat(symbols - clipNumber.length) + clipNumber);\n                } else {\n                    parts[i] = parts[i].replace(MASKCHAR.repeat(symbols), clipNumber.substring(0, symbols));\n                    clipNumber = clipNumber.substring(symbols, symbols.length);\n                }\n            }\n            return parts.join(this.options.separator);\n        },\n\n        _clearParts: function(value, start, end) {\n            var parts = value.split(this.options.separator);\n            var index = 0;\n            var endBoundary;\n\n            for (var i = 0; i < parts.length; i++) {\n                endBoundary = index + parts[i].length;\n                if ((index <= start && endBoundary >= start) || (index <= end && endBoundary >= end)) {\n                    parts[i] = this._getEmptyPart(index);\n                }\n                index += (parts[i].length + 1);\n            }\n            return parts.join(this.options.separator);\n        },\n\n        _updatePart: function(oldValue, entered) {\n            var emrtyPart = this._getEmptyPart(this._old.indexOf(oldValue));\n            var current = oldValue.substring(emrtyPart.indexOf(MASKCHAR), emrtyPart.lastIndexOf(MASKCHAR) + 1);\n            var format = \"{0:\" + \"0\".repeat(current.length) + \"}\";\n\n            if (current.indexOf(MASKCHAR) >= 0 || !(oldValue[oldValue.search(/[0-9]/)] === \"0\") || entered.length > 1) {\n                return oldValue.replace(current, kendo.format(format, parseInt(entered)));\n            } else {\n                return oldValue.replace(current, kendo.format(format, parseInt(current + entered)));\n            }\n        },\n\n        _replacePart: function(oldValue, newPart, index) {\n            return oldValue.replace(this._getPartValue(oldValue, index), newPart);\n        },\n\n        _click: function() {\n            var that = this;\n\n            if (!that._timeSelector) {\n                return;\n            }\n\n            that._timeSelector.toggle();\n        },\n\n        _switchPart: function(options) {\n            var separator = this.options.separator;\n            var selection = options.caret != undefined$1 ? options.caret : caret(this._maskedInput[0])[0];\n            var value = this._maskedInput.val();\n            var index;\n\n            if (options.next) {\n                index = value.indexOf(separator, selection);\n                if (index < 0) {\n                    index = value.length - 1;\n                } else {\n                    index++;\n                }\n            } else {\n                index = value.lastIndexOf(separator, selection);\n                if (index < 0 ) {\n                    index = 0;\n                } else {\n                    index--;\n                }\n            }\n            this._selectNearestSection(index);\n        },\n\n        _keydown: function(e) {\n            var key = e.keyCode;\n            var separator = this.options.separator;\n            var selection;\n            var value;\n            var index;\n            var future;\n            var past;\n\n            this._backward = key === keys.BACKSPACE;\n            if (key == keys.LEFT || key == keys.RIGHT) {\n                e.preventDefault();\n                selection = caret(this._maskedInput[0])[0];\n                value = this._maskedInput.val();\n                future = value.indexOf(separator, selection);\n                past = value.lastIndexOf(separator, selection);\n\n                if ((future < 0 && key == keys.RIGHT) || (past < 0 && key == keys.LEFT)) {\n                    return;\n                }\n\n                index = (key == keys.LEFT) ? (past - 1) : (future + 1);\n                this._selectNearestSection(index);\n                if (key == keys.LEFT) {\n                    this._canUpdateLast = true;\n                }\n            } else if (this._timeSelector.popup.visible()) {\n                this._timeSelector._scrollerKeyDownHandler(e);\n            } else if (key == keys.UP || key == keys.DOWN) {\n                e.preventDefault();\n                if (e.altKey) {\n                    this._timeSelector.toggle();\n                }\n            } else if (key == keys.ENTER) {\n                this._updateValueFromInput();\n                this._triggerChange();\n            }\n        },\n\n        _updateValueFromTimeSelector: function() {\n            var that = this;\n            var valueParts = getTimeParts(that._value);\n            var value = \"\";\n            var column = this._columns[i];\n            var part;\n            var partValue;\n            var masksToAdd;\n\n            for (var i = 0; i < this._columns.length; i++) {\n                column = this._columns[i];\n                partValue = valueParts[column.name] + '';\n                part = this._maskParts[i];\n\n                if (i) {\n                    value += that.options.separator;\n                }\n\n                if (!valueParts[column.name]) {\n                    value += part.mask;\n                    continue;\n                }\n\n                masksToAdd = part.symbolsLength - partValue.length;\n                value += part.mask.replace(MASKCHAR.repeat(part.symbolsLength), \"0\".repeat(masksToAdd < 0 ? 0 : masksToAdd) + partValue);\n            }\n\n            that._maskedInput.val(value);\n            that._old = value;\n        },\n\n        _validation: function() {\n            var that = this;\n            var element = that.element;\n\n            that._validationIcon = $(kendo.ui.icon({ icon: \"exclamation-circle\", iconClass: \"k-input-validation-icon k-hidden\" })).insertAfter(element);\n        },\n\n        _addInvalidState: function() {\n            this.wrapper.addClass(STATEINVALID);\n            this._validationIcon.removeClass('k-hidden');\n        },\n\n        _removeInvalidState: function() {\n            this.wrapper.removeClass(STATEINVALID);\n            this._validationIcon.addClass('k-hidden');\n        },\n\n        _updateValueFromInput: function() {\n            var val = this._maskedInput.val();\n            var values = {};\n            var valid = true;\n            var column;\n            var part;\n            var colValue;\n\n            for (var i = 0; i < this._columns.length; i++) {\n                column = this._columns[i];\n                part = this._maskParts[i];\n                colValue = val.substring(part.numberStart, part.numberEnd).replace(/_/g, \"\");\n                colValue = kendo.parseInt(colValue || 0);\n\n                if (colValue >= column.min && colValue <= column.max) {\n                    values[column.name] = colValue;\n                } else {\n                    valid = false;\n                    break;\n                }\n            }\n\n            if (valid) {\n                this._value = convertToMsec(values);\n                this.element.val(this._value || \"\");\n                this._timeSelector._value = this._value;\n                this._removeInvalidState();\n            } else {\n                this._addInvalidState();\n            }\n        },\n\n        _paste: function(e) {\n            this._isPasted = true;\n            this._pasted = (e.clipboardData || e.originalEvent.clipboardData).getData('Text');\n            var emptyPart;\n\n            var selection = caret(this._maskedInput);\n\n            if (this._maskedInput.val().length == selection[1] && !selection[0]) {\n                this._replaceEntire = true;\n            } else {\n                emptyPart = this._getEmptyPart(selection[0]);\n                this._pasted = this._pasted.substring(0, emptyPart.match(/_/g).length);\n            }\n        },\n\n        _inputHandler: function() {\n            if (kendo._activeElement() !== this._maskedInput[0]) {\n                return;\n            }\n\n            var that = this;\n            var old = that._old;\n            var separator = that.options.separator;\n            var value = that._maskedInput[0].value;\n            var selection = caret(that._maskedInput)[0];\n            var lengthDiff = old.length - value.length;\n            var entered;\n            var validEntry;\n            var updatedPart;\n            var endSubstring;\n            var startSubstring;\n            var deletedPart;\n            var emptyPart;\n            var canUpdate;\n            var restored;\n            var oldpartValue;\n            var nextSeparator;\n\n            entered = that._isPasted ? that._pasted : value.substring(selection - 1, selection);\n            validEntry = /\\d/.test(entered);\n\n            if (that._isPasted && that._replaceEntire && validEntry) {\n                that._old = that._fillParts(parseInt(entered));\n                that._maskedInput.val(that._old);\n                that._selectNearestSection(0);\n                that._isPasted = that._replaceEntire = false;\n                return;\n            }\n\n            if (that._isPasted) {\n                lengthDiff = 0;\n            }\n\n            that._isPasted = false;\n\n            if ((entered === separator && !that._backward)) {\n                that._maskedInput.val(that._old);\n                that._switchPart({ caret: selection, next: true });\n                return;\n            }\n\n            if (!value && that._backward) {\n                that._old = that._emtpyMask;\n                that._maskedInput.val(that._old);\n                that._selectNearestSection(selection);\n                return;\n            }\n\n            if ((!validEntry && !that._backward)) {\n                that._maskedInput.val(that._old);\n                that._selectNearestSection(selection);\n                return;\n            }\n\n            if (!lengthDiff || lengthDiff > 0) {\n                endSubstring = value.substring(selection, value.length);\n                startSubstring = value.substring(0, selection);\n                deletedPart = that._emtpyMask.substring(startSubstring.length, old.indexOf(endSubstring));\n\n                restored = startSubstring + deletedPart + endSubstring;\n                oldpartValue = that._getPartValue(that._old, selection);\n                nextSeparator = that._old.indexOf(separator, that._old.indexOf(oldpartValue) + 1);\n\n                if (that._backward) {\n                    // if multiple parts\n                    if (deletedPart.split(separator).length > 1) {\n                        that._old = this._clearParts(restored, selection, selection + deletedPart.length);\n                    } else {\n                        emptyPart = this._getEmptyPart(selection);\n                        if (emptyPart == oldpartValue) {\n                            that._maskedInput.val(that._old);\n                            that._switchPart({ caret: selection });\n                            return;\n                        }\n                        that._old = that._replacePart(restored, emptyPart, selection);\n                    }\n                    that._maskedInput.val(that._old);\n                    that._selectNearestSection(selection);\n                    return;\n                }\n\n                if (nextSeparator < 0 && oldpartValue.indexOf(MASKCHAR) === -1 && !that._canUpdateLast) {\n                    that._maskedInput.val(that._old);\n                    that._selectNearestSection(selection);\n                    return;\n                }\n\n                if (validEntry) {\n                    updatedPart = that._updatePart(oldpartValue, entered);\n                    canUpdate = updatedPart[updatedPart.search(/[0-9]/)] === \"0\";\n                    restored = that._replacePart(restored, updatedPart, selection);\n                    that._maskedInput.val(restored);\n                    if (nextSeparator > 0 && !canUpdate) {\n                        that._selectNearestSection(nextSeparator + 1, true);\n                    } else {\n                        that._selectNearestSection(selection);\n                    }\n\n                    that._canUpdateLast = !(nextSeparator < 0 && !canUpdate);\n                }\n                that._old = restored;\n            } else if (lengthDiff < 0) {\n                that._maskedInput.val(that._old);\n                that._selectNearestSection(that._old.length - 1);\n            }\n        },\n\n    });\n\n    kendo.cssProperties.registerPrefix(\"TimeDurationPicker\", \"k-input-\");\n\n    kendo.cssProperties.registerValues(\"TimeDurationPicker\", [{\n        prop: \"rounded\",\n        values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n    }]);\n\n    ui.plugin(TimeDurationPicker);\n\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}