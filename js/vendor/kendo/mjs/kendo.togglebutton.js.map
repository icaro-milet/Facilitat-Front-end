{"version":3,"file":"kendo.togglebutton.js","names":["__meta__","id","name","category","description","depends","$","undefined$1","kendo","window","Button","ui","CLICK","TOGGLE","ARIA_PRESSED","SELECTED","ToggleButton","extend","init","element","options","that","this","fn","call","wrapper","addClass","_selected","selected","toggle","group","attr","notify","destroy","off","events","removeClass","_click","e","enable","trigger","event","target","preventDefault","checked","cssProperties","registerPrefix","registerValues","prop","values","fillModeValues","concat","roundedValues","plugin","jQuery","kendo$1"],"sources":["kendo.togglebutton.js"],"mappings":"MAAO,wBACA,oBAEP,IAAIA,SAAW,CACPC,GAAI,eACJC,KAAM,eACNC,SAAU,MACVC,YAAa,uEACbC,QAAS,CAAC,OAAQ,YAGtB,SAAUC,EAAGC,GACT,IAAIC,EAAQC,OAAOD,MACfE,EAASF,EAAMG,GAAGD,OAClBE,EAAQ,QACRC,EAAS,SAETC,EAAe,eACfC,EAAW,aAKXC,EAAeN,EAAOO,OAAO,CAC7BC,KAAM,SAASC,EAASC,GACpB,IAAIC,EAAOC,KAEXZ,EAAOa,GAAGL,KAAKM,KAAKH,EAAMF,EAASC,GAEnCD,EAAUE,EAAKI,QAAUJ,EAAKF,QAC9BC,EAAUC,EAAKD,QAEfD,EAAQO,SAbI,mBAeZL,EAAKM,WAAiC,IAArBP,EAAQQ,SACzBP,EAAKQ,OAAOR,EAAKM,WAEbP,EAAQU,OACRX,EAAQY,KAlBH,aAkBoBX,EAAQU,OAGrCtB,EAAMwB,OAAOX,IAGjBY,QAAS,WACMX,KAENG,QAAQS,IA/BZ,sBAgCDxB,EAAOa,GAAGU,QAAQT,KAHPF,OAMfa,OAAQ,CACJvB,EACAC,GAGJO,QAAS,CACLlB,KAAM,eACN4B,MAAOvB,EACPqB,UAAU,GAGdC,OAAQ,SAASA,GACTA,IAAWtB,IACXsB,GAAUP,KAAKK,WAGnBL,KAAKK,UAAYE,GAEF,IAAXA,GACAP,KAAKH,QAAQY,KAAKjB,GAAc,GAChCQ,KAAKH,QAAQO,SAASX,KACJ,IAAXc,IACPP,KAAKH,QAAQY,KAAKjB,GAAc,GAChCQ,KAAKH,QAAQiB,YAAYrB,KAIjCsB,OAAQ,SAASC,GACThB,KAAKF,QAAQmB,SACTjB,KAAKkB,QAAQ5B,EAAO,CACpB6B,MAAOH,EACPrC,GAAIqB,KAAKH,QAAQY,KA7DxB,MA8DOW,OAAQpB,KAAKH,UAEbmB,EAAEK,kBAEFrB,KAAKO,SAELP,KAAKkB,QAAQ3B,EAAQ,CACjB4B,MAAOH,EACPM,QAAStB,KAAKK,UACdG,MAAOR,KAAKF,QAAQU,MACpB7B,GAAIqB,KAAKH,QAAQY,KAxE5B,MAyEWW,OAAQpB,KAAKH,eAOjCX,EAAMqC,cAAcC,eAAe,eAAgB,aAEnDtC,EAAMqC,cAAcE,eAAe,eAAgB,CAAC,CAChDC,KAAM,WACNC,OAAQzC,EAAMqC,cAAcK,eAAeC,OAAO,CAAC,UACpD,CACCH,KAAM,UACNC,OAAQzC,EAAMqC,cAAcO,cAAcD,OAAO,CAAC,CAAC,OAAQ,aAG/D3C,EAAMG,GAAG0C,OAAOrC,GApGpB,CAsGGP,OAAOD,MAAM8C,QACpB,IAAIC,QAAU/C,aAEL+C","sourcesContent":["import './kendo.core.js';\nimport './kendo.button.js';\n\nvar __meta__ = {\n        id: \"togglebutton\",\n        name: \"ToggleButton\",\n        category: \"web\",\n        description: \"The ToggleButton widget displays styled buttons with selected state.\",\n        depends: [\"core\", \"button\"]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            Button = kendo.ui.Button,\n            CLICK = \"click\",\n            TOGGLE = \"toggle\",\n            NS = \".kendoToggleButton\",\n            ARIA_PRESSED = \"aria-pressed\",\n            SELECTED = \"k-selected\",\n            TOGGLE_BUTTON = \"k-toggle-button\",\n            DATA_GROUP = \"data-group\",\n            ID = \"id\";\n\n        var ToggleButton = Button.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Button.fn.init.call(that, element, options);\n\n                element = that.wrapper = that.element;\n                options = that.options;\n\n                element.addClass(TOGGLE_BUTTON);\n\n                that._selected = options.selected === true ? true : false;\n                that.toggle(that._selected);\n\n                if (options.group) {\n                    element.attr(DATA_GROUP, options.group);\n                }\n\n                kendo.notify(that);\n            },\n\n            destroy: function() {\n                var that = this;\n\n                that.wrapper.off(NS);\n                Button.fn.destroy.call(that);\n            },\n\n            events: [\n                CLICK,\n                TOGGLE\n            ],\n\n            options: {\n                name: \"ToggleButton\",\n                group: undefined$1,\n                selected: false\n            },\n\n            toggle: function(toggle) {\n                if (toggle === undefined$1) {\n                    toggle = !this._selected;\n                }\n\n                this._selected = toggle;\n\n                if (toggle === true) {\n                    this.element.attr(ARIA_PRESSED, true);\n                    this.element.addClass(SELECTED);\n                } else if (toggle === false) {\n                    this.element.attr(ARIA_PRESSED, false);\n                    this.element.removeClass(SELECTED);\n                }\n            },\n\n            _click: function(e) {\n                if (this.options.enable) {\n                    if (this.trigger(CLICK, {\n                        event: e,\n                        id: this.element.attr(ID),\n                        target: this.element\n                    })) {\n                        e.preventDefault();\n                    } else {\n                        this.toggle();\n\n                        this.trigger(TOGGLE, {\n                            event: e,\n                            checked: this._selected,\n                            group: this.options.group,\n                            id: this.element.attr(ID),\n                            target: this.element\n                        });\n                    }\n                }\n            }\n        });\n\n        kendo.cssProperties.registerPrefix(\"ToggleButton\", \"k-button-\");\n\n        kendo.cssProperties.registerValues(\"ToggleButton\", [{\n            prop: \"fillMode\",\n            values: kendo.cssProperties.fillModeValues.concat([\"link\"])\n        }, {\n            prop: \"rounded\",\n            values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n        }]);\n\n        kendo.ui.plugin(ToggleButton);\n\n    })(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}