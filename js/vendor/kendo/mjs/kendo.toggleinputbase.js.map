{"version":3,"file":"kendo.toggleinputbase.js","names":["__meta__","id","name","category","description","depends","$","undefined$1","kendo","window","ui","Widget","CHANGE","DISABLED","CHECKED","ToggleInputBase","extend","init","element","options","that","this","fn","call","_wrapper","_initSettings","_attachEvents","notify","events","NS","RENDER_INPUT","noop","check","checked","attr","prop","destroy","wrapper","off","enable","enabled","toggle","on","_change","bind","trigger","inputMethod","removeClass","plugin","jQuery","kendo$1"],"sources":["kendo.toggleinputbase.js"],"mappings":"MAAO,kBAEP,IAAIA,SAAW,CACXC,GAAI,kBACJC,KAAM,kBACNC,SAAU,MACVC,YAAa,iCACbC,QAAS,CAAE,UAGf,SAAUC,EAAGC,GACT,IAAIC,EAAQC,OAAOD,MACfE,EAAKF,EAAME,GACXC,EAASD,EAAGC,OACZC,EAAS,SACTC,EAAW,WACXC,EAAU,UAEVC,EAAkBJ,EAAOK,OAAO,CAChCC,KAAM,SAASC,EAASC,GACpB,IAAIC,EAAOC,KAEXV,EAAOW,GAAGL,KAAKM,KAAKH,EAAMF,EAASC,GAEnCC,EAAKI,WAELJ,EAAKK,gBAELL,EAAKM,gBAELlB,EAAMmB,OAAOP,EAAMZ,EAAME,KAG7BkB,OAAQ,CACJhB,GAGJO,QAAS,CACLjB,KAAM,mBAGV2B,GAAI,wBACJC,aAAcxB,EAAEyB,KAEhBC,MAAO,SAASC,GACZ,IAAIb,EAAOC,KACPH,EAAUE,EAAKF,QAAQ,GAE3B,GAtCZ,YAsCgBe,EACA,OAAOf,EAAQe,QAGff,EAAQe,UAAYA,IACpBb,EAAKD,QAAQc,QAAUf,EAAQe,QAAUA,GAGzCA,EACAb,EAAKF,QAAQgB,KAAKpB,EAASA,GAE3BM,EAAKF,QAAQiB,KAAKrB,GAAS,IAInCsB,QAAS,WACLzB,EAAOW,GAAGc,QAAQb,KAAKF,MACvBA,KAAKgB,QAAQC,IAAIjB,KAAKQ,KAG1BU,OAAQ,SAASA,GACb,IAAIrB,EAAUG,KAAKH,aAEE,IAAVqB,IACPA,GAAS,GAGblB,KAAKF,QAAQqB,QAAUD,EAEnBA,EACArB,EAAQiB,KAAKtB,GAAU,GAEvBK,EAAQgB,KAAKrB,EAAUA,IAI/B4B,OAAQ,WACOpB,KAENW,OAFMX,KAEMH,QAAQ,GAAGe,UAGhCP,cAAe,WACXL,KAAKH,QAAQwB,GAAG9B,EAASS,KAAKQ,GAAIR,KAAKsB,QAAQC,KAAKvB,QAGxDsB,QAAS,WACL,IAAIV,EAAUZ,KAAKH,QAAQ,GAAGe,QAE9BZ,KAAKwB,QAAQjC,EAAQ,CAAEqB,QAASA,KAGpCR,cAAe,WACX,IAAIL,EAAOC,KACPH,EAAUE,EAAKF,QAAQ,GACvBC,EAAUC,EAAKD,QAEK,OAApBA,EAAQc,UACRd,EAAQc,QAAUf,EAAQe,SAG9Bb,EAAKY,MAAMb,EAAQc,SAEnBd,EAAQqB,QAAUrB,EAAQqB,UAAYpB,EAAKF,QAAQgB,KAAKrB,GACxDO,EAAKmB,OAAOpB,EAAQqB,UAGxBhB,SAAU,WACN,IAAIJ,EAAOC,KACPF,EAAUC,EAAKD,SAInB2B,EAHkB1B,EAAKU,cAGXV,EAAKF,QAASZ,EAAEU,OAAO,GAAIG,IACvCC,EAAKF,QAAQ6B,YAAY,0BAEzB3B,EAAKiB,QAAUjB,EAAKF,WAI5BR,EAAGsC,OAAOjC,GAtHd,CAuHGN,OAAOD,MAAMyC,QAChB,IAAIC,QAAU1C,aAEL0C","sourcesContent":["import './kendo.core.js';\n\nvar __meta__ = {\n    id: \"toggleinputbase\",\n    name: \"ToggleInputBase\",\n    category: \"web\",\n    description: \"The ToggleInputBase component.\",\n    depends: [ \"core\" ]\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        ui = kendo.ui,\n        Widget = ui.Widget,\n        CHANGE = \"change\",\n        DISABLED = \"disabled\",\n        CHECKED = \"checked\";\n\n    var ToggleInputBase = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            Widget.fn.init.call(that, element, options);\n\n            that._wrapper();\n\n            that._initSettings();\n\n            that._attachEvents();\n\n            kendo.notify(that, kendo.ui);\n        },\n\n        events: [\n            CHANGE\n        ],\n\n        options: {\n            name: \"ToggleInputBase\"\n        },\n\n        NS: \".kendoToggleInputBase\",\n        RENDER_INPUT: $.noop,\n\n        check: function(checked) {\n            var that = this,\n                element = that.element[0];\n\n            if (checked === undefined$1) {\n                return element.checked;\n            }\n\n            if (element.checked !== checked) {\n                that.options.checked = element.checked = checked;\n            }\n\n            if (checked) {\n                that.element.attr(CHECKED, CHECKED);\n            } else {\n                that.element.prop(CHECKED, false);\n            }\n        },\n\n        destroy: function() {\n            Widget.fn.destroy.call(this);\n            this.wrapper.off(this.NS);\n        },\n\n        enable: function(enable) {\n            var element = this.element;\n\n            if (typeof enable == \"undefined\") {\n                enable = true;\n            }\n\n            this.options.enabled = enable;\n\n            if (enable) {\n                element.prop(DISABLED, false);\n            } else {\n                element.attr(DISABLED, DISABLED);\n            }\n        },\n\n        toggle: function() {\n            var that = this;\n\n            that.check(!that.element[0].checked);\n        },\n\n        _attachEvents: function() {\n            this.element.on(CHANGE + this.NS, this._change.bind(this));\n        },\n\n        _change: function() {\n            var checked = this.element[0].checked;\n\n            this.trigger(CHANGE, { checked: checked });\n        },\n\n        _initSettings: function() {\n            var that = this,\n                element = that.element[0],\n                options = that.options;\n\n            if (options.checked === null) {\n                options.checked = element.checked;\n            }\n\n            that.check(options.checked);\n\n            options.enabled = options.enabled && !that.element.attr(DISABLED);\n            that.enable(options.enabled);\n        },\n\n        _wrapper: function() {\n            var that = this,\n                options = that.options,\n                inputMethod = that.RENDER_INPUT;\n\n\n            inputMethod(that.element, $.extend({}, options));\n            that.element.removeClass('input-validation-error');\n\n            that.wrapper = that.element;\n        }\n    });\n\n    ui.plugin(ToggleInputBase);\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}