{"version":3,"file":"kendo.treeview.draganddrop.js","names":["__meta__","id","name","category","depends","advanced","$","undefined$1","kendo","window","ui","extend","VISIBILITY","DRAG_STATUS_ELEMENT","KSTATEHOVER","HierarchicalDragAndDrop","Class","init","element","options","this","hovered","dragstart","noop","drag","drop","dragend","_draggable","Draggable","ignore","filter","autoScroll","cursorOffset","left","top","support","mobileOS","zoomLevel","hint","_hint","bind","dragcancel","hintDestroyed","$angular","holdToDrag","clickMoveClick","hintText","_removeTouchHover","touch","find","removeClass","_hintStatus","newStatus","statusElement","status","icon","replaceWith","e","dropHint","remove","source","currentTarget","closest","itemSelector","preventDefault","reorderable","css","appendTo","hoveredItem","itemHeight","itemTop","itemContent","delta","insertOnTop","insertOnBottom","addChild","itemData","position","target","dropTarget","eventTarget","container","allowedContainers","length","contains","hasClass","itemFromTarget","item","_outerHeight","content","getOffset","y","location","_lastHover","toggleClass","dropHintContainer","first","last","originalEvent","pageY","pageX","x","setStatus","value","indexOf","destination","eventArgs","dropPrevented","requireTarget","dropPositionFrom","valid","setValid","newValid","dropped","destroy","jQuery","kendo$1"],"sources":["kendo.treeview.draganddrop.js"],"mappings":"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","sourcesContent":["import './kendo.data.js';\nimport './kendo.draganddrop.js';\n\nvar __meta__ = {\n    id: \"treeview.draganddrop\",\n    name: \"Hierarchical Drag & Drop\",\n    category: \"framework\",\n    depends: [ \"core\", \"draganddrop\" ],\n    advanced: true\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo;\n    var ui = kendo.ui;\n    var extend = $.extend;\n    var VISIBILITY = \"visibility\";\n    var DRAG_STATUS = \"k-drag-status\";\n    var DRAG_STATUS_ELEMENT = `<span class=\"${DRAG_STATUS}\"></span>`;\n    var KSTATEHOVER = \"k-hover\";\n    var INPUTSELECTOR = \"input,a:not(.k-in),textarea,.k-multiselect-wrap,select,button,a.k-button>.k-icon,button.k-button>.k-icon,span.k-toggle-icon,a.k-button>.k-svg-icon,button.k-button>.k-svg-icon\";\n    var DROPHINTTEMPLATE = \"<div class='k-drop-hint k-drop-hint-h'>\" +\n                                \"<div class='k-drop-hint-start'></div>\" +\n                                \"<div class='k-drop-hint-line'></div>\" +\n                            \"</div>\";\n\n    ui.HierarchicalDragAndDrop = kendo.Class.extend({\n        init: function(element, options) {\n            this.element = element;\n            this.hovered = element;\n            this.options = extend({\n                dragstart: $.noop, drag: $.noop, drop: $.noop, dragend: $.noop\n            }, options);\n\n            this._draggable = new ui.Draggable(element, {\n                ignore: INPUTSELECTOR,\n                filter: options.filter,\n                autoScroll: options.autoScroll,\n                cursorOffset: {\n                    left: 10,\n                    top: kendo.support.mobileOS ? -40 / kendo.support.zoomLevel() : 10\n                },\n                hint: this._hint.bind(this),\n                dragstart: this.dragstart.bind(this),\n                dragcancel: this.dragcancel.bind(this),\n                hintDestroyed: this.dragcancel.bind(this),\n                drag: this.drag.bind(this),\n                dragend: this.dragend.bind(this),\n                $angular: options.$angular,\n                holdToDrag: options.holdToDrag,\n                clickMoveClick: options.clickMoveClick\n            });\n        },\n\n        _hint: function(element) {\n            return \"<div class='k-drag-clue'>\" +\n                        DRAG_STATUS_ELEMENT +\n                        this.options.hintText(element) +\n                    \"</div>\";\n        },\n\n        _removeTouchHover: function() {\n            if (kendo.support.touch && this.hovered) {\n                this.hovered.find(\".\" + KSTATEHOVER).removeClass(KSTATEHOVER);\n                this.hovered = false;\n            }\n        },\n\n        _hintStatus: function(newStatus) {\n            var statusElement = this._draggable.hint.find(`.${DRAG_STATUS}`);\n            if (newStatus) {\n                this.status = newStatus;\n                ui.icon(statusElement, {\n                    icon: newStatus\n                });\n            } else {\n                this.status = '';\n                statusElement.replaceWith(DRAG_STATUS_ELEMENT);\n            }\n        },\n\n        dragstart: function(e) {\n            if (this.dropHint) {\n                this.dropHint.remove();\n            }\n\n            this.source = e.currentTarget.closest(this.options.itemSelector);\n\n            if (this.options.dragstart(this.source)) {\n                e.preventDefault();\n            }\n\n            if (this.options.reorderable) {\n                this.dropHint = $(DROPHINTTEMPLATE)\n                    .css(VISIBILITY, \"hidden\")\n                    .appendTo(this.element);\n            } else {\n                this.dropHint = $();\n            }\n        },\n\n        drag: function(e) {\n            var options = this.options;\n            var source = this.source;\n            var target = this.dropTarget = $(kendo.eventTarget(e));\n            var container = target.closest(options.allowedContainers);\n            var hoveredItem, itemHeight, itemTop, itemContent, delta;\n            var insertOnTop, insertOnBottom, addChild;\n            var itemData, position, status;\n\n            if (!container.length) {\n                // dragging outside of allowed elements\n                status = \"cancel\";\n                this._removeTouchHover();\n            } else if (source[0] == target[0] || options.contains(source[0], target[0])) {\n                // dragging item within itself\n                status = \"cancel\";\n            } else if (e.clickMoveClick && e.currentTarget.hasClass(\"k-drag-cell\") && target.closest(\".k-drag-cell\").length === 0) {\n                // click-move-click interaction with drag cell\n                status = \"cancel\";\n            } else if (e.clickMoveClick && e.currentTarget.hasClass(\"k-treeview-leaf\") && target.closest(\".k-treeview-leaf\").length === 0) {\n                // click-move-click interaction with TreeView\n                status = \"cancel\";\n            } else {\n                // moving or reordering item\n                status = \"insert-middle\";\n\n                itemData = options.itemFromTarget(target);\n                hoveredItem = itemData.item;\n\n                if (hoveredItem.length) {\n                    this._removeTouchHover();\n                    itemHeight = kendo._outerHeight(hoveredItem);\n                    itemContent = itemData.content;\n\n                    if (options.reorderable) {\n                        delta = itemHeight / (itemContent.length > 0 ? 4 : 2);\n                        itemTop = kendo.getOffset(hoveredItem).top;\n\n                        insertOnTop = e.y.location < (itemTop + delta);\n                        insertOnBottom = (itemTop + itemHeight - delta) < e.y.location;\n                        addChild = itemContent.length && !insertOnTop && !insertOnBottom;\n                    } else {\n                        addChild = true;\n                        insertOnTop = false;\n                        insertOnBottom = false;\n                    }\n\n                    this.hovered = addChild ? container : false;\n\n                    this.dropHint.css(VISIBILITY, addChild ? \"hidden\" : \"visible\");\n\n                    if (this._lastHover && this._lastHover[0] != itemContent[0]) {\n                        this._lastHover.removeClass(KSTATEHOVER);\n                    }\n\n                    this._lastHover = itemContent.toggleClass(KSTATEHOVER, addChild);\n\n                    if (addChild) {\n                        status = \"plus\";\n                    } else {\n                        position = hoveredItem.position();\n                        position.top += insertOnTop ? 0 : itemHeight;\n\n                        this.dropHint.css(position)\n                            [insertOnTop ? \"prependTo\" : \"appendTo\"]\n                            (options.dropHintContainer(hoveredItem));\n\n                        if (insertOnTop && itemData.first) {\n                            status = \"insert-top\";\n                        }\n\n                        if (insertOnBottom && itemData.last) {\n                            status = \"insert-bottom\";\n                        }\n                    }\n                } else if (target[0] != this.dropHint[0]) {\n                    if (this._lastHover) {\n                        this._lastHover.removeClass(KSTATEHOVER);\n                    }\n\n                    if (!$.contains(this.element[0], container[0])) {\n                        // moving node to different element\n                        status = \"plus\";\n                    } else {\n                        status = \"cancel\";\n                    }\n                }\n            }\n\n            this.options.drag({\n                originalEvent: e.originalEvent,\n                source: source,\n                target: target,\n                pageY: e.y.location,\n                pageX: e.x.location,\n                status: status,\n                setStatus: function(value) {\n                    status = value;\n                }\n            });\n\n            if (status.indexOf(\"insert\") !== 0) {\n                this.dropHint.css(VISIBILITY, \"hidden\");\n            }\n\n            this._hintStatus(status);\n        },\n\n        dragcancel: function() {\n            if (this.dropHint) {\n                this.dropHint.remove();\n            }\n        },\n\n        dragend: function(e) {\n            var position = \"over\",\n                source = this.source,\n                destination,\n                dropHint = this.dropHint,\n                dropTarget = this.dropTarget || $(kendo.eventTarget(e)),\n                eventArgs, dropPrevented, requireTarget;\n\n            if (dropHint && dropHint.css(VISIBILITY) == \"visible\") {\n                position = this.options.dropPositionFrom(dropHint);\n                destination = dropHint.closest(this.options.itemSelector);\n                requireTarget = true;\n            } else if (dropTarget) {\n                destination = dropTarget.closest(this.options.itemSelector);\n\n                // moving node to root element\n                if (!destination.length) {\n                    destination = dropTarget.closest(this.options.allowedContainers);\n                }\n            }\n\n            if (requireTarget && !destination.length) {\n                this.dragcancel();\n                return;\n            }\n\n            eventArgs = {\n                originalEvent: e.originalEvent,\n                source: source[0],\n                destination: destination[0],\n                valid: this.status != \"cancel\",\n                setValid: function(newValid) {\n                    this.valid = newValid;\n                },\n                dropTarget: dropTarget[0],\n                position: position\n            };\n\n            dropPrevented = this.options.drop(eventArgs);\n\n            dropHint.remove();\n            this._removeTouchHover();\n            if (this._lastHover) {\n                this._lastHover.removeClass(KSTATEHOVER);\n            }\n\n            if (!eventArgs.valid || dropPrevented) {\n                this._draggable.dropped = eventArgs.valid;\n                return;\n            }\n\n            this._draggable.dropped = true;\n\n            this.options.dragend({\n                originalEvent: e.originalEvent,\n                source: source,\n                destination: destination,\n                position: position\n            });\n        },\n\n        destroy: function() {\n            this._lastHover = this.hovered = null;\n            this._draggable.destroy();\n        }\n    });\n\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}