{"version":3,"file":"kendo.validator.js","names":["__meta__","id","name","category","description","depends","$","undefined$1","kendo","window","Widget","ui","NS","INVALIDMSG","invalidMsgRegExp","RegExp","INVALIDINPUT","VALIDINPUT","VALIDATIONSUMMARY","INVALIDLABEL","MESSAGEBOX","ARIAINVALID","emailRegExp","urlRegExp","INPUTSELECTOR","CHECKBOXSELECTOR","NUMBERINPUTSELECTOR","BLUR","NAME","FORM","NOVALIDATE","VALIDATE","CHANGE","VALIDATE_INPUT","patternMatcher","value","pattern","test","matcher","input","selector","val","filter","length","hasAttribute","attributes","parseHtml","text","parseHTML","searchForMessageContainer","elements","fieldName","element","containers","idx","className","getAttribute","attr","add","isLabelFor","label","nodeName","validator","rules","messages","allowSubmit","noop","validateOnInit","SUMMARYTEMPLATE","errors","result","i","field","message","Validator","extend","init","options","that","this","resolved","resolvers","ruleResolvers","resolve","resolveRules","validateAttributeSelector","fn","call","_errorTemplate","template","errorTemplate","_summaryTemplate","validationSummary","is","_inputSelector","_checkboxSelector","_errors","_attachEvents","_isValidated","_validateOnInit","validate","events","required","min","max","step","email","url","date","dateCompare","captcha","noNameCheckbox","quote","indexOf","namedCheckbox","find","checkbox","radio","parseFloat","raise","decimals","split","Math","pow","floor","parseDate","widgetInstance","isValidated","isValid","data","getCaptchaId","_validating","done","_checkElement","fail","error","console","warn","removeData","validateOnBlur","_allowSubmit","destroy","off","_submit","e","stopPropagation","stopImmediatePropagation","preventDefault","state","validateInput","trigger","on","bind","inputs","invalid","eq","showValidationSummary","valid","_checkValidity","lbl","_findMessageContainer","next","addClass","messageText","_extractMessage","key","messageLabel","replace","wasValid","isInputInner","inputWrapper","parent","removeAttr","hasClass","closest","lblId","_decorateMessageContainer","replaceWith","parentElement","get","nextElement","prevElement","prev","wrapper","insertAfter","removeClass","_inputWrapper","toggleClass","inputWrap","inputLabel","_inputLabel","errorId","_associateMessageContainer","hideMessages","_disassociateMessageContainers","reset","labels","hideValidationSummary","locators","messageLocators","getElementsByTagName","locate","container","decorate","ruleKey","nonDefaultMessage","customMessage","prototype","isFunction","format","rule","results","push","setOptions","deepExtend","_setEvents","_getInputNames","sorted","nextFocusable","getWidgetFocusableElement","toggleAttribute","addBack","_errorsByName","inputNames","_renderSummary","insertBefore","join","_summaryClick","link","target","errorsList","summary","html","plugin","jQuery","kendo$1"],"sources":["kendo.validator.js"],"mappings":"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","sourcesContent":["import './kendo.core.js';\n\nvar __meta__ = {\n    id: \"validator\",\n    name: \"Validator\",\n    category: \"web\",\n    description: \"The Validator offers an easy way to do a client-side form validation.\",\n    depends: [ \"core\" ]\n};\n\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        Widget = kendo.ui.Widget,\n        NS = \".kendoValidator\",\n        INVALIDMSG = \"k-invalid-msg\",\n        invalidMsgRegExp = new RegExp(INVALIDMSG,'i'),\n        INVALIDINPUT = \"k-invalid\",\n        VALIDINPUT = \"k-valid\",\n        VALIDATIONSUMMARY = \"k-validation-summary\",\n        INVALIDLABEL = \"k-text-error\",\n        MESSAGEBOX = \"k-messagebox k-messagebox-error\",\n        INPUTINNER = \".k-input-inner\",\n        INPUTWRAPPER = \".k-input\",\n        ARIAINVALID = \"aria-invalid\",\n        ARIADESCRIBEDBY = \"aria-describedby\",\n        emailRegExp = /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/i,\n        urlRegExp = /^(https?|ftp):\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i,\n        INPUTSELECTOR = \":input:not(:button,[type=submit],[type=reset],[disabled],[readonly])\",\n        CHECKBOXSELECTOR = \":checkbox:not([disabled],[readonly])\",\n        NUMBERINPUTSELECTOR = \"[type=number],[type=range]\",\n        BLUR = \"blur\",\n        NAME = \"name\",\n        FORM = \"form\",\n        NOVALIDATE = \"novalidate\",\n        //events\n        VALIDATE = \"validate\",\n        CHANGE = \"change\",\n        VALIDATE_INPUT = \"validateInput\",\n\n        patternMatcher = function(value, pattern) {\n            if (typeof pattern === \"string\") {\n                pattern = new RegExp('^(?:' + pattern + ')$');\n            }\n            return pattern.test(value);\n        },\n        matcher = function(input, selector, pattern) {\n            var value = input.val();\n\n            if (input.filter(selector).length && value !== \"\") {\n                return patternMatcher(value, pattern);\n            }\n            return true;\n        },\n        hasAttribute = function(input, name) {\n            if (input.length) {\n                return input[0].attributes[name] != null;\n            }\n            return false;\n        };\n\n    if (!kendo.ui.validator) {\n        kendo.ui.validator = { rules: {}, messages: {}, allowSubmit: $.noop, validateOnInit: $.noop };\n    }\n\n    function resolveRules(element) {\n        var resolvers = kendo.ui.validator.ruleResolvers || {},\n            rules = {},\n            name;\n\n        for (name in resolvers) {\n            $.extend(true, rules, resolvers[name].resolve(element));\n        }\n        return rules;\n    }\n\n    function decode(value) {\n        return value.replace(/&amp/g, '&amp;')\n            .replace(/&quot;/g, '\"')\n            .replace(/&#39;/g, \"'\")\n            .replace(/&lt;/g, '<')\n            .replace(/&gt;/g, '>');\n    }\n\n    function numberOfDecimalDigits(value) {\n        value = (value + \"\").split('.');\n        if (value.length > 1) {\n            return value[1].length;\n        }\n        return 0;\n    }\n\n    function parseHtml(text) {\n        if ($.parseHTML) {\n            return $($.parseHTML(text));\n        }\n        return $(text);\n    }\n\n    function searchForMessageContainer(elements, fieldName) {\n        var containers = $(),\n            element,\n            attr;\n\n        for (var idx = 0, length = elements.length; idx < length; idx++) {\n            element = elements[idx];\n            if (invalidMsgRegExp.test(element.className)) {\n                attr = element.getAttribute(kendo.attr(\"for\"));\n                if (attr === fieldName) {\n                    containers = containers.add(element);\n                }\n            }\n        }\n        return containers;\n    }\n\n    function isLabelFor(label, element) {\n        if (!label) {\n            return false;\n        }\n        if (typeof label.nodeName !== 'string' || label.nodeName !== 'LABEL') {\n            return false;\n        }\n        if (typeof label.getAttribute('for') !== 'string' || typeof element.getAttribute('id') !== 'string') {\n            return false;\n        }\n        if (label.getAttribute('for') !== element.getAttribute('id')) {\n            return false;\n        }\n\n        return true;\n    }\n\n    var SUMMARYTEMPLATE = ({ errors }) => {\n        let result = '<ul>';\n        for (var i = 0; i < errors.length; i += 1) {\n            result += `<li><a data-field=\"${errors[i].field}\" href=\"#\">${errors[i].message}</a></li>`;\n        }\n\n        result += '</ul>';\n        return result;\n    };\n\n    var Validator = Widget.extend({\n        init: function(element, options) {\n            var that = this,\n                resolved = resolveRules(element),\n                validateAttributeSelector = \"[\" + kendo.attr(\"validate\") + \"!=false]\";\n\n            options = options || {};\n\n            options.rules = $.extend({}, kendo.ui.validator.rules, resolved.rules, options.rules);\n            options.messages = $.extend({}, kendo.ui.validator.messages, resolved.messages, options.messages);\n\n            Widget.fn.init.call(that, element, options);\n\n            that._errorTemplate = kendo.template(that.options.errorTemplate);\n            that._summaryTemplate = kendo.template(that.options.validationSummary.template || SUMMARYTEMPLATE);\n\n            if (that.element.is(FORM)) {\n                that.element.attr(NOVALIDATE, NOVALIDATE);\n            }\n\n            that._inputSelector = INPUTSELECTOR + validateAttributeSelector;\n            that._checkboxSelector = CHECKBOXSELECTOR + validateAttributeSelector;\n\n            that._errors = {};\n            that._attachEvents();\n            that._isValidated = false;\n\n            if (that._validateOnInit()) {\n                that.validate();\n            }\n        },\n\n        events: [ VALIDATE, CHANGE, VALIDATE_INPUT ],\n\n        options: {\n            name: \"Validator\",\n            errorTemplate: ({ message }) => `<span class=\"k-form-error\">${message}</span>`,\n            messages: {\n                required: \"{0} is required\",\n                pattern: \"{0} is not valid\",\n                min: \"{0} should be greater than or equal to {1}\",\n                max: \"{0} should be smaller than or equal to {1}\",\n                step: \"{0} is not valid\",\n                email: \"{0} is not valid email\",\n                url: \"{0} is not valid URL\",\n                date: \"{0} is not valid date\",\n                dateCompare: \"End date should be greater than or equal to the start date\",\n                captcha: \"The text you entered doesn't match the image.\"\n            },\n            rules: {\n                required: function(input) {\n                    var noNameCheckbox = !input.attr(\"name\") && !input.is(\":checked\"),\n                        name = input.attr(\"name\"),\n                        quote = !!name && name.indexOf(\"'\") > -1 ? '\\\"' : \"'\",\n                        namedCheckbox = input.attr(\"name\") && !this.element.find(\"input[name=\" + quote + input.attr(\"name\") + quote + \"]:checked\").length,\n                        checkbox = input.filter(\"[type=checkbox]\").length && (noNameCheckbox || namedCheckbox),\n                        radio = input.filter(\"[type=radio]\").length && !this.element.find(\"input[name=\" + quote + input.attr(\"name\") + quote + \"]:checked\").length,\n                        value = input.val();\n\n                    return !(hasAttribute(input, \"required\") && (!value || value === \"\" || value.length === 0 || checkbox || radio));\n                },\n                pattern: function(input) {\n                    if (input.filter(\"[type=text],[type=email],[type=url],[type=tel],[type=search],[type=password]\").filter(\"[pattern]\").length && input.val() !== \"\") {\n                        return patternMatcher(input.val(), input.attr(\"pattern\"));\n                    }\n                    return true;\n                },\n                min: function(input) {\n                    if (input.filter(NUMBERINPUTSELECTOR + \",[\" + kendo.attr(\"type\") + \"=number]\").filter(\"[min]\").length && input.val() !== \"\") {\n                        var min = parseFloat(input.attr(\"min\")) || 0,\n                            val = kendo.parseFloat(input.val());\n\n                        return min <= val;\n                    }\n                    return true;\n                },\n                max: function(input) {\n                    if (input.filter(NUMBERINPUTSELECTOR + \",[\" + kendo.attr(\"type\") + \"=number]\").filter(\"[max]\").length && input.val() !== \"\") {\n                        var max = parseFloat(input.attr(\"max\")) || 0,\n                            val = kendo.parseFloat(input.val());\n\n                        return max >= val;\n                    }\n                    return true;\n                },\n                step: function(input) {\n                    if (input.filter(NUMBERINPUTSELECTOR + \",[\" + kendo.attr(\"type\") + \"=number]\").filter(\"[step]\").length && input.val() !== \"\") {\n                        var min = parseFloat(input.attr(\"min\")) || 0,\n                            step = parseFloat(input.attr(\"step\")) || 1,\n                            val = parseFloat(input.val()),\n                            decimals = numberOfDecimalDigits(step),\n                            raise;\n\n                        if (decimals) {\n                            raise = Math.pow(10, decimals);\n                            return ((Math.floor((val - min) * raise)) % (step * raise)) / Math.pow(100, decimals) === 0;\n                        }\n                        return ((val - min) % step) === 0;\n                    }\n                    return true;\n                },\n                email: function(input) {\n                    return matcher(input, \"[type=email],[\" + kendo.attr(\"type\") + \"=email]\", emailRegExp);\n                },\n                url: function(input) {\n                    return matcher(input, \"[type=url],[\" + kendo.attr(\"type\") + \"=url]\", urlRegExp);\n                },\n                date: function(input) {\n                    if (input.filter(\"[type^=date],[\" + kendo.attr(\"type\") + \"=date]\").length && input.val() !== \"\") {\n                        return kendo.parseDate(input.val(), input.attr(kendo.attr(\"format\"))) !== null;\n                    }\n                    return true;\n                },\n                captcha: function(input) {\n                    if (input.filter(\"[\" + kendo.attr(\"role\") + \"=captcha]\").length) {\n                        var that = this,\n                            captcha = kendo.widgetInstance(input),\n                            isValidated = function(isValid) {\n                                return typeof(isValid) !== 'undefined' && isValid !== null;\n                            };\n\n                        if (!input.data(\"captcha_validating\") && !isValidated(captcha.isValid()) && !!captcha.getCaptchaId()) {\n                            input.data(\"captcha_validating\", true);\n                            that._validating = true;\n                            captcha.validate().done(function() {\n                                that._validating = false;\n                                that._checkElement(input);\n                            }).fail(function(data) {\n                                that._validating = false;\n                                if (data.error && data.error === \"handler_not_defined\") {\n                                    window.console.warn(\"Captcha's validationHandler is not defined! You should either define a proper validation endpoint or declare a callback function to ensure the required behavior.\");\n                                }\n                            });\n                        }\n\n                        if (isValidated(captcha.isValid())) {\n                            input.removeData(\"captcha_validating\");\n                            return captcha.isValid();\n                        }\n                    }\n                    return true;\n                }\n            },\n            validateOnBlur: true,\n            validationSummary: false\n        },\n\n        _allowSubmit: function() {\n            return kendo.ui.validator.allowSubmit(this.element, this.errors());\n        },\n\n        _validateOnInit: function() {\n            return kendo.ui.validator.validateOnInit(this.element);\n        },\n\n        destroy: function() {\n            Widget.fn.destroy.call(this);\n\n            this.element.off(NS);\n\n            if (this.validationSummary) {\n                this.validationSummary.off(NS);\n                this.validationSummary = null;\n            }\n        },\n\n        value: function() {\n            if (!this._isValidated) {\n                return false;\n            }\n\n            return this.errors().length === 0;\n        },\n\n        _submit: function(e) {\n            if ((!this.validate() && !this._allowSubmit()) || this._validating) {\n                e.stopPropagation();\n                e.stopImmediatePropagation();\n                e.preventDefault();\n                return false;\n            }\n            return true;\n        },\n\n        _checkElement: function(element) {\n            var state = this.value();\n\n            this.validateInput(element);\n\n            if (this.value() !== state) {\n                this.trigger(CHANGE);\n            }\n        },\n\n        _attachEvents: function() {\n            var that = this;\n\n            if (that.element.is(FORM)) {\n                that.element.on(\"submit\" + NS, that._submit.bind(that));\n            }\n\n            if (that.options.validateOnBlur) {\n                if (!that.element.is(INPUTSELECTOR)) {\n                    that.element.on(BLUR + NS, that._inputSelector, function() {\n                        that._checkElement($(this));\n                    });\n\n                    that.element.on(\"click\" + NS, that._checkboxSelector, function() {\n                        that._checkElement($(this));\n                    });\n                } else {\n                    that.element.on(BLUR + NS, function() {\n                        that._checkElement(that.element);\n                    });\n\n                    if (that.element.is(CHECKBOXSELECTOR)) {\n                        that.element.on(\"click\" + NS, function() {\n                            that._checkElement(that.element);\n                        });\n                    }\n                }\n            }\n        },\n\n        validate: function() {\n            var inputs;\n            var idx;\n            var result = false;\n            var length;\n\n            var isValid = this.value();\n\n            this._errors = {};\n\n            if (!this.element.is(INPUTSELECTOR)) {\n                var invalid = false;\n\n                inputs = this.element.find(this._inputSelector);\n\n                for (idx = 0, length = inputs.length; idx < length; idx++) {\n                    if (!this.validateInput(inputs.eq(idx))) {\n                        invalid = true;\n                    }\n                }\n\n                result = !invalid;\n            } else {\n                result = this.validateInput(this.element);\n            }\n\n            if (this.options.validationSummary && !isValid) {\n                this.showValidationSummary();\n            }\n\n            this.trigger(VALIDATE, { valid: result, errors: this.errors() });\n\n            if (isValid !== result) {\n                this.trigger(CHANGE);\n            }\n\n            return result;\n        },\n\n        validateInput: function(input) {\n            input = $(input);\n\n\n            this._isValidated = true;\n\n            var that = this,\n                template = that._errorTemplate,\n                result = that._checkValidity(input),\n                valid = result.valid,\n                widgetInstance,\n                className = \".\" + INVALIDMSG,\n                fieldName = (input.attr(NAME) || \"\"),\n                lbl = that._findMessageContainer(fieldName).add(input.next(className).filter(function() {\n                    var element = $(this);\n                    if (element.filter(\"[\" + kendo.attr(\"for\") + \"]\").length) {\n                        return element.attr(kendo.attr(\"for\")) === fieldName;\n                    }\n\n                    return true;\n\n                })).addClass(\"k-hidden\"),\n                messageText = !valid ? that._extractMessage(input, result.key) : \"\",\n                messageLabel = !valid ? parseHtml(template({ message: decode(messageText), field: fieldName })) : \"\",\n                wasValid = !input.attr(ARIAINVALID),\n                isInputInner = input.is(INPUTINNER),\n                inputWrapper = input.parent(INPUTWRAPPER);\n\n            input.removeAttr(ARIAINVALID);\n\n            if (input.hasClass(\"k-hidden\")) {\n                widgetInstance = kendo.widgetInstance(input.closest(\".k-signature\"));\n            }\n\n            if (input.is(\"[type=radio]\")) {\n                widgetInstance = kendo.widgetInstance(input.closest(\".k-radio-list\"));\n            }\n\n            if (input.is(\"[type=checkbox]\")) {\n                widgetInstance = kendo.widgetInstance(input.closest(\".k-checkbox-list\"));\n            }\n\n            if (!valid && !input.data(\"captcha_validating\")) {\n                that._errors[fieldName] = messageText;\n                var lblId = lbl.attr('id');\n\n                that._decorateMessageContainer(messageLabel, fieldName);\n\n\n                if (lblId) {\n                    messageLabel.attr('id', lblId);\n                }\n\n                if (lbl.length !== 0) {\n                    lbl.replaceWith(messageLabel);\n                } else {\n                    widgetInstance = widgetInstance || kendo.widgetInstance(input);\n                    var parentElement = input.parent().get(0);\n                    var nextElement = input.next().get(0);\n                    var prevElement = input.prev().get(0);\n\n                    // Get the instance of the RadioGroup which is not initialized on the input element\n                    if (!widgetInstance && input.is(\"[type=radio]\")) {\n                        widgetInstance = kendo.widgetInstance(input.closest(\".k-radio-list\"));\n                    }\n\n                    // Get the instance of the CheckBoxGroup which is not initialized on the input element\n                    if (!widgetInstance && input.is(\"[type=checkbox]\")) {\n                        widgetInstance = kendo.widgetInstance(input.closest(\".k-checkbox-list\"));\n                    }\n\n                    if (widgetInstance && widgetInstance.wrapper && (widgetInstance.element !== widgetInstance.wrapper || [\"Signature\", \"RadioGroup\", \"CheckBoxGroup\"].indexOf(widgetInstance.options.name) > -1)) {\n                        messageLabel.insertAfter(widgetInstance.wrapper);\n                    } else if (parentElement && parentElement.nodeName === \"LABEL\") {\n                        // Input inside label\n                        messageLabel.insertAfter(parentElement);\n                    } else if (nextElement && isLabelFor(nextElement, input[0])) {\n                        // Input before label\n                        messageLabel.insertAfter(nextElement);\n                    } else if (prevElement && isLabelFor(prevElement, input[0])) {\n                        // Input after label\n                        messageLabel.insertAfter(input);\n                    } else if (isInputInner && inputWrapper.length) {\n                        // Input after input wrapper\n                        messageLabel.insertAfter(inputWrapper);\n                    } else {\n                        messageLabel.insertAfter(input);\n                    }\n                }\n\n                messageLabel.removeClass(\"k-hidden\");\n\n                input.attr(ARIAINVALID, true);\n            } else {\n                delete that._errors[fieldName];\n            }\n\n            if (wasValid !== valid) {\n                this.trigger(VALIDATE_INPUT, { valid: valid, input: input, error: messageText, field: fieldName });\n            }\n\n            widgetInstance = (widgetInstance && widgetInstance.options.name == \"Signature\") ? widgetInstance : kendo.widgetInstance(input);\n            if (!widgetInstance || !(widgetInstance._inputWrapper || widgetInstance.wrapper)) {\n                input.toggleClass(INVALIDINPUT, !valid);\n                input.toggleClass(VALIDINPUT, valid);\n            }\n\n            if (widgetInstance) {\n                var inputWrap = widgetInstance._inputWrapper || widgetInstance.wrapper;\n                var inputLabel = widgetInstance._inputLabel;\n\n                if (inputWrap) {\n                    inputWrap.toggleClass(INVALIDINPUT, !valid);\n                    inputWrap.toggleClass(VALIDINPUT, valid);\n                }\n                if (inputLabel) {\n                    inputLabel.toggleClass(INVALIDLABEL, !valid);\n                }\n            }\n\n            if (wasValid !== valid) {\n                var errorId = messageLabel ? messageLabel.attr(\"id\") : lbl.attr(\"id\");\n\n                that._associateMessageContainer(input, errorId);\n\n                if (this.options.validationSummary && this.options.validateOnBlur) {\n                    this.showValidationSummary();\n                }\n            }\n\n            return valid;\n        },\n\n        hideMessages: function() {\n            var that = this,\n                className = \".\" + INVALIDMSG,\n                element = that.element;\n\n            that._disassociateMessageContainers();\n\n            if (!element.is(INPUTSELECTOR)) {\n                element.find(className).addClass(\"k-hidden\");\n            } else {\n                element.next(className).addClass(\"k-hidden\");\n            }\n        },\n\n        reset: function() {\n            var that = this,\n                inputs = that.element.find(\".\" + INVALIDINPUT),\n                labels = that.element.find(\".\" + INVALIDLABEL);\n\n            that._errors = [];\n\n            that.hideMessages();\n\n            that.hideValidationSummary();\n\n            inputs.removeAttr(ARIAINVALID);\n            inputs.removeClass(INVALIDINPUT);\n            labels.removeClass(INVALIDLABEL);\n        },\n\n        _findMessageContainer: function(fieldName) {\n            var locators = kendo.ui.validator.messageLocators,\n                name,\n                containers = $();\n\n            for (var idx = 0, length = this.element.length; idx < length; idx++) {\n                containers = containers.add(searchForMessageContainer(this.element[idx].getElementsByTagName(\"*\"), fieldName));\n            }\n\n            for (name in locators) {\n                containers = containers.add(locators[name].locate(this.element, fieldName));\n            }\n\n            return containers;\n        },\n\n        _decorateMessageContainer: function(container, fieldName) {\n            var locators = kendo.ui.validator.messageLocators,\n                name;\n\n            container.addClass(INVALIDMSG)\n                .attr(kendo.attr(\"for\"), fieldName || \"\");\n\n            if (!container.attr(\"id\")) {\n                container.attr(\"id\", fieldName + \"-error\");\n            }\n\n            for (name in locators) {\n                locators[name].decorate(container, fieldName);\n            }\n        },\n\n        _extractMessage: function(input, ruleKey) {\n            var that = this,\n                customMessage = that.options.messages[ruleKey],\n                fieldName = input.attr(NAME),\n                nonDefaultMessage;\n\n            if (!kendo.ui.Validator.prototype.options.messages[ruleKey]) {\n                 nonDefaultMessage = kendo.isFunction(customMessage) ? customMessage(input) : customMessage;\n            }\n\n            customMessage = kendo.isFunction(customMessage) ? customMessage(input) : customMessage;\n\n            return kendo.format(input.attr(kendo.attr(ruleKey + \"-msg\")) || input.attr(\"validationMessage\") || nonDefaultMessage || customMessage || input.attr(\"title\") || \"\",\n                fieldName,\n                input.attr(ruleKey) || input.attr(kendo.attr(ruleKey)));\n        },\n\n        _checkValidity: function(input) {\n            var rules = this.options.rules,\n                rule;\n\n            for (rule in rules) {\n                if (!rules[rule].call(this, input)) {\n                    return { valid: false, key: rule };\n                }\n            }\n\n            return { valid: true };\n        },\n\n        errors: function() {\n            var results = [],\n                errors = this._errors,\n                error;\n\n            for (error in errors) {\n                results.push(errors[error]);\n            }\n            return results;\n        },\n\n        setOptions: function(options) {\n            if (options.validationSummary) {\n                this.hideValidationSummary();\n            }\n\n            kendo.deepExtend(this.options, options);\n\n            this.destroy();\n\n            this.init(this.element, this.options);\n\n            this._setEvents(this.options);\n        },\n\n        _getInputNames: function() {\n            var that = this,\n                inputs = that.element.find(that._inputSelector),\n                sorted = [];\n\n            for (var idx = 0, length = inputs.length; idx < length; idx++) {\n                var input = $(inputs[idx]);\n\n                if (hasAttribute(input, NAME)) {\n                    // Add current name if:\n                    // - not present so far;\n                    // - present but not part of CheckBoxGroup or RadioGroup.\n                    if (sorted.indexOf(input.attr(NAME)) === -1 ||\n                        (input.closest(\".k-checkbox-list\").length === 0 &&\n                        input.closest(\".k-radio-list\").length === 0)) {\n                            sorted.push(input.attr(NAME));\n                    }\n                }\n            }\n\n            return sorted;\n        },\n\n        _associateMessageContainer: function(input, errorId) {\n            var nextFocusable = kendo.getWidgetFocusableElement(input);\n\n            if (!nextFocusable || !errorId) {\n                return;\n            }\n\n            kendo.toggleAttribute(nextFocusable, ARIADESCRIBEDBY, errorId);\n        },\n\n        _disassociateMessageContainers: function() {\n            var that = this,\n                inputs = that.element.find(\".\" + INVALIDINPUT).addBack(),\n                input, errorId;\n\n            for (var i = 0; i < inputs.length; i += 1) {\n                input = $(inputs[i]);\n\n                if (input.is(\"input\")) {\n                    errorId = that._findMessageContainer(input.attr(NAME))\n                        .add(input.next(\".\" + INVALIDMSG))\n                        .attr(\"id\");\n\n                    that._associateMessageContainer(input, errorId);\n                }\n            }\n        },\n\n        _errorsByName: function() {\n            var that = this,\n                inputNames = that._getInputNames(),\n                sorted = [];\n\n            for (var i = 0; i < inputNames.length; i += 1) {\n                var name = inputNames[i];\n\n                if (that._errors[name]) {\n                    sorted.push({\n                        field: name,\n                        message: that._errors[name]\n                    });\n                }\n            }\n\n            return sorted;\n        },\n\n        _renderSummary: function() {\n            var that = this,\n                options = this.options.validationSummary,\n                element = this.element,\n                prevElement = element.prev(),\n                container;\n\n            if (options.container) {\n                container = $(options.container);\n            } else if (prevElement && prevElement.hasClass(VALIDATIONSUMMARY)) {\n                container = prevElement;\n            } else {\n                container = $(\"<div />\").insertBefore(that.element);\n            }\n\n            container.addClass([VALIDATIONSUMMARY, MESSAGEBOX].join(\" \"));\n            container.attr(\"role\", \"alert\");\n\n            container.on(\"click\" + NS, that._summaryClick.bind(that));\n\n            return container;\n        },\n\n        _summaryClick: function(e) {\n            e.preventDefault();\n\n            var that = this,\n                link = $(e.target),\n                target = that.element.find(\"[name='\" + link.data(\"field\") + \"']\"),\n                nextFocusable;\n\n            if (!target.length) {\n                return;\n            }\n\n            nextFocusable = kendo.getWidgetFocusableElement(target);\n\n            if (nextFocusable) {\n                nextFocusable.trigger(\"focus\");\n            }\n        },\n\n        showValidationSummary: function() {\n            var that = this,\n                summary = that.validationSummary,\n                errors = that._errorsByName(),\n                errorsList;\n\n            if (!summary) {\n                summary = that.validationSummary = that._renderSummary();\n            }\n\n            errorsList = parseHtml(that._summaryTemplate({\n                errors: errors\n            }));\n\n            summary.html(errorsList);\n\n            summary.toggleClass(\"k-hidden\", !errors.length);\n        },\n\n        hideValidationSummary: function() {\n            var that = this,\n                summary = that.validationSummary;\n\n            if (!summary) {\n                return;\n            }\n\n            summary.addClass(\"k-hidden\");\n        }\n    });\n\n    kendo.ui.plugin(Validator);\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}