{"version":3,"file":"kendo.window.js","names":["__meta__","id","name","category","description","depends","features","$","undefined$1","templates","kendo","window","Widget","ui","TabKeyTrap","Popup","Draggable","isPlainObject","activeElement","_activeElement","outerWidth","_outerWidth","outerHeight","_outerHeight","extend","each","template","BODY","NS","MODAL_NS","KWINDOW","KWINDOWTITLE","KWINDOWTITLEBAR","KWINDOWCONTENT","KWINDOWRESIZEHANDLES","KOVERLAY","KWINDOWMINIMIZED","KCONTENTFRAME","LOADINGICONCLASS","KHOVERSTATE","KFOCUSEDSTATE","MAXIMIZEDSTATE","INLINE_FLEX","VISIBLE","HIDDEN","CURSOR","OPEN","ACTIVATE","DEACTIVATE","CLOSE","REFRESH","RESIZESTART","RESIZEEND","DRAGSTART","DRAGEND","RESTORE","ERROR","OVERFLOW","DATADOCOVERFLOWRULE","ZINDEX","MINIMIZE_MAXIMIZEICONSELECTORS","KPINICONCLASSSELECTOR","KUNPINICONCLASSSELECTOR","PIN_UNPINICONCLASSSELECTOR","TITLEBAR_BUTTONSSELECTOR","REFRESHICONSELECTOR","WINDOWEVENTSHANDLED","zero","isLocalUrl","SIZE","small","medium","large","defined","x","toInt","element","property","parseInt","css","constrain","value","low","high","isNaN","toString","indexOf","Math","max","min","Infinity","executableScript","this","type","toLowerCase","getPosition","elem","result","top","offsetTop","left","offsetLeft","parent","offsetParent","parentOverflowX","parentOverflowY","scrollTop","scrollLeft","Window","init","options","wrapper","visibility","display","position","content","windowContent","globalWindow","that","offset","suppressActions","actions","length","fn","call","appendTo","containment","draggable","first","url","find","filter","remove","is","document","body","contains","visible","closest","themeColor","addClass","getValidCssClass","attr","_createWindow","title","_dimensions","_footerTemplate","append","_footerMessages","minTop","minLeft","maxTop","maxLeft","_position","refresh","toFront","modal","children","_overlay","opacity","on","_buttonEnter","bind","_buttonLeave","_windowActionHandler","_keydown","_focus","_blur","_keydownContent","data","widgetInstance","not","i","_resizable","_draggable","pinned","pin","role","add","support","mousedown","touchScroller","_resizeHandler","_onDocumentResize","_marker","guid","substring","trigger","notify","_tabKeyTrap","trap","shouldTrap","e","currentTarget","removeClass","width","height","maxHeight","sizeClass","size","dimensions","contentBoxSizing","lrBorderWidth","tbBorderWidth","paddingTop","_isPinned","_updateBoundaries","maxWidth","minWidth","minHeight","hide","containmentTop","containmentLeft","parseFloat","Number","replace","innerWidth","innerHeight","clientWidth","scrollbar","clientHeight","_animationOptions","animation","open","effects","close","_resize","resize","resizable","resizing","off","destroy","target","toggleMaximization","split","index","handler","resizeHandle","WindowResizing","dragging","WindowDragging","dragHandle","clickMoveClick","_actions","icon","container","windowSpecificCommands","icons","maximize","custom","map","action","html","render","setOptions","doc","cachedOptions","JSON","parse","stringify","_containerScrollTop","_containerScrollLeft","scrollable","restore","_enableDocumentScrolling","events","zoom","direction","fade","duration","properties","scale","autoFocus","isMaximized","isMinimized","_closable","inArray","keys","keyCode","ESC","stopPropagation","_close","handled","newWidth","newHeight","w","h","distance","_closing","altKey","unpin","UP","DOWN","minimize","getOffset","ctrlKey","LEFT","RIGHT","preventDefault","overlay","zIndex","insertBefore","preventScroll","_stopDocumentScrolling","_actionForIcon","exec","className","_modals","windowInstance","windowElements","modals","_object","push","sort","a","b","style","widget","center","newTop","newLeft","documentWindow","_scrollIsAppended","encoded","titleBar","titleElement","arguments","text","htmlEncode","prepend","titlebar","scrollContainer","angular","elements","empty","dataItem","otherModalsVisible","showOptions","contentElement","kendoStop","Fade","overlayFx","fx","fadeIn","endValue","play","show","kendoAnimate","complete","_activate","_removeOverlay","suppressAnimation","hideOverlay","hideOptions","fadeOut","startValue","last","systemTriggered","defaultPrevented","userTriggered","reverse","_deactivate","iframe","lastModal","_actionable","_shouldFocus","active","avoidFocus","currentWindow","containmentContext","openAnimation","originalZIndex","windowObject","zIndexNew","setTimeout","focus","windowTop","restoreOptions","end","removeAttr","_sizingAction","actionId","callback","eq","before","toggle","_storeOverflowRule","$body","$html","_restoreOverflowRule","$element","_isOverflowStored","overflowRule","get","overflow","removeData","win","pinIcon","wnd","zoomLevel","showIframe","initOptions","src","contentFrame","_triggerRefresh","_ajaxRequest","toggleClass","_ajaxComplete","clearTimeout","_loadingIconTimeout","_ajaxError","xhr","status","_ajaxSuccess","contentTemplate","prop","_showLoading","ajax","dataType","cache","error","success","_destroy","unbind","iframeSrcAttributes","contentHtml","isRtl","getAttribute","editor","owner","_preventDragging","group","dragstart","drag","dragend","userEvents","addOverlay","removeOverlay","dragcancel","iconName","renderButton","fillMode","prototype","elementPadding","initialPosition","resizeDirection","initialSize","containerOffset","marginTop","marginLeft","test","wrapperPosition","relativeElMarginLeft","relativeElMarginTop","_relativeElMarginLeft","_relativeElMarginTop","windowBottom","windowRight","rtl","leftRtlOffset","scrollOffset","location","y","newWindowTop","reset","initialWindowPosition","initialPointerPosition","startPosition","client","axis","transforms","_finishDrag","plugin","jQuery","kendo$1"],"sources":["kendo.window.js"],"mappings":"MAAO,+BACA,yBACA,yBACA,yBAEP,IAAIA,SAAW,CACPC,GAAI,SACJC,KAAM,SACNC,SAAU,MACVC,YAAa,0EACbC,QAAS,CAAE,cAAe,QAAS,SACnCC,SAAU,CAAE,CACRL,GAAI,YACJC,KAAM,YACNE,YAAa,wBACbC,QAAS,CAAE,UAInB,SAAUE,EAAGC,GACT,IAYIC,EAZAC,EAAQC,OAAOD,MACfE,EAASF,EAAMG,GAAGD,OAClBE,EAAaJ,EAAMG,GAAGE,MAAMD,WAC5BE,EAAYN,EAAMG,GAAGG,UACrBC,EAAgBV,EAAEU,cAClBC,EAAgBR,EAAMS,eACtBC,EAAaV,EAAMW,YACnBC,EAAcZ,EAAMa,aACpBC,EAASjB,EAAEiB,OACXC,EAAOlB,EAAEkB,KACTC,EAAWhB,EAAMgB,SACjBC,EAAO,OAEPC,EAAK,eACLC,EAAW,oBAEXC,EAAU,YACVC,EAAe,kBACfC,EAAkBD,EAAe,MACjCE,EAAiB,oBAEjBC,EAAuB,mBACvBC,EAAW,aACXC,EAAmB,qBACnBC,EAAgB,kBAChBC,EAAmB,cACnBC,EAAc,UACdC,EAAgB,UAChBC,EAAiB,qBACjBC,EAAc,wBAEdC,EAAU,WACVC,EAAS,SACTC,EAAS,SAETC,EAAO,OACPC,EAAW,WACXC,EAAa,aACbC,EAAQ,QACRC,EAAU,UAGVC,EAAc,cAEdC,EAAY,YACZC,EAAY,YACZC,EAAU,UACVC,EAAU,UAEVC,EAAQ,QACRC,EAAW,WACXC,EAAsB,yBACtBC,EAAS,SACTC,EAAiC,wLACjCC,EAAwB,wBACxBC,EAA0B,4BAC1BC,EAA6BF,yBAA8BC,EAC3DE,EAA2B,+CAC3BC,EAAsB,sFACtBC,EAAsB,sBACtBC,GAAO,aACPC,GAAa1D,EAAM0D,WACnBC,GAAO,CACHC,MAAO,cACPC,OAAQ,cACRC,MAAO,eAGf,SAASC,GAAQC,GACb,YAAoB,IAALA,EAGnB,SAASC,GAAMC,EAASC,GACpB,OAAOC,SAASF,EAAQG,IAAIF,GAAW,KAAO,EAGlD,SAASG,GAAUC,EAAOC,EAAKC,GAY3B,OATIF,GAASG,MAAMH,IAAUA,EAAMI,WAAWC,QAAQ,MAAQ,EACxCL,EAEAM,KAAKC,IACnBD,KAAKE,IAAIX,SAASG,EAAO,IAAKE,IAASO,IAAWP,EAAOL,SAASK,EAAM,KACxED,KAASQ,IAAWR,EAAMJ,SAASI,EAAK,KAOpD,SAASS,KACL,OAAQC,KAAKC,MAAQD,KAAKC,KAAKC,cAAcR,QAAQ,WAAa,EAItE,SAASS,GAAYC,GAIjB,IAHA,IAAIC,EAAS,CAAEC,IAAKF,EAAKG,UAAWC,KAAMJ,EAAKK,YAC3CC,EAASN,EAAKO,aAEXD,GAAQ,CACXL,EAAOC,KAAOI,EAAOH,UACrBF,EAAOG,MAAQE,EAAOD,WAEtB,IAAIG,EAAkBjG,EAAE+F,GAAQvB,IAAI,aAChC0B,EAAkBlG,EAAE+F,GAAQvB,IAAI,aAEZ,SAApB0B,GAAkD,WAApBA,IAC9BR,EAAOC,KAAOI,EAAOI,WAGD,SAApBF,GAAkD,WAApBA,IAC9BP,EAAOG,MAAQE,EAAOK,YAG1BL,EAASA,EAAOC,aAGpB,OAAON,EAGX,IAAIW,GAAShG,EAAOY,OAAO,CACvBqF,KAAM,SAASjC,EAASkC,GACpB,IACIC,EAEAC,EAAYC,EAASC,EAErBC,EACAC,EAEAC,EAEApH,EAVAqH,EAAO1B,KAEP2B,EAAS,GAOTC,EAAkBV,GAAWA,EAAQW,UAAYX,EAAQW,QAAQC,OAGrE9G,EAAO+G,GAAGd,KAAKe,KAAKN,EAAM1C,EAASkC,GAEnCI,GADAJ,EAAUQ,EAAKR,SACII,SACnBtC,EAAU0C,EAAK1C,QACfuC,EAAUL,EAAQK,QAClBE,EAAe9G,EAAEI,QAEb6G,IACAV,EAAQW,QAAU,IAGtBH,EAAKO,SAAWtH,EAAEuG,EAAQe,UAE1BP,EAAKQ,YAAchB,EAAQiB,UAAUD,YAAcvH,EAAEuG,EAAQiB,UAAUD,aAAaE,QAAU,KAE1Fb,IAAYlG,EAAckG,KAC1BA,EAAUL,EAAQK,QAAU,CAAEc,IAAKd,IAIvCvC,EAAQsD,KAAK,UAAUC,OAAOxC,IAAkByC,SAE3CxD,EAAQ0B,SAAS+B,GAAGf,EAAKO,WAAcP,EAAKQ,aAAgBZ,EAAShB,MAAQ1F,GAAe0G,EAASd,OAAS5F,IAC3GoE,EAAQyD,GAAG1F,IACX4E,EAAS3C,EAAQ2C,UACL,IAEZP,EAAapC,EAAQG,IAAI,cACzBkC,EAAUrC,EAAQG,IAAI,WAEtBH,EAAQG,IAAI,CAAEiC,WAAYpE,EAAQqE,QAAS,KAGvCM,EADAe,SAASC,KAAKC,SAAS5D,EAAQ,IACtBA,EAAQ2C,SAER,CAAErB,IAAK,EAAGE,KAAM,GAG7BxB,EAAQG,IAAI,CAAEiC,WAAYA,EAAYC,QAASA,KAG/CC,EAAShB,MAAQ1F,IACjB0G,EAAShB,IAAMqB,EAAOrB,KAEtBgB,EAASd,OAAS5F,IAClB0G,EAASd,KAAOmB,EAAOnB,OAI1B3B,GAAQqC,EAAQ2B,UAAgC,OAApB3B,EAAQ2B,UACrC3B,EAAQ2B,QAAU7D,EAAQyD,GAAG1F,IAGjCoE,EAAUO,EAAKP,QAAUnC,EAAQ8D,QAAQ5G,GAErCgF,EAAQ6B,YAAqC,SAAvB7B,EAAQ6B,YAC9B5B,EAAQ6B,SAASlI,EAAMmI,iBAAiB,YAAa,aAAc/B,EAAQ6B,aAG1E/D,EAAQyD,GAAG,sBAAyBtB,EAAQ,KAC7CnC,EAAQgE,SAAS,oBACjBhE,EAAQkE,KAAK,WAAY,GACzBxB,EAAKyB,cAAcnE,EAASkC,GAC5BC,EAAUO,EAAKP,QAAUnC,EAAQ8D,QAAQ5G,GAEzCwF,EAAK0B,MAAM1B,EAAKR,QAAQkC,OACxB1B,EAAK2B,cAEDnC,EAAQoC,iBACR5B,EAAKP,QAAQoC,OAAOzI,EAAMgB,SAASoF,EAAQoC,gBAAvBxI,CAAwCoG,EAAQsC,mBAI5E9B,EAAK+B,OAAS/B,EAAKgC,SAAW5D,IAC9B4B,EAAKiC,OAASjC,EAAKkC,QAAU9D,IAC7B4B,EAAKmC,YAEDtC,GACAG,EAAKoC,QAAQvC,GAGbL,EAAQ2B,SACRnB,EAAKqC,QAAQ,MAAO7C,EAAQ8C,OAGhCxC,EAAgBL,EAAQ8C,SAAS5H,GAE7B6E,EAAQ2B,SAAW3B,EAAQ8C,OAC3BtC,EAAKwC,SAAS/C,EAAQsB,GAAG1F,IAAUoC,IAAI,CAAEgF,QAAS,KAGtDhD,EACKiD,GAAG,aAAepI,EAAIoC,EAA0BsD,EAAK2C,aAAaC,KAAK5C,IACvE0C,GAAG,aAAepI,EAAIoC,EAA0BsD,EAAK6C,aAAaD,KAAK5C,IACvE0C,GAAG,QAAUpI,EAAI,KAAOoC,EAA0BsD,EAAK8C,qBAAqBF,KAAK5C,IACjF0C,GAAG,UAAYpI,EAAI0F,EAAMA,EAAK+C,SAASH,KAAK5C,IAC5C0C,GAAG,QAAUpI,EAAI0F,EAAKgD,OAAOJ,KAAK5C,IAClC0C,GAAG,OAASpI,EAAI0F,EAAKiD,MAAML,KAAK5C,IAErCF,EACK4C,GAAG,UAAYpI,EAAI0F,EAAMA,EAAKkD,gBAAgBN,KAAK5C,IAE1CF,EAAcc,KAAK,IAAM7F,GAAe,KAElCgF,EAAaoD,KAAKvG,KAElCmD,EAAa2C,GAAG,OAASpI,GAAI,WACzB,IAAIgD,EAAUrE,EAAE+H,SAASpH,eAAeoF,OAAOrE,GAC3C2C,EAAQ8C,QACahH,EAAMgK,eAAe9F,GAC3B0F,YAIvBjD,EAAa2C,GAAG,QAAUpI,GAAI,WAC1BrB,EAAE0B,GAAgB0I,IAtOb,qBAsOiClJ,MAAK,SAASmJ,EAAGhG,GACnDlE,EAAMgK,eAAenK,EAAEqE,IAAU2F,cAIzClD,EAAaoD,KAAKvG,GAAqB,IAG3C0B,KAAKiF,aAELjF,KAAKkF,aAEDhE,EAAQiE,QAAUnF,KAAKmB,QAAQsB,GAAG,aAClCf,EAAK0D,OAGT/K,EAAK2E,EAAQkE,KAAK,SAEd7I,GAAU,aACV8G,EAAQ+B,KAAK,CACLmC,KAAQ,SACR,kBAAmBhL,IACpB4J,SAAS7H,GACX6H,SAAS9H,GACT+G,KAAK,KAAM7I,IAGpB8G,EAAQmE,IAAInE,EAAQ8C,SAAS,oBAAsB7H,IAC9CgI,GAAGtJ,EAAMyK,QAAQC,UAAYxJ,EAAI0F,EAAKqC,QAAQO,KAAK5C,IAExDA,EAAK+D,cAAgB3K,EAAM2K,cAAczG,GAEzC0C,EAAKgE,eAAiBhE,EAAKiE,kBAAkBrB,KAAK5C,GAElDA,EAAKkE,QAAU9K,EAAM+K,OAAOC,UAAU,EAAG,GAEzCnL,EAAEI,QAAQqJ,GAAG,SAAWpI,EAAK0F,EAAKkE,QAASlE,EAAKgE,gBAE5CxE,EAAQ2B,UACRnB,EAAKqE,QAAQ7I,GACbwE,EAAKqE,QAAQ5I,IAGjBrC,EAAMkL,OAAOtE,GAET1B,KAAKkB,QAAQ8C,QACbhE,KAAKiG,YAAc,IAAI/K,EAAWiG,GAClCnB,KAAKiG,YAAYC,OACjBlG,KAAKiG,YAAYE,WAAa,WAC1B,OAAOhF,EAAQ0D,KAAK,cAKhCR,aAAc,SAAS+B,GACnBzL,EAAEyL,EAAEC,eAAerD,SAASrG,IAGhC4H,aAAc,SAAS6B,GACnBzL,EAAEyL,EAAEC,eAAeC,YAAY3J,IAGnC+H,OAAQ,WACJ1E,KAAKmB,QAAQ6B,SAASpG,IAG1B+H,MAAO,WACH3E,KAAKmB,QAAQmF,YAAY1J,IAG7ByG,YAAa,WACT,IAAIlC,EAAUnB,KAAKmB,QACfD,EAAUlB,KAAKkB,QACfqF,EAAQrF,EAAQqF,MAChBC,EAAStF,EAAQsF,OACjBC,EAAYvF,EAAQuF,UACpBC,EAAYxF,EAAQyF,KACpBC,EAAa,CAAC,WAAW,YAAY,WAAW,aAChDC,EAAgD,eAA7B1F,EAAQhC,IAAI,cAE/B2H,EAAgBD,EAAmB9H,GAAMoC,EAAS,qBAAuBpC,GAAMoC,EAAS,sBAAwB,EAChH4F,EAAgBF,EAAmB9H,GAAMoC,EAAS,oBAAsBpC,GAAMoC,EAAS,uBAAyB,EAChH6F,EAAaH,EAAmB9H,GAAMoC,EAAS,eAAiB,EAEhEnB,KAAKkC,cAAgBlC,KAAKiH,YAC1BjH,KAAKkH,oBACLhG,EAAQuF,UAAY9G,KAAKE,IAAIG,KAAKkC,YAAYsE,QAAUO,EAAgBC,GAAaP,GACrFvF,EAAQiG,SAAWxH,KAAKE,IAAIG,KAAKkC,YAAYqE,MAAQO,EAAe5F,EAAQiG,WAGhF,IAAK,IAAInC,EAAI,EAAGA,EAAI4B,EAAW9E,OAAQkD,IAAK,CACxC,IAAI3F,EAAQ6B,EAAQ0F,EAAW5B,KAAO,GAClC3F,GAASS,KACTqB,EAAQhC,IAAIyH,EAAW5B,GAAI3F,GAI/BoH,GAAa3G,KACbE,KAAKhB,QAAQG,IAAI,YAAasH,GAG9BF,EACApF,EAAQ3F,WAAW4D,GAAUmH,EAAOrF,EAAQkG,SAAUlG,EAAQiG,WAG9DhG,EAAQ3F,WAAW,IAGnBgL,EACArF,EAAQzF,YAAY0D,GAAUoH,EAAQtF,EAAQmG,UAAWnG,EAAQuF,YAGjEtF,EAAQzF,YAAY,IAGnBwF,EAAQ2B,SACT1B,EAAQmF,YAAYxJ,GAAawK,OAGjCZ,GAAajI,GAAKiI,IAClBvF,EAAQ6B,SAASvE,GAAKiI,KAI9B7C,UAAW,WACP,IAEI0D,EAAgBC,EAFhBrG,EAAUnB,KAAKmB,QACfG,EAAWtB,KAAKkB,QAAQI,SAG5BtB,KAAKkH,oBAEDlH,KAAKkC,cACLZ,EAAShB,IAAMgB,EAAShB,KAAO,EAC/BgB,EAASd,KAAOc,EAASd,MAAQ,EAEjC+G,EAAiBjG,EAAShB,IAAIb,WAAWC,QAAQ,KAAO,EACpDR,SAASc,KAAKkC,YAAYsE,QAAUiB,WAAWnG,EAAShB,KAAO,KAAM,IACrEgB,EAAShB,IAEbkH,EAAkBlG,EAASd,KAAKf,WAAWC,QAAQ,KAAO,EACtDR,SAASc,KAAKkC,YAAYqE,OAASkB,WAAWnG,EAASd,MAAQ,KAAM,IACrEc,EAASd,KAEbc,EAAShB,IAAMlB,GAAUmI,EAAgBvH,KAAKyD,OAAQzD,KAAK2D,QAC3DrC,EAASd,KAAOpB,GAAUoI,EAAiBxH,KAAK0D,QAAS1D,KAAK4D,UAG9DtC,EAAShB,KAAOgB,EAAShB,IAAIb,WAAWC,QAAQ,MAAQ,IACxD4B,EAAShB,IAAMoH,OAAOpG,EAAShB,IAAIqH,QAAQ,KAAM,MAGjDrG,EAASd,MAAQc,EAASd,KAAKf,WAAWC,QAAQ,MAAQ,IAC1D4B,EAASd,KAAOkH,OAAOpG,EAASd,KAAKmH,QAAQ,KAAM,MAGlC,IAAjBrG,EAAShB,MACTgB,EAAShB,IAAMgB,EAAShB,IAAIb,YAGV,IAAlB6B,EAASd,OACTc,EAASd,KAAOc,EAASd,KAAKf,YAGlC0B,EAAQhC,IAAI,CACRmB,IAAKgB,EAAShB,KAAO,GACrBE,KAAMc,EAASd,MAAQ,MAI/B0G,kBAAmB,WACf,IAAIhF,EAAclC,KAAKkC,YAEvB,IAAKA,EACD,OAAO,KAGXA,EAAYqE,MAAQrE,EAAY0F,aAChC1F,EAAYsE,OAAStE,EAAY2F,cAE7B3I,SAASgD,EAAYqE,MAAO,IAAMrE,EAAY,GAAG4F,cACjD5F,EAAYqE,OAASzL,EAAMyK,QAAQwC,aAGnC7I,SAASgD,EAAYsE,OAAQ,IAAMtE,EAAY,GAAG8F,eAClD9F,EAAYsE,QAAU1L,EAAMyK,QAAQwC,aAGxC7F,EAAYZ,SAAWnB,GAAY+B,EAAY,IAE3ClC,KAAKiH,WACLjH,KAAKyD,OAASzD,KAAK0D,SAAW5D,IAC9BE,KAAK2D,OAAS3D,KAAK4D,QAAU9D,MAE7BE,KAAKyD,OAASvB,EAAYpB,YAC1Bd,KAAK0D,QAAUxB,EAAYnB,aAC3Bf,KAAK4D,QAAU5D,KAAK0D,QAAUxB,EAAYqE,MAAQ/K,EAAWwE,KAAKmB,SAAS,GAC3EnB,KAAK2D,OAAS3D,KAAKyD,OAASvB,EAAYsE,OAAS9K,EAAYsE,KAAKmB,SAAS,KAInF8G,kBAAmB,SAAS5N,GACxB,IAAI6N,EAAYlI,KAAKkB,QAAQgH,UAM7B,OAAOA,GAAaA,EAAU7N,IALT,CACjB8N,KAAM,CAAEC,QAAS,IACjBC,MAAO,CAAEf,MAAM,EAAMc,QAAS,KAGkB/N,IAGxDiO,QAAS,WACLxN,EAAMyN,OAAOvI,KAAKhB,QAAQiF,aAG9BgB,WAAY,WACR,IAAIuD,EAAYxI,KAAKkB,QAAQsH,UACzBrH,EAAUnB,KAAKmB,QAEfnB,KAAKyI,WACLtH,EACKuH,IAAI,WAAa1M,GACjBiI,SAAS3H,GAAsBkG,SAEpCxC,KAAKyI,SAASE,UACd3I,KAAKyI,SAAW,MAGhBD,IACArH,EAAQiD,GAAG,WAAapI,EAAII,EAAiB,SAAUgK,GAC9CzL,EAAEyL,EAAEwC,QAAQ9F,QAAQ,6BAA6BhB,QAClD9B,KAAK6I,sBAEVvE,KAAKtE,OAERnE,EAAK,sBAAsBiN,MAAM,MAAM,SAASC,EAAOC,GACnD7H,EAAQoC,OAAO1I,EAAUoO,aAAaD,OAG1ChJ,KAAKyI,SAAW,IAAIS,GAAelJ,OAGvCmB,EAAU,MAGd+D,WAAY,WACR,IAAI/C,EAAYnC,KAAKkB,QAAQiB,UAEzBnC,KAAKmJ,WACLnJ,KAAKmJ,SAASR,UACd3I,KAAKmJ,SAAW,MAEhBhH,IACAnC,KAAKmJ,SAAW,IAAIC,GAAepJ,KAAMmC,EAAUkH,YAAcjN,EAAiB+F,EAAUmH,kBAIpGC,SAAU,WACN,IAWIC,EAXAtI,EAAUlB,KAAKkB,QACfW,EAAUX,EAAQW,QAClBsD,EAASjE,EAAQiE,OAEjBsE,EADWzJ,KAAKmB,QAAQ8C,SAAS7H,GACZkG,KAAK,8BAC1BoH,EAAyB,CAAE,WAAY,YACvCC,EAAQ,CACRC,SAAY,SACZ9F,QAAW,kBACX+F,OAAU,QAIdhI,EAAUlH,EAAEmP,IAAIjI,GAAS,SAASkI,GAG9B,OAFAA,EAAS5E,GAAmC,QAAzB4E,EAAO7J,cAA0B,QAAU6J,EAC9DP,EAAOG,EAAMI,EAAO7J,gBAAkB,GAC/B,CAAE5F,KAAOoP,EAAuBhK,QAAQqK,EAAO7J,gBAAmB,EAAK,UAAY6J,EAASA,EAAQP,KAA8B,SAAxBO,EAAO7J,cAA2B,IAAMsJ,MAG7JC,EAAUO,KAAKlP,EAAMmP,OAAOpP,EAAUkP,OAAQlI,KAGlDqI,WAAY,SAAShJ,GACjB,IAAIQ,EAAO1B,KACP0G,EAAYhF,EAAKR,QAAQyF,KACzBwD,EAAMnK,KAAKkC,cAAgBR,EAAKuF,UAAYjH,KAAKkC,YAAcvH,EAAE+H,UAEjE0H,EAAgBC,KAAKC,MAAMD,KAAKE,UAAUrJ,IAE9CQ,EAAKP,QAAQmF,YAAYxL,EAAMmI,iBAAiB,YAAa,aAAcvB,EAAKR,QAAQ6B,aAExFnH,EAAOsF,EAAQI,SAAUI,EAAKR,QAAQI,UACtC1F,EAAOsF,EAAQI,SAAU8I,EAAc9I,UAEvCI,EAAK8I,oBAAsBL,EAAIrJ,YAC/BY,EAAK+I,qBAAuBN,EAAIpJ,aAEhC/F,EAAO+G,GAAGmI,WAAWlI,KAAKN,EAAMR,GAChC,IAAIwJ,GAAyC,IAA5BhJ,EAAKR,QAAQwJ,WAoB9B,GAlBAhJ,EAAKiJ,eAEwB,IAAlBzJ,EAAQkC,OACf1B,EAAK0B,MAAMlC,EAAQkC,OAGvB1B,EAAKP,QAAQmF,YAAY7H,GAAKiI,IAC9BhF,EAAK2B,cAEL3B,EAAKmC,YACLnC,EAAKuD,aACLvD,EAAKwD,aACLxD,EAAK6H,WAED7H,EAAKR,QAAQ6B,YAA0C,SAA5BrB,EAAKR,QAAQ6B,YACxCrB,EAAKP,QAAQ6B,SAASlI,EAAMmI,iBAAiB,YAAa,aAAcvB,EAAKR,QAAQ6B,kBAG5D,IAAlB7B,EAAQ8C,MAAuB,CACtC,IAAInB,GAAmC,IAAzBnB,EAAKR,QAAQ2B,QAC3BnB,EAAKkJ,2BACLlJ,EAAKwC,SAAShD,EAAQ8C,OAASnB,GAGnCnB,EAAK1C,QAAQG,IAAItB,EAAU6M,EAAa,GAAK,WAGjDG,OAAQ,CACJ3N,EACAC,EACAC,EACAC,EA1hBO,WACA,WA4hBPC,EACAK,EACAJ,EA5hBK,SA8hBLC,EACAC,EACAC,EA3hBW,eA6hBXE,GAGJsD,QAAS,CACL5G,KAAM,SACN4N,UAAW,CACPC,KAAM,CACFC,QAAS,CAAE0C,KAAM,CAAEC,UAAW,MAAQC,KAAM,CAAED,UAAW,OACzDE,SAAU,KAEd5C,MAAO,CACHD,QAAS,CAAE0C,KAAM,CAAEC,UAAW,MAAOG,WAAY,CAAEC,MAAO,KAASH,KAAM,CAAED,UAAW,QACtFE,SAAU,IACV3D,MAAM,IAGdlE,MAAO,GACPL,WAAY,GACZlB,QAAS,CAAC,SACVuJ,WAAW,EACXpH,OAAO,EACP2C,KAAM,OACN6B,WAAW,EACXrG,WAAW,EACXiF,SAAU,GACVC,UAAW,GACXF,SAAUrH,IACV2G,UAAW3G,IACXqF,QAAQ,EACRuF,YAAY,EACZpJ,SAAU,GACVC,QAAS,KACTsB,QAAS,KACT2D,OAAQ,KACRD,MAAO,KACPtE,SAAU,OACVoJ,aAAa,EACbC,aAAa,GAGjBC,UAAW,WACP,OAAO5Q,EAAE6Q,QAAQ,QAAS7Q,EAAEmP,IAAI9J,KAAKkB,QAAQW,SAAS,SAAS/C,GAAK,OAAOA,EAAEoB,mBAAsB,GAGvG0E,gBAAiB,SAASwB,GACtB,IACIqF,EAAO3Q,EAAM2Q,KACHrF,EAAEsF,SAEDD,EAAKE,KAJT3L,KAIqBuL,cAC5BnF,EAAEwF,kBALK5L,KAMF6L,QAAO,KAIpBpH,SAAU,SAAS2B,GACf,IAKIzE,EAAQmK,EAIRC,EAAUC,EAAWC,EAAGC,EATxBxK,EAAO1B,KACPkB,EAAUQ,EAAKR,QACfuK,EAAO3Q,EAAM2Q,KACbC,EAAUtF,EAAEsF,QACZvK,EAAUO,EAAKP,QAEfgL,EAAW,GACXd,EAAcnK,EAAQmK,YACtBC,EAAcpK,EAAQoK,YAGtBI,GAAWD,EAAKE,KAAOjK,EAAK6J,cAC5BnF,EAAEwF,kBACFlK,EAAKmK,QAAO,IAGZzF,EAAEwC,QAAUxC,EAAEC,eAAiB3E,EAAK0K,WAKpChG,EAAEiG,QAAqB,IAAXX,GACZhK,EAAKoC,UAILsC,EAAEiG,QAAqB,IAAXX,IACRhK,EAAKR,QAAQiE,OACbzD,EAAK4K,QAEL5K,EAAK0D,OAKTgB,EAAEiG,QAAUX,GAAWD,EAAKc,GACxBjB,GACA5J,EAAKiJ,UACLjJ,EAAKP,QAAQ4E,QAAQ,UACbsF,IACR3J,EAAKkI,WACLlI,EAAKP,QAAQ4E,QAAQ,UAElBK,EAAEiG,QAAUX,GAAWD,EAAKe,OAC9BlB,GAAgBD,EAGVA,IACP3J,EAAKiJ,UACLjJ,EAAKP,QAAQ4E,QAAQ,WAJrBrE,EAAK+K,WACL/K,EAAKP,QAAQ4E,QAAQ,WAO7BpE,EAAS7G,EAAM4R,UAAUvL,GAErBO,EAAKQ,cAAgBR,EAAKuF,YAC1BtF,EAASD,EAAKR,QAAQI,WAGtBJ,EAAQiB,WAAciE,EAAEuG,SAAYvG,EAAEiG,QAAWhB,IACjD3J,EAAKwF,oBACDwE,GAAWD,EAAKc,IAChB5K,EAAOrB,IAAMlB,GAAUuC,EAAOrB,IAAM6L,EAAUzK,EAAK+B,OAAQ/B,EAAKiC,QAChEmI,EAAU3K,EAAQhC,IAAI,MAAOwC,EAAOrB,MAC7BoL,GAAWD,EAAKe,MACvB7K,EAAOrB,IAAMlB,GAAUuC,EAAOrB,IAAM6L,EAAUzK,EAAK+B,OAAQ/B,EAAKiC,QAChEmI,EAAU3K,EAAQhC,IAAI,MAAOwC,EAAOrB,MAC7BoL,GAAWD,EAAKmB,MACvBjL,EAAOnB,KAAOpB,GAAUuC,EAAOnB,KAAO2L,EAAUzK,EAAKgC,QAAShC,EAAKkC,SACnEkI,EAAU3K,EAAQhC,IAAI,OAAQwC,EAAOnB,OAC9BkL,GAAWD,EAAKoB,QACvBlL,EAAOnB,KAAOpB,GAAUuC,EAAOnB,KAAO2L,EAAUzK,EAAKgC,QAAShC,EAAKkC,SACnEkI,EAAU3K,EAAQhC,IAAI,OAAQwC,EAAOnB,QAIzCU,EAAQsH,WAAapC,EAAEuG,UAAYtB,IAAgBC,IAC/CI,GAAWD,EAAKc,IAChBT,GAAU,EACVE,EAAY7K,EAAQzF,cAAgByQ,GAC7BT,GAAWD,EAAKe,OACvBV,GAAU,EAENE,EADAtK,EAAKQ,cAAgBR,EAAKuF,UACdtH,KAAKE,IAAIsB,EAAQzF,cAAgByQ,EACzCzK,EAAKQ,YAAYsE,OAAS7E,EAAOrB,IAAMvB,GAAMoC,EAAS,eACtDpC,GAAMoC,EAAS,qBAAuBpC,GAAMoC,EAAS,mBAE7CA,EAAQzF,cAAgByQ,GAEtCT,GAAWD,EAAKmB,MAClBd,GAAU,EACVC,EAAW5K,EAAQ3F,aAAe2Q,GAC3BT,GAAWD,EAAKoB,QACvBf,GAAU,EAENC,EADArK,EAAKQ,cAAgBR,EAAKuF,UACftH,KAAKE,IAAIsB,EAAQ3F,aAAe2Q,EACvBzK,EAAKQ,YAAYqE,MAAQ5E,EAAOnB,KAChCzB,GAAMoC,EAAS,mBAAqBpC,GAAMoC,EAAS,qBAE5DA,EAAQ3F,aAAe2Q,GAItCL,IACAG,EAAI7M,GAAU2M,EAAU7K,EAAQkG,SAAUlG,EAAQiG,UAClD+E,EAAI9M,GAAU4M,EAAW9K,EAAQmG,UAAWnG,EAAQuF,WAE/CjH,MAAMyM,KACP9K,EAAQ3F,WAAWyQ,GACnBvK,EAAKR,QAAQqF,MAAQ0F,EAAI,MAExBzM,MAAM0M,KACP/K,EAAQzF,YAAYwQ,GACpBxK,EAAKR,QAAQsF,OAAS0F,EAAI,MAG9BxK,EAAK6G,WAITuD,GACA1F,EAAE0G,mBAIV5I,SAAU,SAASrB,GACf,IAAIkK,EAAU/M,KAAKkC,YAAclC,KAAKkC,YAAY+B,SAAS1H,GAAYyD,KAAKiC,SAASgC,SAAS1H,GAC1F4E,EAAUnB,KAAKmB,QACfE,EAAUwB,EAAU,cAAgB,OACpCmK,EAAS9N,SAASiC,EAAQhC,IAAIpB,GAAS,IAAM,EAiBjD,OAfKgP,EAAQjL,SACTiL,EAAUpS,EAAE,8BAGhBoS,EACKE,aAAa9L,EAAQ,IACrBhC,IAAI,CACD6N,OAAQA,EACR3L,QAASA,IAGbrB,KAAKkB,QAAQ8C,MAAMkJ,gBAAkBlN,KAAKkC,aAC1ClC,KAAKmN,yBAGFJ,GAGXK,eAAgB,SAAS5D,GAErB,MAAO,CACH1K,EAAK,SACL/D,OAAU,WACV,kBAAmB,WACnB,iBAAkB,UAClB,kBAAmB,UACnBqK,IAAO,MACPkH,MAAS,SARG,wBAAwBe,KAAK7D,EAAK,GAAG8D,WAAW,GASpD3F,QAAQ,kBAAmB,MAG3CnD,qBAAsB,SAAS4B,GAC3B,IAAIpG,KAAKoM,SAAT,CAGA,IAAI5C,EAAO7O,EAAEyL,EAAEwC,QAAQ9F,QAAQ,6BAA6BR,KAAK,uBAC7DyH,EAAS/J,KAAKoN,eAAe5D,GAEjC,OAAIO,GACA3D,EAAE0G,iBACF9M,KAAK+J,MACE,QAHX,IAOJwD,QAAS,WAML,IALA,IAEIC,EAFA9L,EAAO1B,KACPyN,EAAiB9S,EAAEuB,EAAUa,GAE7B2Q,EAAS,GAEJ1I,EAAI,EAAGA,EAAIyI,EAAe3L,OAAQkD,GAAK,GAC5CwI,EAAiB9L,EAAKiM,QAAQhT,EAAE8S,EAAezI,OAG3CwI,EAAetM,SACfsM,EAAetM,QAAQ8C,OACvBwJ,EAAetM,QAAQ2B,SACvB2K,EAAetM,QAAQe,WAAaP,EAAKR,QAAQe,YAC/CuL,EAAetL,aAAgBR,EAAKQ,aAAesL,EAAetL,YAAY,KAAOR,EAAKQ,YAAY,KACpGwL,EAAOE,KAAKJ,EAAerM,QAAQ,IAU/C,OANAuM,EAAOG,MAAK,SAASC,EAAGC,GACpB,OAAOD,EAAEE,MAAMhB,OAASe,EAAEC,MAAMhB,UAGpCtL,EAAO,KAEA/G,EAAE+S,IAGbC,QAAS,SAAS3O,GACd,IAAIuC,EAAUvC,EAAQiF,SAAS5H,GAC3B4R,EAASnT,EAAMgK,eAAevD,GAElC,OAAI0M,GAIGrT,GAGXsT,OAAQ,WACJ,IAMIC,EAAQC,EANR1M,EAAO1B,KACPsB,EAAWI,EAAKR,QAAQI,SACxBH,EAAUO,EAAKP,QACfkN,EAAiB1T,EAAEI,QACnB+F,EAAY,EACZC,EAAa,EAGjB,OAAIW,EAAKR,QAAQmK,cAIb3J,EAAKR,QAAQiE,SAAWzD,EAAKuF,WAC7BvF,EAAK0D,MAGJ1D,EAAKR,QAAQiE,SACdrE,EAAYuN,EAAevN,YAC3BC,EAAasN,EAAetN,cAG5Bf,KAAKkC,cAAgBR,EAAKR,QAAQiE,QAClCgJ,EAASnO,KAAKyD,QAAUzD,KAAK2D,OAAS3D,KAAKyD,QAAU,EACrD2K,EAAUpO,KAAK0D,SAAW1D,KAAK4D,QAAU5D,KAAK0D,SAAW,IAEzDhC,EAAK4M,mBAAoB,EACzBF,EAAUrN,EAAapB,KAAKC,IAAI,GAAIyO,EAAe9H,QAAUpF,EAAQ3F,cAAgB,GACrF2S,EAASrN,EAAYnB,KAAKC,IAAI,GAAIyO,EAAe7H,SAAWrF,EAAQzF,cAAgBqD,GAAMoC,EAAS,eAAiB,IAGxHA,EAAQhC,IAAI,CACRqB,KAAM4N,EACN9N,IAAK6N,IAGT7M,EAAShB,IAAM6N,EACf7M,EAASd,KAAO4N,GA3BL1M,GAgCf0B,MAAO,SAASA,GACZ,IACI/D,EADAqC,EAAO1B,KAEPuO,GAAU,EACVpN,EAAUO,EAAKP,QACfqN,EAAWrN,EAAQ8C,SAAS7H,GAC5BqS,EAAeD,EAASvK,SAAS9H,GAErC,OAAKuS,UAAU5M,QAIXnH,EAAEU,cAAc+H,IAChB/D,OAA8B,IAAf+D,EAAMuL,KAAuBvL,EAAMuL,KAAO,GACzDJ,GAA4B,IAAlBnL,EAAMmL,SAEhBlP,EAAQ+D,GAGE,IAAV/D,GACA8B,EAAQ6B,SAAS,sBACjB7B,EAAQhC,IAAI,cAAe,GAC3BqP,EAAShM,UAEJgM,EAAS1M,OAOV2M,EAAazE,KAAKuE,EAAUzT,EAAM8T,WAAWvP,GAASA,IANtD8B,EAAQ0N,QAAQhU,EAAUiU,SAAS,CAC/B1L,MAAOmL,EAAUzT,EAAM8T,WAAWvP,GAASA,KAE/CqC,EAAK6H,WACLiF,EAAWrN,EAAQ8C,SAAS7H,IAMpCsF,EAAKR,QAAQkC,MAAQ/D,EAEdqC,GA5BI+M,EAAazE,QA+B5BzI,QAAS,SAASyI,EAAMnF,GACpB,IAAItD,EAAUvB,KAAKmB,QAAQ8C,SAAS5H,GAChC0S,EAAkBxN,EAAQ0C,SAAS,wBAIvC,OAFA1C,EAAUwN,EAAgB,GAAKA,EAAkBxN,EAE5C1C,GAAQmL,IAIbhK,KAAKgP,QAAQ,WAAW,WACpB,MAAO,CAAEC,SAAU1N,EAAQ0C,eAG/BnJ,EAAM6N,QAAQ3I,KAAKhB,QAAQiF,YAE3B1C,EAAQ2N,QAAQlF,KAAKA,GAErBhK,KAAKgP,QAAQ,WAAW,WAEpB,IADA,IAAIlB,EAAI,GACC9I,EAAIzD,EAAQO,SAAUkD,GAAK,GAChC8I,EAAEF,KAAK,CAAEuB,SAAUtK,IAEvB,MAAO,CACHoK,SAAU1N,EAAQ0C,WAClBY,KAAMiJ,MAIP9N,MAtBIuB,EAAQyI,QAyBvB7B,KAAM,WACF,IAKI4E,EAASqC,EALT1N,EAAO1B,KACPmB,EAAUO,EAAKP,QACfD,EAAUQ,EAAKR,QACfmO,EAAcrP,KAAKiI,kBAAkB,QACrCqH,EAAiBnO,EAAQ8C,SAAS5H,GAGlC8N,EADqBnK,KAAKkC,cAAgBR,EAAKuF,UACpBjH,KAAKkC,YAAcvH,EAAE+H,UAEpD,IAAKhB,EAAKqE,QAAQ7I,GAAO,CAerB,GAdIwE,EAAK0K,UACLjL,EAAQoO,WAAU,GAAM,GAG5B7N,EAAK0K,UAAW,EAEhB1K,EAAKqC,UAED7C,EAAQkK,WACR1J,EAAKP,QAAQ4E,QAAQ,SAGzB7E,EAAQ2B,SAAU,EAEd3B,EAAQ8C,MAAO,CAMf,GALAoL,IAAuB1N,EAAK6L,UAAUzL,QACtCiL,EAAUrL,EAAKwC,SAASkL,IAEhBG,WAAU,GAAM,GAEpBF,EAAYpE,UAAYnQ,EAAMsN,QAAQoH,OAASJ,EAAoB,CACnE,IAAIK,EAAY3U,EAAM4U,GAAG3C,GAAS4C,SAClCF,EAAUxE,SAASoE,EAAYpE,UAAY,GAC3CwE,EAAUG,SAAS,IACnBH,EAAUI,YAEV9C,EAAQ5N,IAAI,UAAW,IAG3B4N,EAAQ+C,OAERnV,EAAEI,QAAQqJ,GAAG,QAAUnI,GAAU,WACzBkF,EAAQ0D,KAAK,aAAelK,EAAE+H,SAASpH,eAAewH,QAAQ3B,GAASW,QACxEJ,EAAKP,QAAQ4E,QAAQ,YAK3B5E,EAAQsB,GAAG1F,KACZuS,EAAenQ,IAAItB,EAAUb,GAE7B0E,EAAKP,QAAQmB,KAAKlE,GAA0B4E,SAAS,iBAErD7B,EAAQhC,IAAI,CAAEkC,QAAS,gBACvBF,EAAQoO,YAAYQ,aAAa,CAC7B3H,QAASiH,EAAYjH,QACrB6C,SAAUoE,EAAYpE,SACtB+E,SAAUhQ,KAAKiQ,UAAU3L,KAAKtE,SAe1C,OAVIkB,EAAQmK,cACR3J,EAAK8I,oBAAsBL,EAAIrJ,YAC/BY,EAAK+I,qBAAuBN,EAAIpJ,aAChCW,EAAKyL,0BAGLnN,KAAKkB,QAAQiE,SAAWnF,KAAKiH,WAC7BjH,KAAKoF,MAGF1D,GAGXuO,UAAW,WACP,IAAIvF,GAAyC,IAA5B1K,KAAKkB,QAAQwJ,WAE1B1K,KAAKkB,QAAQkK,WACbpL,KAAKmB,QAAQ4E,QAAQ,SAGzB/F,KAAKhB,QAAQG,IAAItB,EAAU6M,EAAa,GAAK,UAC7C5P,EAAMyN,OAAOvI,KAAKhB,QAAQiF,YAE1BjE,KAAK+F,QAAQ5I,IAGjB+S,eAAgB,SAASC,GACrB,IAAIzC,EAAS1N,KAAKuN,UACdrM,EAAUlB,KAAKkB,QACfkP,EAAclP,EAAQ8C,QAAU0J,EAAO5L,OACvCuO,EAAcrQ,KAAKiI,kBAAkB,SAEzC,GAAImI,EAAa,CACb,IAAKD,GAAqBE,EAAYpF,UAAYnQ,EAAMsN,QAAQoH,KAAM,CAClE,IAAIC,EAAY3U,EAAM4U,GAAGxO,EAAQ8C,MAAQhE,KAAKkE,UAAS,GAAQvJ,EAAEC,IAAc0V,UAC/Eb,EAAUxE,SAASoF,EAAYpF,UAAY,GAC3CwE,EAAUc,WAAW,IACrBd,EAAUI,YAEV7P,KAAKkE,UAAS,GAAO1B,SAErBtB,EAAQ8C,MAAMkJ,eACdlN,KAAK4K,gCAEF8C,EAAO5L,SACd9B,KAAK2N,QAAQD,EAAO8C,QAAQtM,UAAS,GAEjChD,EAAQ8C,MAAMkJ,eACdlN,KAAKmN,2BAKjBtB,OAAQ,SAAS4E,GACb,IAOIC,EAPAhP,EAAO1B,KACPmB,EAAUO,EAAKP,QACfD,EAAUQ,EAAKR,QACfmO,EAAcrP,KAAKiI,kBAAkB,QACrCoI,EAAcrQ,KAAKiI,kBAAkB,SAErCkC,EADqBnK,KAAKkC,cAAgBR,EAAKuF,UACpBjH,KAAKkC,YAAcvH,EAAE+H,UAGhDhB,EAAK0K,WAITsE,EAAmBhP,EAAKqE,QAAQ1I,EAAO,CAAEsT,eAAgBF,IACzD/O,EAAK0K,UAAYsE,EAEbvP,EAAQsB,GAAG1F,KAAa2T,IACxBxP,EAAQ2B,SAAU,EAElBlI,EAAEuB,GAASL,MAAK,SAASmJ,EAAGhG,GACxB,IAAIsQ,EAAiB3U,EAAEqE,GAASiF,SAAS5H,GAGrC2C,GAAWmC,GAAWmO,EAAehN,KAAK,MAAQ7F,GAAeqF,OAAS,GAC1EwN,EAAerL,SAAS1H,GAAUiG,YAI1CxC,KAAKkQ,iBAGLxO,EAAKP,QAAQmB,KAAKlE,GAA0BkI,YAAY,iBAExDnF,EAAQoO,YAAYQ,aAAa,CAC7B3H,QAASiI,EAAYjI,SAAWiH,EAAYjH,QAC5CwI,SAAiC,IAAxBP,EAAYO,QACrB3F,SAAUoF,EAAYpF,SACtB+E,SAAUhQ,KAAK6Q,YAAYvM,KAAKtE,QAEpCrF,EAAEI,QAAQ2N,IAAIzM,IAGdyF,EAAKR,QAAQmK,cACb3J,EAAKkJ,2BACDlJ,EAAK8I,qBAAuB9I,EAAK8I,oBAAsB,GACvDL,EAAIrJ,UAAUY,EAAK8I,qBAEnB9I,EAAK+I,sBAAwB/I,EAAK+I,qBAAuB,GACzDN,EAAIpJ,WAAWW,EAAK+I,uBAIxB/I,EAAKR,QAAQ4P,QACbpP,EAAKP,QAAQ4E,QAAQ,UAI7B8K,YAAa,WACT,IAAInP,EAAO1B,KASX,GAPA0B,EAAKP,QACAmF,YAAYxJ,GACZwK,OACAnI,IAAI,UAAW,IAEpBuC,EAAKqE,QAAQ3I,GAETsE,EAAKR,QAAQ8C,MAAO,CACpB,IAAI+M,EAAYrP,EAAKiM,QAAQjM,EAAK6L,UAAUiD,QACxCO,GACAA,EAAUhN,YAKtBsE,MAAO,WAEH,OADArI,KAAK6L,QAAO,GACL7L,MAGXgR,YAAa,SAAShS,GAClB,OAAOrE,EAAEqE,GAASyD,GAAG,GAAGrE,yFAG5B6S,aAAc,SAASrI,GACnB,IAAIsI,EAAS5V,IACT0D,EAAUgB,KAAKmB,QAEnB,OAAOnB,KAAKkB,QAAQkK,YACfzQ,EAAEuW,GAAQzO,GAAGzD,KACbgB,KAAKgR,YAAYpI,MAChB5J,EAAQsD,KAAK4O,GAAQpP,SAAW9C,EAAQsD,KAAKsG,GAAQ9G,SAG/DiC,QAAS,SAASqC,EAAG+K,GACjB,IAAIzP,EAAO1B,KACPmB,EAAUO,EAAKP,QACfiQ,EAAgBjQ,EAAQ,GACxBkQ,EAAqB3P,EAAKQ,cAAgBR,EAAKuF,UAC/CqK,EAAgBtR,KAAKiI,kBAAkB,QACvC+E,GAAU7L,EAAQhC,IAAIpB,GACtBwT,EAAiBvE,EACjBpE,EAAUxC,GAAKA,EAAEwC,QAAW,KA2BhC,GAzBAjO,EAAEuB,GAASL,MAAK,SAASmJ,EAAGhG,GACxB,IAAIwS,EAAe7W,EAAEqE,GACjByS,EAAYD,EAAarS,IAAIpB,GAC7BuR,EAAiBkC,EAAavN,SAAS5H,GAEtCmD,MAAMiS,KACPzE,EAASrN,KAAKC,KAAK6R,EAAWzE,IAGlC7L,EAAQ0D,KAAK,UAAW7F,GAAWoS,GAI/BpS,GAAWoS,GACX9B,EAAehN,KAAK,IAAM7F,GAAeqF,SACxCwN,EAAehN,KAAK/F,GAAUuF,QAC/BwN,EAAe/L,OAAO1I,EAAUkS,cAInC5L,EAAQ,GAAG6M,MAAMhB,QAAUuE,EAAiBvE,IAC7C7L,EAAQhC,IAAIpB,EAAQiP,EAAS,GAEjCtL,EAAK1C,QAAQsD,KAAK,gBAAgBE,SAE9Bd,EAAKuP,aAAarI,GAAS,CACtBuI,GACDO,YAAW,WACPhQ,EAAKP,QAAQwQ,UACdL,EAAgBA,EAAcrG,SAAW,GAGhD,IAAInK,EAAYuQ,EAAqB3P,EAAKQ,YAAYpB,YAAcnG,EAAEI,QAAQ+F,YAC1E8Q,EAAY1S,SAASiC,EAAQG,WAAWhB,IAAK,KAE5CoB,EAAKR,QAAQiE,QAAUyM,EAAY,GAAKA,EAAY9Q,IACjDA,EAAY,EACZnG,EAAEI,QAAQ+F,UAAU8Q,GAEpBzQ,EAAQhC,IAAI,MAAO2B,IAO/B,OAFAK,EAAU,KAEHO,GAGXmH,mBAAoB,WAChB,OAAI7I,KAAKoM,SACEpM,KAGJA,KAAKA,KAAKkB,QAAQmK,YAAc,UAAY,eAGvDV,QAAS,WACL,IAAIjJ,EAAO1B,KACPkB,EAAUQ,EAAKR,QACfmG,EAAYnG,EAAQmG,UACpBwK,EAAiBnQ,EAAKmQ,eAEtBpI,EAAY/H,EAAKQ,cAAgBR,EAAKuF,UAAYvF,EAAKQ,YAAcvH,EAAE+H,UAE3E,OAAKxB,EAAQmK,aAAgBnK,EAAQoK,aAIjCjE,GAAaA,GAAavH,KAC1B4B,EAAKP,QAAQhC,IAAI,aAAckI,GAG/BwK,IAAmB3Q,EAAQmK,cAC3BwG,EAAerL,OAASpH,GAAUyS,EAAerL,OAAQ9E,EAAKR,QAAQmG,UAAW3F,EAAKR,QAAQuF,WAE1EvF,EAAQI,SAAShB,IAAMpB,SAAS2S,EAAerL,OAAQ,IAAM9E,EAAKiC,SAGlFzC,EAAQI,SAAShB,IAAMlB,GAAU8B,EAAQI,SAAShB,IAAKoB,EAAK+B,OAAQ/B,EAAKiC,OAASzE,SAAS2S,EAAerL,OAAQ,KAElH5K,EAAOiW,EAAgB,CACnBrR,KAAMU,EAAQI,SAASd,KACvBF,IAAKY,EAAQI,SAAShB,QAKlCoB,EAAKP,QACAhC,IAAI,CACDmC,SAAUJ,EAAQiE,OAAS,QAAU,WACrC3E,KAAMqR,EAAerR,KACrBF,IAAKuR,EAAevR,IACpBiG,MAAOsL,EAAetL,MACtBC,OAAQqL,EAAerL,SAE1BF,YAAYzJ,GACZyJ,YAAY9J,GACZ8F,KAAK,sCAAsCwN,OAAOgC,MAClDxP,KAAK,qFAAqF5B,SAAS8B,SAASsP,MAAMA,MAClHxP,KAAKtE,GAAgC0C,SAASoP,OAAOgC,MAAMA,MAC3DxP,KAAKnE,GAA4BuC,SAASoP,OAE3C5O,EAAQmK,YACR3J,EAAKP,QAAQmB,KAAK,+BAA+B5B,SAASqF,QAAQ,SAC3D7E,EAAQoK,aACf5J,EAAKP,QAAQmB,KAAK,iDAAiD5B,SAASqF,QAAQ,SAGxFrE,EAAKR,QAAQqF,MAAQsL,EAAetL,MACpC7E,EAAKR,QAAQsF,OAASqL,EAAerL,OAEhC9E,EAAKR,QAAQ8C,MAAMkJ,eACpBxL,EAAKkJ,2BAGLlJ,EAAK8I,qBAAuB9I,EAAK8I,oBAAsB,GACvDf,EAAU3I,UAAUY,EAAK8I,qBAEzB9I,EAAK+I,sBAAwB/I,EAAK+I,qBAAuB,GACzDhB,EAAU1I,WAAWW,EAAK+I,sBAG9BvJ,EAAQmK,YAAcnK,EAAQoK,aAAc,EAE5C5J,EAAKP,QAAQ4Q,WAAW,oBAExBrQ,EAAK6G,SAEL7G,EAAKqE,QAAQpI,GAEN+D,GAjEIA,GAoEfsQ,cAAe,SAASC,EAAUC,GAC9B,IAAIxQ,EAAO1B,KACPmB,EAAUO,EAAKP,QACf6M,EAAQ7M,EAAQ,GAAG6M,MACnB9M,EAAUQ,EAAKR,QAEnB,OAAIA,EAAQmK,aAAenK,EAAQoK,cAInC5J,EAAKmQ,eAAiB,CAClBtL,MAAOyH,EAAMzH,MACbC,OAAQwH,EAAMxH,QAGlBrF,EACK8C,SAAS3H,GAAsBgL,OAAOwK,MACtC7N,SAAS7H,GAAiBkG,KAAKtE,GAAgC0C,SAAS4G,OACxE6K,GAAG,GAAGC,OAAOvX,EAAUkP,OAAO,CAAEzP,KAAM,oBAE3C4X,EAASlQ,KAAKN,GAEdA,EAAKP,QAAQ8C,SAAS7H,GAAiBkG,KAAKnE,GAA4BuC,SAAS2R,OAAoB,aAAbJ,GAExFvQ,EAAKqE,QAAQkM,GAEb9Q,EAAQmB,KAAK,+CAA+C5B,SAASqF,QAAQ,UAnBlErE,GAwBfkI,SAAU,WA+BN,OA9BA5J,KAAKgS,cAAc,YAAY,WAC3B,IAAItQ,EAAO1B,KACPmB,EAAUO,EAAKP,QACfkQ,EAAqBrR,KAAKkC,cAAgBR,EAAKuF,UAC/C3F,EAAWH,EAAQG,WACnB6I,EAAMxP,EAAE+H,UAEZ9G,EAAO8F,EAAKmQ,eAAgB,CACxBrR,KAAMc,EAASd,MAAQ6Q,EAAqBrR,KAAKkC,YAAYnB,aAAe,GAC5ET,IAAKgB,EAAShB,KAAO+Q,EAAqBrR,KAAKkC,YAAYpB,YAAc,KAG7Ed,KAAKwK,oBAAsB6G,EAAqBrR,KAAKkC,YAAYpB,YAAcqJ,EAAIrJ,YACnFd,KAAKyK,qBAAuB4G,EAAqBrR,KAAKkC,YAAYnB,aAAeoJ,EAAIpJ,aAErFW,EAAKyL,yBAELhM,EACKhC,IAAI,CACDmB,IAAK+Q,EAAqBrR,KAAKkC,YAAYpB,YAAc,EACzDN,KAAM6Q,EAAqBrR,KAAKkC,YAAYnB,aAAe,EAC3DO,SAAU+P,EAAqB,WAAa,UAE/CrO,SAASnG,GAEd6E,EAAKR,QAAQmK,aAAc,EAE3B3J,EAAKiE,uBAGF3F,MAGXmN,uBAAwB,WACpB,IAAIzL,EAAO1B,KACPkC,EAAcR,EAAKQ,YAEvB,GAAIA,IAAgBR,EAAKuF,UAOrB,OANAvF,EAAK4Q,mBAAmBpQ,GACxBA,EAAY/C,IAAItB,EAAUb,QAC1B0E,EAAKP,QAAQhC,IAAI,CACbgI,SAAUjF,EAAY0F,aACtBnB,UAAWvE,EAAY2F,gBAK/B,IAAI0K,EAAQ5X,EAAE,QACd+G,EAAK4Q,mBAAmBC,GACxBA,EAAMpT,IAAItB,EAAUb,GAEpB,IAAIwV,EAAQ7X,EAAE,QACd+G,EAAK4Q,mBAAmBE,GACxBA,EAAMrT,IAAItB,EAAUb,IAGxB4N,yBAA0B,WACtB,IAAIlJ,EAAO1B,KACPkC,EAAcR,EAAKQ,YAEvB,GAAIA,IAAgBR,EAAKuF,UAMrB,OALAvF,EAAK+Q,qBAAqBvQ,QAC1BR,EAAKP,QAAQhC,IAAI,CACbgI,SAAUjF,EAAYqE,MACtBE,UAAWvE,EAAYsE,SAK/B9E,EAAK+Q,qBAAqB9X,EAAE+H,SAASC,OACrCjB,EAAK+Q,qBAAqB9X,EAAE,UAGhC2X,mBAAoB,SAASI,GACzB,IAAI1S,KAAK2S,kBAAkBD,GAA3B,CAIA,IAAIE,EAAeF,EAASG,IAAI,GAAG7E,MAAM8E,SAEb,iBAAjBF,GACPF,EAAS7N,KAAK/G,EAAqB8U,KAI3CD,kBAAmB,SAASD,GACxB,MAAqD,iBAAvCA,EAAS7N,KAAK/G,IAGhC2U,qBAAsB,SAASC,GAC3B,IAAIE,EAAeF,EAAS7N,KAAK/G,GAEZ,OAAjB8U,GAAyBA,IAAiBhY,GAC1C8X,EAASvT,IAAItB,EAAU+U,GACvBF,EAASK,WAAWjV,IAEpB4U,EAASvT,IAAItB,EAAU,KAI/BwN,YAAa,WACT,OAAOrL,KAAKkB,QAAQmK,aAGxBoB,SAAU,WAmBN,OAlBAzM,KAAKgS,cAAc,YAAY,WAC3B,IAAItQ,EAAO1B,KAEX0B,EAAKP,QAAQhC,IAAI,CACbqH,OAAQ,GACRa,UAAW,KAGf3F,EAAK1C,QAAQsI,OAEb5F,EAAKR,QAAQoK,aAAc,KAG/BtL,KAAKmB,QAAQ+B,KAAK,mBAAoBlD,KAAKhB,QAAQkE,KAAK,qBACxDlD,KAAKmB,QAAQ6B,SAASxG,GAEtBwD,KAAKkH,oBAEElH,MAGXsL,YAAa,WACT,OAAOtL,KAAKkB,QAAQoK,aAGxBlG,IAAK,WACD,IAAI1D,EAAO1B,KACPgT,EAAMrY,EAAEI,QACRoG,EAAUO,EAAKP,QACfD,EAAUQ,EAAKR,QACfI,EAAWJ,EAAQI,SACnBhB,EAAMN,KAAKkC,YAAc/B,GAAYgB,EAAQ,IAAIb,IAAMvB,GAAMiB,KAAKkC,YAAa,kBAAoBnD,GAAMoC,EAAS,OAClHX,EAAOR,KAAKkC,YAAc/B,GAAYgB,EAAQ,IAAIX,KAAOzB,GAAMiB,KAAKkC,YAAa,mBAAqBnD,GAAMoC,EAAS,QAEzH,IAAKO,EAAKR,QAAQmK,YAAa,CAC3B/J,EAAShB,IAAMA,EACfgB,EAASd,KAAOA,GAEZkB,EAAK4M,mBAAuBtO,KAAKkC,aAAoD,UAArClC,KAAKkC,YAAY/C,IAAI,cAErEmC,EAAShB,KAAO0S,EAAIlS,YACpBQ,EAASd,MAAQwS,EAAIjS,aACrBW,EAAK4M,mBAAoB,GAG7BnN,EAAQhC,IAAIvD,EAAO0F,EAAU,CAAEA,SAAU,WACzC,IAAI2R,EAAU9R,EAAQ8C,SAAS7H,GAAiBkG,KAAKrE,GAAuBkU,GAAG,GAC3Ec,EAAQnR,OAAS,GACjBhH,EAAMG,GAAGuO,KAAKyJ,EAAS,CAAEzJ,KAAM,UAGnC9H,EAAKuF,WAAY,EACjBvF,EAAKR,QAAQiE,QAAS,EAElBnF,KAAKkC,cACLhB,EAAQiG,SAAWjG,EAAQuF,UAAY3G,IACvCqB,EAAQhC,IAAI,CACRgI,SAAU,GACVV,UAAW,QAM3B6F,MAAO,WACH,IAAI5K,EAAO1B,KACPgT,EAAMrY,EAAEI,QACRoG,EAAUO,EAAKP,QACfD,EAAUQ,EAAKR,QACfI,EAAWI,EAAKR,QAAQI,SACxBY,EAAcR,EAAKQ,YACnB5B,EAAMpB,SAASiC,EAAQhC,IAAI,OAAQ,IAAM6T,EAAIlS,YAC7CN,EAAOtB,SAASiC,EAAQhC,IAAI,QAAS,IAAM6T,EAAIjS,aAEnD,IAAKW,EAAKR,QAAQmK,YAAa,CAC3B3J,EAAKuF,WAAY,EACjBvF,EAAK4M,mBAAoB,EACzB5M,EAAKR,QAAQiE,QAAS,EAElBjD,IACAR,EAAKwF,oBAELhG,EAAQiG,SAAWxH,KAAKE,IAAIqC,EAAYqE,MAAOrF,EAAQiG,UACvDjG,EAAQuF,UAAY9G,KAAKE,IAAIqC,EAAYsE,OAASzH,GAAMoC,EAAS,eAAgBD,EAAQuF,WAEzFtF,EAAQhC,IAAI,CACRgI,SAAUjG,EAAQiG,SAClBV,UAAWvF,EAAQuF,YAInBnG,EADAA,EAAM4B,EAAYZ,SAAShB,IACrBoB,EAAK+B,OACJnD,EAAM4B,EAAYZ,SAAShB,IAAM4B,EAAYsE,OAC9C9E,EAAKiC,OAELrD,EAAM4B,EAAYpB,aAAeoB,EAAYZ,SAAShB,IAAMvB,GAAMmD,EAAa,qBAIrF1B,EADAA,EAAO0B,EAAYZ,SAASd,KACrBkB,EAAKgC,QACLlD,EAAO0B,EAAYZ,SAASd,KAAO0B,EAAYqE,MAC/C7E,EAAKkC,QAELpD,EAAO0B,EAAYnB,cAAgBmB,EAAYZ,SAASd,KAAOzB,GAAMmD,EAAa,uBAKjGZ,EAAShB,IAAMlB,GAAUkB,EAAKoB,EAAK+B,OAAQ/B,EAAKiC,QAChDrC,EAASd,KAAOpB,GAAUoB,EAAMkB,EAAKgC,QAAShC,EAAKkC,SAEnDzC,EAAQhC,IAAIvD,EAAO0F,EAAU,CAAEA,SAAU,MACzC,IAAI2R,EAAU9R,EAAQ8C,SAAS7H,GAAiBkG,KAAKpE,GAAyBiU,GAAG,GAC7Ec,EAAQnR,OAAS,GACjBhH,EAAMG,GAAGuO,KAAKyJ,EAAS,CAAEzJ,KAAM,UAK3C7D,kBAAmB,WACf,IAKIsG,EAAGC,EALHxK,EAAO1B,KACPmB,EAAUO,EAAKP,QACf+R,EAAMvY,EAAEI,QACRoY,EAAYrY,EAAMyK,QAAQ4N,YAC1BtM,EAAgD,eAA7B1F,EAAQhC,IAAI,cAGnC,GAAKuC,EAAKR,QAAQmK,YAAlB,CAIA,IAAIvE,EAAgBD,EAAmB9H,GAAMoC,EAAS,qBAAuBpC,GAAMoC,EAAS,sBAAwB,EAChH4F,EAAgBF,EAAmB9H,GAAMoC,EAAS,oBAAsBpC,GAAMoC,EAAS,uBAAyB,EAChH6F,EAAaH,EAAmB9H,GAAMoC,EAAS,eAAiB,EAEhEO,EAAKQ,cAAgBR,EAAKuF,WAC1BgF,EAAIvK,EAAKQ,YAAY0F,aAAed,EACpCoF,EAAIxK,EAAKQ,YAAY2F,eAAiBd,EAAgBC,KAEtDiF,EAAIiH,EAAI3M,QAAU4M,EAAYrM,EAC9BoF,EAAIgH,EAAI1M,SAAW2M,GAAapM,EAAgBC,IAGpD7F,EAAQhC,IAAI,CACRoH,MAAO0F,EACPzF,OAAQ0F,IAEZxK,EAAKR,QAAQqF,MAAQ0F,EACrBvK,EAAKR,QAAQsF,OAAS0F,EAEtBxK,EAAK6G,WAGTzE,QAAS,SAAS5C,GACd,IAGI4P,EACAsC,EACA/Q,EALAX,EAAO1B,KACPqT,EAAc3R,EAAKR,QACnBlC,EAAUrE,EAAE+G,EAAK1C,SAiDrB,OA5CK3D,EAAc6F,KACfA,EAAU,CAAEmB,IAAKnB,IAGrBA,EAAUtF,EAAOyX,EAAY9R,QAASL,GAEtCkS,EAAavU,GAAQwU,EAAYvC,QAAUuC,EAAYvC,OAAS5P,EAAQ4P,QAExEzO,EAAMnB,EAAQmB,MAGLxD,GAAQuU,KACTA,GAAc5U,GAAW6D,IAGxB+Q,IAIDtC,EAAS9R,EAAQsD,KAAK,IAAM7F,GAAe,IAIvCqU,EAAOwC,IAAMjR,GAAOyO,EAAOwC,IAG3BtU,EAAQgL,KAAKnP,EAAU0Y,aAAa3X,EAAO,GAAIyX,EAAa,CAAE9R,QAASL,MAG3ElC,EAAQsD,KAAK,IAAM7F,GACdiM,IAAI,OAAS1M,GACboI,GAAG,OAASpI,EAAIgE,KAAKwT,gBAAgBlP,KAAKtE,QAd/C0B,EAAK+R,aAAavS,KAiBlBA,EAAQpF,UAER4F,EAAKH,QAAQzF,EAASoF,EAAQpF,SAAjBA,CAA2B,KAG5C4F,EAAKqE,QAAQzI,IAGjB0B,EAAQ0U,YAAY,2BAA4BN,GAEzC1R,GAGX8R,gBAAiB,WACbxT,KAAK+F,QAAQzI,IAGjBqW,cAAe,WACXC,aAAa5T,KAAK6T,qBAClB7T,KAAKmB,QAAQmB,KAAKjE,GAAqBiI,YAAY5J,IAGvDoX,WAAY,SAASC,EAAKC,GACtBhU,KAAK+F,QAAQnI,EAAO,CAAEoW,OAAQA,EAAQD,IAAKA,KAG/CE,aAAc,SAASC,GACnB,OAAO,SAASrP,GACZ,IAAImF,EAAOnF,EACPqP,IACAlK,EAAOlO,EAASoY,EAATpY,CAA0B+I,GAAQ,KAG7C7E,KAAKuB,QAAQyI,EAAMnF,GACnB7E,KAAKhB,QAAQmV,KAAK,YAAa,GAE/BnU,KAAK+F,QAAQzI,KAIrB8W,aAAc,WACVpU,KAAKmB,QAAQmB,KAAKjE,GAAqB2E,SAAStG,IAGpD+W,aAAc,SAASvS,GACnBlB,KAAK6T,oBAAsBnC,WAAW1R,KAAKoU,aAAa9P,KAAKtE,MAAO,KAEpErF,EAAE0Z,KAAKzY,EAAO,CACVqE,KAAM,MACNqU,SAAU,OACVC,OAAO,EACPC,MAAOxU,KAAK8T,WAAWxP,KAAKtE,MAC5BgQ,SAAUhQ,KAAK2T,cAAcrP,KAAKtE,MAClCyU,QAASzU,KAAKiU,aAAa/S,EAAQpF,UAAUwI,KAAKtE,OACnDkB,KAGPwT,SAAU,WACF1U,KAAKyI,UACLzI,KAAKyI,SAASE,UAGd3I,KAAKmJ,UACLnJ,KAAKmJ,SAASR,UAGlB3I,KAAKmB,QAAQuH,IAAI1M,GACZiI,SAAS5H,GAAgBqM,IAAI1M,GAAI8V,MACjCxP,KAAK,uCAAuCoG,IAAI1M,GAErDrB,EAAEI,QAAQ2N,IAAI,SAAW1M,EAAKgE,KAAK4F,SACnCjL,EAAEI,QAAQ2N,IAAIzM,GACdtB,EAAEI,QAAQ2N,IAAI1M,GAEd4X,aAAa5T,KAAK6T,qBAElB7Y,EAAO+G,GAAG4G,QAAQ3G,KAAKhC,MAEvBA,KAAK2U,OAAO/Z,GAEZE,EAAM6N,QAAQ3I,KAAKmB,UAGvBwH,QAAS,WACL3I,KAAK0U,WAED1U,KAAKkB,QAAQ8C,OACbhE,KAAKkQ,gBAAe,GAGxBlQ,KAAKmB,QAAQ+N,QAAQ1M,SAErBxC,KAAKmB,QAAUnB,KAAKiC,SAAWjC,KAAKhB,QAAUrE,KAGlDwI,cAAe,WACX,IAEIyR,EACAzT,EAHA0T,EAAc7U,KAAKhB,QACnBkC,EAAUlB,KAAKkB,QAGf4T,EAAQha,EAAMyK,QAAQuP,MAAMD,IAEL,IAAvB3T,EAAQwJ,YACRmK,EAAY1V,IAAI,WAAY,UAGhCgC,EAAUxG,EAAEE,EAAUsG,QAAQD,IAI9B0T,EAAsBC,EAAYvS,KAAK,gCAAgCwH,KAAI,WACvE,IAAIwJ,EAAMtT,KAAK+U,aAAa,OAE5B,OADA/U,KAAKsT,IAAM,GACJA,KAIXnS,EACKuS,YAAY,QAASoB,GACrB5R,KAAK,WAAY,GACjBK,OAAOsR,GACPvS,KAAK,gCAAgCzG,MAAK,SAASkN,GAEpD/I,KAAKsT,IAAMsB,EAAoB7L,MAG/B/I,KAAKkC,YACLlC,KAAKkC,YAAY2M,QAAQ1N,GAClBnB,KAAKiC,UACZd,EAAQc,SAASjC,KAAKiC,UAG1Bd,EAAQmB,KAAK,mBACRnD,IAAI2V,EAAQ,OAAS,QAAStZ,EAAW2F,EAAQmB,KAAK,+BAAiC,IAE5FuS,EAAY1V,IAAI,aAAc,IAAI2Q,OAElC+E,EAAYvS,KAAK,sBAAsBzG,MAAK,WACxC,IAAImZ,EAASra,EAAEqF,MAAM6E,KAAK,eAEtBmQ,GACAA,EAAOlR,aAIf3C,EAAU0T,EAAc,QA6BhC,SAAS3L,GAAegK,GACpB,IAAIxR,EAAO1B,KACX0B,EAAKuT,MAAQ/B,EACbxR,EAAKwT,kBAAmB,EACxBxT,EAAKwD,WAAa,IAAI9J,EAAU8X,EAAI/R,QAAS,CACzCoB,OAAQ,oBACR4S,MAAOjC,EAAI/R,QAAQ9G,GAAK,YACxB+a,UAAW1T,EAAK0T,UAAU9Q,KAAK5C,GAC/B2T,KAAM3T,EAAK2T,KAAK/Q,KAAK5C,GACrB4T,QAAS5T,EAAK4T,QAAQhR,KAAK5C,KAG/BA,EAAKwD,WAAWqQ,WAAWjR,KAAK,QAAS5C,EAAK8T,WAAWlR,KAAK5C,IAC9DA,EAAKwD,WAAWqQ,WAAWjR,KAAK,UAAW5C,EAAK+T,cAAcnR,KAAK5C,IAoLvE,SAAS0H,GAAe8J,EAAK7J,EAAYC,GACrC,IAAI5H,EAAO1B,KAOX0B,EAAKuT,MAAQ/B,EACbxR,EAAKwT,kBAAmB,EACxBxT,EAAKwD,WAAa,IAAI9J,EAAU8X,EAAI/R,QAAS,CACzCoB,OAAQ8G,EACR8L,MAAOjC,EAAI/R,QAAQ9G,GAAK,UACxBiP,eAAgBA,EAChB8L,UAAW1T,EAAK0T,UAAU9Q,KAAK5C,GAC/B2T,KAAM3T,EAAK2T,KAAK/Q,KAAK5C,GACrB4T,QAAS5T,EAAK4T,QAAQhR,KAAK5C,GAC3BgU,WAAYhU,EAAKgU,WAAWpR,KAAK5C,KAGrCA,EAAKwD,WAAWqQ,WAAW3J,iBAAkB,EA9OjD/Q,EAAY,CACRsG,QAASrF,GAAS,IAAM,iCACxBiO,OAAQjO,GAAS,EAAGxB,OAAMkP,WACtB,IAAImM,GAAYnM,GAAQ,IAAItJ,eAAiB5F,EAAK4F,cAGlD,MAFgB,WAAZyV,IAAyBA,EAAW,kBAEjC7a,EAAMkP,KAAK4L,aAAa,sEAAsEtb,eAAmB,CAAEkP,KAAMmM,EAAUE,SAAU,YAExJ/G,SAAUhT,GAAS,EAAGsH,WAEd,wEAAgCA,gEAIxC2J,QAAS,gCACTwG,aAAczX,GAAS,EAAGsH,QAAO7B,aAC7B,kCAAkC6B,mCAC1B7B,EAAQc,qEAIpB4G,aAAcnN,GAAU+I,GAAS,2DAA2DA,eAoBhGqE,GAAe4M,UAAY,CACvBN,WAAY,WACRxV,KAAKiV,MAAM9T,QAAQoC,OAAO1I,EAAUkS,UAExC0I,cAAe,WACXzV,KAAKiV,MAAM9T,QAAQmB,KAAK/F,GAAUiG,UAEtC4S,UAAW,SAAShP,GAChB,IAAI1E,EAAO1B,KACPkT,EAAMxR,EAAKuT,MACX9T,EAAU+R,EAAI/R,QAGlB,GADAO,EAAKwT,iBAAmBhC,EAAInN,QAAQxI,IAChCmE,EAAKwT,iBAAT,CAIAxT,EAAKqU,eAAiB7W,SAASiC,EAAQhC,IAAI,eAAgB,IAC3DuC,EAAKsU,gBAAkBlb,EAAM4R,UAAUvL,EAAS,YAEhDO,EAAKuU,gBAAkB7P,EAAEC,cAAc8N,KAAK,aAAaxM,QAAQ,4BAA6B,IAE9FjG,EAAKwU,YAAc,CACf3P,MAAOpF,EAAQ3F,aACfgL,OAAQrF,EAAQzF,eAGpBwX,EAAIhM,oBAEJxF,EAAKyU,gBAAkBjD,EAAIhR,YAAcgR,EAAIhR,YAAYZ,SAAWxG,EAAM4R,UAAUwG,EAAIjR,UAExF,IAAItB,EAAeQ,EAAQR,eAE3B,GAAIA,EAAa8B,GAAG,QAChBf,EAAKyU,gBAAgB7V,IAAMoB,EAAKyU,gBAAgB3V,KAAO,MACpD,CACH,IAAI4V,EAAYzV,EAAaxB,IAAI,cAC7BkX,EAAa1V,EAAaxB,IAAI,eAElC,IADiBZ,GAAK+X,KAAKF,KAAe7X,GAAK+X,KAAKD,GACrC,CACX,IAAIE,EAAkBpW,GAAYgB,EAAQ,IACtCqV,EAAuBD,EAAgB/V,KAAOkB,EAAKyU,gBAAgB3V,KAAOkB,EAAKsU,gBAAgBxV,KAC/FiW,EAAsBF,EAAgBjW,IAAMoB,EAAKyU,gBAAgB7V,IAAMoB,EAAKsU,gBAAgB1V,IAEhGoB,EAAKgV,sBAAwBF,EAAuB,EAAIA,EAAuB,EAC/E9U,EAAKiV,qBAAuBF,EAAsB,EAAIA,EAAsB,EAE5E/U,EAAKsU,gBAAgBxV,MAAQkB,EAAKgV,sBAClChV,EAAKsU,gBAAgB1V,KAAOoB,EAAKiV,sBAIzCxV,EACK8C,SAAS3H,GAAsByI,IAAIqB,EAAEC,eAAeiB,OAEzD3M,EAAEoB,GAAMoD,IAAIlC,EAAQmJ,EAAEC,cAAclH,IAAIlC,MAE5CoY,KAAM,SAASjP,GACX,IAAIpG,KAAKkV,iBAAT,CAGA,IAaInJ,EAAUC,EACV4K,EAAcC,EAddnV,EAAO1B,KACPkT,EAAMxR,EAAKuT,MACX9T,EAAU+R,EAAI/R,QACdD,EAAUgS,EAAIhS,QACdI,EAAWJ,EAAQI,SACnByJ,EAAYrJ,EAAKuU,gBACjBE,EAAkBzU,EAAKyU,gBACvBH,EAAkBtU,EAAKsU,gBACvBE,EAAcxU,EAAKwU,YACnB7E,EAAqB6B,EAAIhR,cAAgBgR,EAAIjM,UAC7C6P,EAAMhc,EAAMyK,QAAQuP,MAAM5B,EAAIhR,aAC9B6U,EAAgB1F,GAAsByF,GAAO5D,EAAIhR,YAAY0F,aAAesL,EAAIhR,YAAYqE,MAAQzL,EAAMyK,QAAQwC,YAAc,EAChIiP,EAAe3F,EAAqB,CAAE/Q,IAAK4S,EAAIhR,YAAYpB,YAAaN,KAAM0S,EAAIhR,YAAYnB,cAAiB,CAAET,IAAK,EAAGE,KAAM,GAG/H1B,EAAIa,KAAKC,IAAIwG,EAAEtH,EAAEmY,SAAU,GAC3BC,EAAIvX,KAAKC,IAAIwG,EAAE8Q,EAAED,SAAU,GAEvBlM,EAAUrL,QAAQ,MAAQ,GAGtBqM,EADAmH,EAAIhR,aAAepD,EAAIoX,EAAY3P,OAAS2M,EAAItP,QAAUoT,EAAaxW,KAAO2V,EAAgB3V,KAAOuW,EAC1F7D,EAAItP,QAAUmT,EAAgBf,EAAgBxV,KAAO0V,EAAY3P,MAAQyQ,EAAaxW,KAEtF1B,EAAIkX,EAAgBxV,KAAO2V,EAAgB3V,KAG1DW,EAAQ3F,WAAW4D,GAAU2M,EAAU7K,EAAQkG,SAAUlG,EAAQiG,YAC1D4D,EAAUrL,QAAQ,MAAQ,IAEjCqM,EAAW3M,IADXyX,EAAcb,EAAgBxV,KAAO0V,EAAY3P,MAAQ4P,EAAgB3V,MACtC1B,EAAGoC,EAAQkG,SAAUlG,EAAQiG,UAChE7F,EAASd,KAAOqW,EAAc9K,EAAWoK,EAAgB3V,KAAOuW,GAAiBrV,EAAKgV,uBAAyB,GAAKM,EAAaxW,KAE7H0S,EAAIhR,aAAeZ,EAASd,MAAQ0S,EAAIxP,UACxCpC,EAASd,KAAO0S,EAAIxP,QACpBqI,EAAW3M,GAAUyX,EAAcE,EAAgBzV,EAASd,KAAO2V,EAAgB3V,KAAOwW,EAAaxW,KAAMU,EAAQkG,SAAUlG,EAAQiG,WAG3IhG,EAAQhC,IAAI,CACRqB,KAAMc,EAASd,KACf+F,MAAOwF,KAIf,IAAIoL,EAAeD,EACfhE,EAAIhS,QAAQiE,SACZgS,GAAgBxc,EAAEI,QAAQ+F,aAE1BiK,EAAUrL,QAAQ,MAAQ,GAC1BsM,EAAYmL,EAAenB,EAAgB1V,IAAMoB,EAAKqU,eAAiBI,EAAgB7V,IAEnF6W,EAAejB,EAAY1P,OAAS9E,EAAKqU,gBAAkB7C,EAAIvP,OAASwS,EAAgB7V,IAAM0W,EAAa1W,MAC3G0L,EAAYkH,EAAIvP,OAASqS,EAAgB1V,IAAM4V,EAAY1P,OAASwQ,EAAa1W,KAGrFa,EAAQzF,YAAY0D,GAAU4M,EAAW9K,EAAQmG,UAAWnG,EAAQuF,aAC7DsE,EAAUrL,QAAQ,MAAQ,IAEjCsM,EAAY5M,IADZwX,EAAeZ,EAAgB1V,IAAM4V,EAAY1P,OAAS2P,EAAgB7V,KACrC6W,EAAcjW,EAAQmG,UAAWnG,EAAQuF,WAC9EnF,EAAShB,IAAMsW,EAAe5K,EAAYmK,EAAgB7V,KAAOoB,EAAKiV,sBAAwB,GAAKK,EAAa1W,IAE5GgB,EAAShB,KAAO4S,EAAIzP,QAAUyP,EAAIhR,cAClCZ,EAAShB,IAAM4S,EAAIzP,OACnBuI,EAAY5M,GAAUwX,EAAetV,EAAShB,IAAM6V,EAAgB7V,IAAM0W,EAAa1W,IAAKY,EAAQmG,UAAWnG,EAAQuF,YAG3HtF,EAAQhC,IAAI,CACRmB,IAAKgB,EAAShB,IACdkG,OAAQwF,KAIZD,IACAmH,EAAIhS,QAAQqF,MAAQwF,EAAW,MAE/BC,IACAkH,EAAIhS,QAAQsF,OAASwF,EAAY,MAGrCkH,EAAI3K,WAEZ+M,QAAS,SAASlP,GACd,IAAIpG,KAAKkV,iBAAT,CAIA,IAAIxT,EAAO1B,KACPkT,EAAMxR,EAAKuT,MACX9T,EAAU+R,EAAI/R,QAkBlB,OAhBAA,EACK8C,SAAS3H,GAAsByI,IAAIqB,EAAEC,eAAeyJ,OAEzDnV,EAAEoB,GAAMoD,IAAIlC,EAAQ,IAEhBiW,EAAIzN,eACJyN,EAAIzN,cAAc2R,QAGL,IAAbhR,EAAEsF,SACFvK,EAAQhC,IAAIuC,EAAKsU,iBACZ7W,IAAIuC,EAAKwU,aAGlBhD,EAAInN,QAAQvI,IAEL,IAEXmL,QAAS,WACD3I,KAAKkF,YACLlF,KAAKkF,WAAWyD,UAGpB3I,KAAKkF,WAAalF,KAAKiV,MAAQ,OA2BvC7L,GAAe0M,UAAY,CACvBV,UAAW,SAAShP,GAChB,IAAI8M,EAAMlT,KAAKiV,MACX9S,EAAY+Q,EAAIhS,QAAQiB,UACxBnD,EAAUkU,EAAIlU,QACd6C,EAAU7C,EAAQsD,KAAK,8BACvB6T,EAAkBrb,EAAM4R,UAAUwG,EAAIjR,UAE1CjC,KAAKkV,iBAAmBhC,EAAInN,QAAQtI,KAAe0E,EAC/CnC,KAAKkV,kBAAoBhC,EAAI7H,gBAIjC6H,EAAImE,sBAAwBvc,EAAM4R,UAAUwG,EAAI/R,QAAS,YAEzD+R,EAAIoE,uBAAyB,CACzB9W,KAAM0S,EAAIhS,QAAQI,SAASd,KAC3BF,IAAK4S,EAAIhS,QAAQI,SAAShB,KAG9B4S,EAAIqE,cAAgB,CAChB/W,KAAM4F,EAAEtH,EAAE0Y,OAAStE,EAAImE,sBAAsB7W,KAC7CF,IAAK8F,EAAE8Q,EAAEM,OAAStE,EAAImE,sBAAsB/W,KAGhD4S,EAAIhM,oBACCgM,EAAIhR,cACDL,EAAQC,OAAS,EACjBoR,EAAIxP,QAAUlI,EAAWqG,GAAW3C,SAAS2C,EAAQ1C,IAAI,SAAU,IAAM3D,EAAWwD,GAEpFkU,EAAIxP,QAAU,GAAKlI,EAAWwD,GAGlCkU,EAAIxP,SAAWyS,EAAgB3V,KAC/B0S,EAAIzP,QAAU0S,EAAgB7V,KAGlC3F,EAAEE,EAAUkS,SAAS9K,SAASiR,EAAI/R,SAAShC,IAAI,CAAEgF,QAAS,IAE1D+O,EAAI/R,QAAQ8C,SAAS3H,GAAsBgL,OAE3C3M,EAAEoB,GAAMoD,IAAIlC,EAAQmJ,EAAEC,cAAclH,IAAIlC,MAG5CoY,KAAM,SAASjP,GACX,IAGI5F,EACAF,EAJA4S,EAAMlT,KAAKiV,MACX3T,EAAW4R,EAAIhS,QAAQI,SACvBmW,EAAOvE,EAAIhS,QAAQiB,UAAUsV,KAI7BzX,KAAKkV,kBAAoBhC,EAAI7H,gBAI5BoM,GAA+B,MAAvBA,EAAKvX,gBACdM,EAAO4F,EAAEtH,EAAE0Y,OAAStE,EAAIqE,cAAc/W,KAElC0S,EAAIhR,cAAgBgR,EAAIjM,YACxBzG,GAAQ0S,EAAIhR,YAAYnB,cAG5BO,EAASd,KAAOpB,GAAUoB,EAAM0S,EAAIxP,QAASwP,EAAItP,UAGhD6T,GAA+B,MAAvBA,EAAKvX,gBACdI,EAAM8F,EAAE8Q,EAAEM,OAAStE,EAAIqE,cAAcjX,IAEjC4S,EAAIhR,cAAgBgR,EAAIjM,YACxB3G,GAAO4S,EAAIhR,YAAYpB,aAG3BQ,EAAShB,IAAMlB,GAAUkB,EAAK4S,EAAIzP,OAAQyP,EAAIvP,SAG9C7I,EAAMyK,QAAQmS,WACd/c,EAAEuY,EAAI/R,SAAShC,IACX,YAAa,cACZmC,EAASd,KAAO0S,EAAIoE,uBAAuB9W,MAAQ,QACnDc,EAAShB,IAAM4S,EAAIoE,uBAAuBhX,KAAO,OAGtD3F,EAAEuY,EAAI/R,SAAShC,IAAImC,KAK3BqW,YAAa,WACT,IAAIzE,EAAMlT,KAAKiV,MAEf/B,EAAI/R,QACC8C,SAAS3H,GAAsB+V,QAAQa,EAAIhS,QAAQoK,aAAawG,MAChExP,KAAK/F,GAAUiG,SAEpB7H,EAAEoB,GAAMoD,IAAIlC,EAAQ,KAGxByY,WAAY,SAAStP,GACbpG,KAAKkV,mBAGTlV,KAAK2X,cAELvR,EAAEC,cAAcvD,QAAQ5G,GAASiD,IAAIa,KAAKiV,MAAMoC,yBAGpD/B,QAAS,WACL,IAAIpC,EAAMlT,KAAKiV,MAEf,IAAIjV,KAAKkV,mBAAoBhC,EAAI7H,cAYjC,OARA1Q,EAAEuY,EAAI/R,SACDhC,IAAI+T,EAAIhS,QAAQI,UAChBnC,IAAI,YAAa,IAEtBa,KAAK2X,cAELzE,EAAInN,QAAQrI,IAEL,GAEXiL,QAAS,WACD3I,KAAKkF,YACLlF,KAAKkF,WAAWyD,UAGpB3I,KAAKkF,WAAalF,KAAKiV,MAAQ,OAIvCna,EAAMG,GAAG2c,OAAO5W,IAxoEpB,CA0oEGjG,OAAOD,MAAM+c,QACpB,IAAIC,QAAUhd,aAELgd","sourcesContent":["import './kendo.draganddrop.js';\nimport './kendo.popup.js';\nimport './kendo.icons.js';\nimport './kendo.html.button.js';\n\nvar __meta__ = {\n        id: \"window\",\n        name: \"Window\",\n        category: \"web\",\n        description: \"The Window widget displays content in a modal or non-modal HTML window.\",\n        depends: [ \"draganddrop\", \"popup\", \"icons\" ],\n        features: [ {\n            id: \"window-fx\",\n            name: \"Animation\",\n            description: \"Support for animation\",\n            depends: [ \"fx\" ]\n        } ]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            Widget = kendo.ui.Widget,\n            TabKeyTrap = kendo.ui.Popup.TabKeyTrap,\n            Draggable = kendo.ui.Draggable,\n            isPlainObject = $.isPlainObject,\n            activeElement = kendo._activeElement,\n            outerWidth = kendo._outerWidth,\n            outerHeight = kendo._outerHeight,\n            extend = $.extend,\n            each = $.each,\n            template = kendo.template,\n            BODY = \"body\",\n            templates,\n            NS = \".kendoWindow\",\n            MODAL_NS = \".kendoWindowModal\",\n            // classNames\n            KWINDOW = \".k-window\",\n            KWINDOWTITLE = \".k-window-title\",\n            KWINDOWTITLEBAR = KWINDOWTITLE + \"bar\",\n            KWINDOWCONTENT = \".k-window-content\",\n            KDIALOGCONTENT = \".k-dialog-content\",\n            KWINDOWRESIZEHANDLES = \".k-resize-handle\",\n            KOVERLAY = \".k-overlay\",\n            KWINDOWMINIMIZED = \"k-window-minimized\",\n            KCONTENTFRAME = \"k-content-frame\",\n            LOADINGICONCLASS = \"k-i-loading\",\n            KHOVERSTATE = \"k-hover\",\n            KFOCUSEDSTATE = \"k-focus\",\n            MAXIMIZEDSTATE = \"k-window-maximized\",\n            INLINE_FLEX = \"k-display-inline-flex\",\n            // constants\n            VISIBLE = \":visible\",\n            HIDDEN = \"hidden\",\n            CURSOR = \"cursor\",\n            // events\n            OPEN = \"open\",\n            ACTIVATE = \"activate\",\n            DEACTIVATE = \"deactivate\",\n            CLOSE = \"close\",\n            REFRESH = \"refresh\",\n            MINIMIZE = \"minimize\",\n            MAXIMIZE = \"maximize\",\n            RESIZESTART = \"resizeStart\",\n            RESIZE = \"resize\",\n            RESIZEEND = \"resizeEnd\",\n            DRAGSTART = \"dragstart\",\n            DRAGEND = \"dragend\",\n            RESTORE = \"restore\",\n            KENDOKEYDOWN = \"kendoKeydown\",\n            ERROR = \"error\",\n            OVERFLOW = \"overflow\",\n            DATADOCOVERFLOWRULE = \"original-overflow-rule\",\n            ZINDEX = \"zIndex\",\n            MINIMIZE_MAXIMIZEICONSELECTORS = \".k-window-titlebar-actions .k-i-window-minimize,.k-window-titlebar-actions .k-i-window,.k-window-titlebar-actions .k-svg-i-window-minimize,.k-window-titlebar-actions .k-svg-i-window\",\n            KPINICONCLASSSELECTOR = \".k-i-pin,.k-svg-i-pin\",\n            KUNPINICONCLASSSELECTOR = \".k-i-unpin,.k-svg-i-unpin\",\n            PIN_UNPINICONCLASSSELECTOR = KPINICONCLASSSELECTOR + \",\" + KUNPINICONCLASSSELECTOR,\n            TITLEBAR_BUTTONSSELECTOR = \".k-window-titlebar .k-window-titlebar-action\",\n            REFRESHICONSELECTOR = \".k-window-titlebar .k-i-arrow-rotate-cw,.k-window-titlebar .k-svg-i-arrow-rotate-cw\",\n            WINDOWEVENTSHANDLED = \"WindowEventsHandled\",\n            zero = /^0[a-z]*$/i,\n            isLocalUrl = kendo.isLocalUrl,\n            SIZE = {\n                small: \"k-window-sm\",\n                medium: \"k-window-md\",\n                large: \"k-window-lg\"\n            };\n\n        function defined(x) {\n            return (typeof x != \"undefined\");\n        }\n\n        function toInt(element, property) {\n            return parseInt(element.css(property), 10) || 0;\n        }\n\n        function constrain(value, low, high) {\n            var normalizedValue;\n\n            if (value && isNaN(value) && value.toString().indexOf(\"px\") < 0) {\n                normalizedValue = value;\n            } else {\n                normalizedValue = Math.max(\n                    Math.min(parseInt(value, 10), high === Infinity ? high : parseInt(high, 10)),\n                    low === -Infinity ? low : parseInt(low, 10)\n                );\n            }\n\n            return normalizedValue;\n        }\n\n        function executableScript() {\n            return !this.type || this.type.toLowerCase().indexOf(\"script\") >= 0;\n        }\n\n\n        function getPosition(elem) {\n            var result = { top: elem.offsetTop, left: elem.offsetLeft },\n                parent = elem.offsetParent;\n\n            while (parent) {\n                result.top += parent.offsetTop;\n                result.left += parent.offsetLeft;\n\n                var parentOverflowX = $(parent).css(\"overflowX\");\n                var parentOverflowY = $(parent).css(\"overflowY\");\n\n                if (parentOverflowY === \"auto\" || parentOverflowY === \"scroll\") {\n                    result.top -= parent.scrollTop;\n                }\n\n                if (parentOverflowX === \"auto\" || parentOverflowX === \"scroll\") {\n                    result.left -= parent.scrollLeft;\n                }\n\n                parent = parent.offsetParent;\n            }\n\n            return result;\n        }\n\n        var Window = Widget.extend({\n            init: function(element, options) {\n                var that = this,\n                    wrapper,\n                    offset = {},\n                    visibility, display, position,\n                    isVisible = false,\n                    content,\n                    windowContent,\n                    windowFrame,\n                    globalWindow,\n                    suppressActions = options && options.actions && !options.actions.length,\n                    id;\n\n                Widget.fn.init.call(that, element, options);\n                options = that.options;\n                position = options.position;\n                element = that.element;\n                content = options.content;\n                globalWindow = $(window);\n\n                if (suppressActions) {\n                    options.actions = [];\n                }\n\n                that.appendTo = $(options.appendTo);\n\n                that.containment = options.draggable.containment ? $(options.draggable.containment).first() : null;\n\n                if (content && !isPlainObject(content)) {\n                    content = options.content = { url: content };\n                }\n\n                // remove script blocks to prevent double-execution\n                element.find(\"script\").filter(executableScript).remove();\n\n                if (!element.parent().is(that.appendTo) && !that.containment && (position.top === undefined$1 || position.left === undefined$1)) {\n                    if (element.is(VISIBLE)) {\n                        offset = element.offset();\n                        isVisible = true;\n                    } else {\n                        visibility = element.css(\"visibility\");\n                        display = element.css(\"display\");\n\n                        element.css({ visibility: HIDDEN, display: \"\" });\n\n                        if (document.body.contains(element[0])) {\n                            offset = element.offset();\n                        } else {\n                            offset = { top: 0, left: 0 };\n                        }\n\n                        element.css({ visibility: visibility, display: display });\n                    }\n\n                    if (position.top === undefined$1) {\n                        position.top = offset.top;\n                    }\n                    if (position.left === undefined$1) {\n                        position.left = offset.left;\n                    }\n                }\n\n                if (!defined(options.visible) || options.visible === null) {\n                    options.visible = element.is(VISIBLE);\n                }\n\n                wrapper = that.wrapper = element.closest(KWINDOW);\n\n                if (options.themeColor && options.themeColor !== \"none\") {\n                    wrapper.addClass(kendo.getValidCssClass(\"k-window-\", \"themeColor\", options.themeColor));\n                }\n\n                if (!element.is(\".k-window-content\") || !wrapper[0]) {\n                    element.addClass(\"k-window-content\");\n                    element.attr(\"tabindex\", 0);\n                    that._createWindow(element, options);\n                    wrapper = that.wrapper = element.closest(KWINDOW);\n\n                    that.title(that.options.title);\n                    that._dimensions();\n\n                    if (options._footerTemplate) {\n                        that.wrapper.append(kendo.template(options._footerTemplate)(options._footerMessages));\n                    }\n                }\n\n                that.minTop = that.minLeft = -Infinity;\n                that.maxTop = that.maxLeft = Infinity;\n                that._position();\n\n                if (content) {\n                    that.refresh(content);\n                }\n\n                if (options.visible) {\n                    that.toFront(null, !options.modal);\n                }\n\n                windowContent = wrapper.children(KWINDOWCONTENT);\n\n                if (options.visible && options.modal) {\n                    that._overlay(wrapper.is(VISIBLE)).css({ opacity: 0.5 });\n                }\n\n                wrapper\n                    .on(\"mouseenter\" + NS, TITLEBAR_BUTTONSSELECTOR, that._buttonEnter.bind(that))\n                    .on(\"mouseleave\" + NS, TITLEBAR_BUTTONSSELECTOR, that._buttonLeave.bind(that))\n                    .on(\"click\" + NS, \"> \" + TITLEBAR_BUTTONSSELECTOR, that._windowActionHandler.bind(that))\n                    .on(\"keydown\" + NS, that, that._keydown.bind(that))\n                    .on(\"focus\" + NS, that._focus.bind(that))\n                    .on(\"blur\" + NS, that._blur.bind(that));\n\n                windowContent\n                    .on(\"keydown\" + NS, that, that._keydownContent.bind(that));\n\n                windowFrame = windowContent.find(\".\" + KCONTENTFRAME)[0];\n\n                if (windowFrame && !globalWindow.data(WINDOWEVENTSHANDLED)) {\n\n                    globalWindow.on(\"blur\" + NS, function() {\n                        var element = $(document.activeElement).parent(KWINDOWCONTENT);\n                        if (element.length) {\n                            var windowInstance = kendo.widgetInstance(element);\n                            windowInstance._focus();\n                        }\n                    });\n\n                    globalWindow.on(\"focus\" + NS, function() {\n                        $(KWINDOWCONTENT).not(KDIALOGCONTENT).each(function(i, element) {\n                            kendo.widgetInstance($(element))._blur();\n                        });\n                    });\n\n                    globalWindow.data(WINDOWEVENTSHANDLED, true);\n                }\n\n                this._resizable();\n\n                this._draggable();\n\n                if (options.pinned && this.wrapper.is(\":visible\")) {\n                    that.pin();\n                }\n\n                id = element.attr(\"id\");\n                if (id) {\n                    id = id + \"_wnd_title\";\n                    wrapper.attr({\n                            \"role\": \"dialog\",\n                            \"aria-labelledby\": id\n                        }).children(KWINDOWTITLEBAR)\n                        .children(KWINDOWTITLE)\n                        .attr(\"id\", id);\n                }\n\n                wrapper.add(wrapper.children(\".k-resize-handle,\" + KWINDOWTITLEBAR))\n                    .on(kendo.support.mousedown + NS, that.toFront.bind(that));\n\n                that.touchScroller = kendo.touchScroller(element);\n\n                that._resizeHandler = that._onDocumentResize.bind(that);\n\n                that._marker = kendo.guid().substring(0, 8);\n\n                $(window).on(\"resize\" + NS + that._marker, that._resizeHandler);\n\n                if (options.visible) {\n                    that.trigger(OPEN);\n                    that.trigger(ACTIVATE);\n                }\n\n                kendo.notify(that);\n\n                if (this.options.modal) {\n                    this._tabKeyTrap = new TabKeyTrap(wrapper);\n                    this._tabKeyTrap.trap();\n                    this._tabKeyTrap.shouldTrap = function() {\n                        return wrapper.data(\"isFront\");\n                    };\n                }\n            },\n\n            _buttonEnter: function(e) {\n                $(e.currentTarget).addClass(KHOVERSTATE);\n            },\n\n            _buttonLeave: function(e) {\n                $(e.currentTarget).removeClass(KHOVERSTATE);\n            },\n\n            _focus: function() {\n                this.wrapper.addClass(KFOCUSEDSTATE);\n            },\n\n            _blur: function() {\n                this.wrapper.removeClass(KFOCUSEDSTATE);\n            },\n\n            _dimensions: function() {\n                var wrapper = this.wrapper;\n                var options = this.options;\n                var width = options.width;\n                var height = options.height;\n                var maxHeight = options.maxHeight;\n                var sizeClass = options.size;\n                var dimensions = [\"minWidth\",\"minHeight\",\"maxWidth\",\"maxHeight\"];\n                var contentBoxSizing = wrapper.css(\"box-sizing\") == \"content-box\";\n\n                var lrBorderWidth = contentBoxSizing ? toInt(wrapper, \"border-left-width\") + toInt(wrapper, \"border-right-width\") : 0;\n                var tbBorderWidth = contentBoxSizing ? toInt(wrapper, \"border-top-width\") + toInt(wrapper, \"border-bottom-width\") : 0;\n                var paddingTop = contentBoxSizing ? toInt(wrapper, \"padding-top\") : 0;\n\n                if (this.containment && !this._isPinned) {\n                    this._updateBoundaries();\n                    options.maxHeight = Math.min(this.containment.height - (tbBorderWidth + paddingTop), maxHeight);\n                    options.maxWidth = Math.min(this.containment.width - lrBorderWidth, options.maxWidth);\n                }\n\n                for (var i = 0; i < dimensions.length; i++) {\n                    var value = options[dimensions[i]] || \"\";\n                    if (value != Infinity) {\n                        wrapper.css(dimensions[i], value);\n                    }\n                }\n\n                if (maxHeight != Infinity) {\n                    this.element.css(\"maxHeight\", maxHeight);\n                }\n\n                if (width) {\n                    wrapper.outerWidth(constrain(width, options.minWidth, options.maxWidth));\n                }\n                else {\n                    wrapper.outerWidth(\"\");\n                }\n\n                if (height) {\n                    wrapper.outerHeight(constrain(height, options.minHeight, options.maxHeight));\n                }\n                else {\n                    wrapper.outerHeight(\"\");\n                }\n\n                if (!options.visible) {\n                    wrapper.removeClass(INLINE_FLEX).hide();\n                }\n\n                if (sizeClass && SIZE[sizeClass]) {\n                    wrapper.addClass(SIZE[sizeClass]);\n                }\n            },\n\n            _position: function() {\n                var wrapper = this.wrapper,\n                    position = this.options.position,\n                    containmentTop, containmentLeft;\n\n                this._updateBoundaries();\n\n                if (this.containment) {\n                    position.top = position.top || 0;\n                    position.left = position.left || 0;\n\n                    containmentTop = position.top.toString().indexOf(\"%\") > 0 ?\n                        parseInt(this.containment.height * (parseFloat(position.top) / 100), 10) :\n                        position.top;\n\n                    containmentLeft = position.left.toString().indexOf(\"%\") > 0 ?\n                        parseInt(this.containment.width * (parseFloat(position.left) / 100), 10) :\n                        position.left;\n\n                    position.top = constrain(containmentTop, this.minTop, this.maxTop);\n                    position.left = constrain(containmentLeft, this.minLeft, this.maxLeft);\n                }\n\n                if (position.top && position.top.toString().indexOf(\"px\") > 0) {\n                    position.top = Number(position.top.replace(\"px\", \"\"));\n                }\n\n                if (position.left && position.left.toString().indexOf(\"px\") > 0) {\n                    position.left = Number(position.left.replace(\"px\", \"\"));\n                }\n\n                if (position.top === 0) {\n                    position.top = position.top.toString();\n                }\n\n                if (position.left === 0) {\n                    position.left = position.left.toString();\n                }\n\n                wrapper.css({\n                    top: position.top || \"\",\n                    left: position.left || \"\"\n                });\n            },\n\n            _updateBoundaries: function() {\n                var containment = this.containment;\n\n                if (!containment) {\n                    return null;\n                }\n\n                containment.width = containment.innerWidth();\n                containment.height = containment.innerHeight();\n\n                if (parseInt(containment.width, 10) > containment[0].clientWidth) {\n                    containment.width -= kendo.support.scrollbar();\n                }\n\n                if (parseInt(containment.height, 10) > containment[0].clientHeight) {\n                    containment.height -= kendo.support.scrollbar();\n                }\n\n                containment.position = getPosition(containment[0]);\n\n                if (this._isPinned) {\n                    this.minTop = this.minLeft = -Infinity;\n                    this.maxTop = this.maxLeft = Infinity;\n                } else {\n                    this.minTop = containment.scrollTop();\n                    this.minLeft = containment.scrollLeft();\n                    this.maxLeft = this.minLeft + containment.width - outerWidth(this.wrapper, true);\n                    this.maxTop = this.minTop + containment.height - outerHeight(this.wrapper, true);\n                }\n            },\n\n            _animationOptions: function(id) {\n                var animation = this.options.animation;\n                var basicAnimation = {\n                    open: { effects: {} },\n                    close: { hide: true, effects: {} }\n                };\n\n                return animation && animation[id] || basicAnimation[id];\n            },\n\n            _resize: function() {\n                kendo.resize(this.element.children());\n            },\n\n            _resizable: function() {\n                var resizable = this.options.resizable;\n                var wrapper = this.wrapper;\n\n                if (this.resizing) {\n                    wrapper\n                        .off(\"dblclick\" + NS)\n                        .children(KWINDOWRESIZEHANDLES).remove();\n\n                    this.resizing.destroy();\n                    this.resizing = null;\n                }\n\n                if (resizable) {\n                    wrapper.on(\"dblclick\" + NS, KWINDOWTITLEBAR, (function(e) {\n                        if (!$(e.target).closest(\".k-window-titlebar-action\").length) {\n                            this.toggleMaximization();\n                        }\n                    }).bind(this));\n\n                    each(\"n e s w se sw ne nw\".split(\" \"), function(index, handler) {\n                        wrapper.append(templates.resizeHandle(handler));\n                    });\n\n                    this.resizing = new WindowResizing(this);\n                }\n\n                wrapper = null;\n            },\n\n            _draggable: function() {\n                var draggable = this.options.draggable;\n\n                if (this.dragging) {\n                    this.dragging.destroy();\n                    this.dragging = null;\n                }\n                if (draggable) {\n                    this.dragging = new WindowDragging(this, draggable.dragHandle || KWINDOWTITLEBAR, draggable.clickMoveClick);\n                }\n            },\n\n            _actions: function() {\n                var options = this.options;\n                var actions = options.actions;\n                var pinned = options.pinned;\n                var titlebar = this.wrapper.children(KWINDOWTITLEBAR);\n                var container = titlebar.find(\".k-window-titlebar-actions\");\n                var windowSpecificCommands = [ \"minimize\", \"maximize\" ];\n                var icons = {\n                    \"maximize\": \"window\",\n                    \"refresh\": \"arrow-rotate-cw\",\n                    \"custom\": \"gear\"\n                };\n                var icon;\n\n                actions = $.map(actions, function(action) {\n                    action = pinned && action.toLowerCase() === \"pin\" ? \"unpin\" : action;\n                    icon = icons[action.toLowerCase()] || \"\";\n                    return { name: (windowSpecificCommands.indexOf(action.toLowerCase()) > - 1) ? \"window-\" + action : action, icon: action.toLowerCase() == \"close\" ? \"x\" : icon };\n                });\n\n                container.html(kendo.render(templates.action, actions));\n            },\n\n            setOptions: function(options) {\n                var that = this;\n                var sizeClass = that.options.size;\n                var doc = this.containment && !that._isPinned ? this.containment : $(document);\n                // make a deep extend over options.position telerik/kendo-ui-core#844\n                var cachedOptions = JSON.parse(JSON.stringify(options));\n\n                that.wrapper.removeClass(kendo.getValidCssClass(\"k-window-\", \"themeColor\", that.options.themeColor));\n\n                extend(options.position, that.options.position);\n                extend(options.position, cachedOptions.position);\n\n                that._containerScrollTop = doc.scrollTop();\n                that._containerScrollLeft = doc.scrollLeft();\n\n                Widget.fn.setOptions.call(that, options);\n                var scrollable = that.options.scrollable !== false;\n\n                that.restore();\n\n                if (typeof options.title !== \"undefined\") {\n                    that.title(options.title);\n                }\n\n                that.wrapper.removeClass(SIZE[sizeClass]);\n                that._dimensions();\n\n                that._position();\n                that._resizable();\n                that._draggable();\n                that._actions();\n\n                if (that.options.themeColor && that.options.themeColor !== \"none\") {\n                    that.wrapper.addClass(kendo.getValidCssClass(\"k-window-\", \"themeColor\", that.options.themeColor));\n                }\n\n                if (typeof options.modal !== \"undefined\") {\n                    var visible = that.options.visible !== false;\n                    that._enableDocumentScrolling();\n                    that._overlay(options.modal && visible);\n                }\n\n                that.element.css(OVERFLOW, scrollable ? \"\" : \"hidden\");\n            },\n\n            events: [\n                OPEN,\n                ACTIVATE,\n                DEACTIVATE,\n                CLOSE,\n                MINIMIZE,\n                MAXIMIZE,\n                REFRESH,\n                RESTORE,\n                RESIZESTART,\n                RESIZE,\n                RESIZEEND,\n                DRAGSTART,\n                DRAGEND,\n                KENDOKEYDOWN,\n                ERROR\n            ],\n\n            options: {\n                name: \"Window\",\n                animation: {\n                    open: {\n                        effects: { zoom: { direction: \"in\" }, fade: { direction: \"in\" } },\n                        duration: 350\n                    },\n                    close: {\n                        effects: { zoom: { direction: \"out\", properties: { scale: 0.7 } }, fade: { direction: \"out\" } },\n                        duration: 350,\n                        hide: true\n                    }\n                },\n                title: \"\",\n                themeColor: \"\",\n                actions: [\"Close\"],\n                autoFocus: true,\n                modal: false,\n                size: \"auto\",\n                resizable: true,\n                draggable: true,\n                minWidth: 90,\n                minHeight: 50,\n                maxWidth: Infinity,\n                maxHeight: Infinity,\n                pinned: false,\n                scrollable: true,\n                position: {},\n                content: null,\n                visible: null,\n                height: null,\n                width: null,\n                appendTo: \"body\",\n                isMaximized: false,\n                isMinimized: false\n            },\n\n            _closable: function() {\n                return $.inArray(\"close\", $.map(this.options.actions, function(x) { return x.toLowerCase(); })) > -1;\n            },\n\n            _keydownContent: function(e) {\n                var that = this,\n                    keys = kendo.keys,\n                    keyCode = e.keyCode;\n\n                if (keyCode == keys.ESC && that._closable()) {\n                    e.stopPropagation();\n                    that._close(false);\n                }\n            },\n\n            _keydown: function(e) {\n                var that = this,\n                    options = that.options,\n                    keys = kendo.keys,\n                    keyCode = e.keyCode,\n                    wrapper = that.wrapper,\n                    offset, handled,\n                    distance = 10,\n                    isMaximized = options.isMaximized,\n                    isMinimized = options.isMinimized,\n                    newWidth, newHeight, w, h;\n\n                if (keyCode == keys.ESC && that._closable()) {\n                    e.stopPropagation();\n                    that._close(false);\n                }\n\n                if (e.target != e.currentTarget || that._closing) {\n                    return;\n                }\n\n                 // Refresh\n                if (e.altKey && keyCode == 82) {// Alt + R\n                    that.refresh();\n                }\n\n                // Pin/Unpin\n                if (e.altKey && keyCode == 80) {// Alt + P\n                    if (that.options.pinned) {\n                        that.unpin();\n                    } else {\n                        that.pin();\n                    }\n                }\n\n                // Maximize/Restore/Miminimize\n                if (e.altKey && keyCode == keys.UP) {\n                    if (isMinimized) {\n                        that.restore();\n                        that.wrapper.trigger(\"focus\");\n                    } else if (!isMaximized) {\n                        that.maximize();\n                        that.wrapper.trigger(\"focus\");\n                    }\n                } else if (e.altKey && keyCode == keys.DOWN) {\n                    if (!isMinimized && !isMaximized) {\n                        that.minimize();\n                        that.wrapper.trigger(\"focus\");\n                    } else if (isMaximized) {\n                        that.restore();\n                        that.wrapper.trigger(\"focus\");\n                    }\n                }\n\n                offset = kendo.getOffset(wrapper);\n\n                if (that.containment && !that._isPinned) {\n                    offset = that.options.position;\n                }\n\n                if (options.draggable && !e.ctrlKey && !e.altKey && !isMaximized) {\n                    that._updateBoundaries();\n                    if (keyCode == keys.UP) {\n                        offset.top = constrain(offset.top - distance, that.minTop, that.maxTop);\n                        handled = wrapper.css(\"top\", offset.top);\n                    } else if (keyCode == keys.DOWN) {\n                        offset.top = constrain(offset.top + distance, that.minTop, that.maxTop);\n                        handled = wrapper.css(\"top\", offset.top);\n                    } else if (keyCode == keys.LEFT) {\n                        offset.left = constrain(offset.left - distance, that.minLeft, that.maxLeft);\n                        handled = wrapper.css(\"left\", offset.left);\n                    } else if (keyCode == keys.RIGHT) {\n                        offset.left = constrain(offset.left + distance, that.minLeft, that.maxLeft);\n                        handled = wrapper.css(\"left\", offset.left);\n                    }\n                }\n\n                if (options.resizable && e.ctrlKey && !isMaximized && !isMinimized) {\n                    if (keyCode == keys.UP) {\n                        handled = true;\n                        newHeight = wrapper.outerHeight() - distance;\n                    } else if (keyCode == keys.DOWN) {\n                        handled = true;\n                        if (that.containment && !that._isPinned) {\n                            newHeight = Math.min(wrapper.outerHeight() + distance,\n                                that.containment.height - offset.top - toInt(wrapper, \"padding-top\") -\n                                toInt(wrapper, \"borderBottomWidth\") - toInt(wrapper, \"borderTopWidth\"));\n                        } else {\n                            newHeight = wrapper.outerHeight() + distance;\n                        }\n                    } if (keyCode == keys.LEFT) {\n                        handled = true;\n                        newWidth = wrapper.outerWidth() - distance;\n                    } else if (keyCode == keys.RIGHT) {\n                        handled = true;\n                        if (that.containment && !that._isPinned) {\n                            newWidth = Math.min(wrapper.outerWidth() + distance,\n                                                that.containment.width - offset.left -\n                                                toInt(wrapper, \"borderLeftWidth\") - toInt(wrapper, \"borderRightWidth\"));\n                        } else {\n                            newWidth = wrapper.outerWidth() + distance;\n                        }\n                    }\n\n                    if (handled) {\n                        w = constrain(newWidth, options.minWidth, options.maxWidth);\n                        h = constrain(newHeight, options.minHeight, options.maxHeight);\n\n                        if (!isNaN(w)) {\n                            wrapper.outerWidth(w);\n                            that.options.width = w + \"px\";\n                        }\n                        if (!isNaN(h)) {\n                            wrapper.outerHeight(h);\n                            that.options.height = h + \"px\";\n                        }\n\n                        that.resize();\n                    }\n                }\n\n                if (handled) {\n                    e.preventDefault();\n                }\n            },\n\n            _overlay: function(visible) {\n                var overlay = this.containment ? this.containment.children(KOVERLAY) : this.appendTo.children(KOVERLAY),\n                    wrapper = this.wrapper,\n                    display = visible ? \"inline-flex\" : \"none\",\n                    zIndex = parseInt(wrapper.css(ZINDEX), 10) - 1;\n\n                if (!overlay.length) {\n                    overlay = $(\"<div class='k-overlay' />\");\n                }\n\n                overlay\n                    .insertBefore(wrapper[0])\n                    .css({\n                        zIndex: zIndex,\n                        display: display\n                    });\n\n                if (this.options.modal.preventScroll && !this.containment) {\n                    this._stopDocumentScrolling();\n                }\n\n                return overlay;\n            },\n\n            _actionForIcon: function(icon) {\n                var iconClass = /\\bk(-svg)?-i(-\\w+)+\\b/.exec(icon[0].className)[0];\n                return {\n                    \"x\": \"_close\",\n                    \"window\": \"maximize\",\n                    \"window-minimize\": \"minimize\",\n                    \"window-restore\": \"restore\",\n                    \"arrow-rotate-cw\": \"refresh\",\n                    \"pin\": \"pin\",\n                    \"unpin\": \"unpin\"\n                }[iconClass.replace(/(k-i-|k-svg-i-)/, \"\")];\n            },\n\n            _windowActionHandler: function(e) {\n                if (this._closing) {\n                    return;\n                }\n                var icon = $(e.target).closest(\".k-window-titlebar-action\").find(\".k-icon,.k-svg-icon\");\n                var action = this._actionForIcon(icon);\n\n                if (action) {\n                    e.preventDefault();\n                    this[action]();\n                    return false;\n                }\n            },\n\n            _modals: function() {\n                var that = this,\n                    windowElements = $(KWINDOW + VISIBLE),\n                    windowInstance,\n                    modals = [];\n\n                for (var i = 0; i < windowElements.length; i += 1) {\n                    windowInstance = that._object($(windowElements[i]));\n\n                    if (windowInstance &&\n                        windowInstance.options &&\n                        windowInstance.options.modal &&\n                        windowInstance.options.visible &&\n                        windowInstance.options.appendTo === that.options.appendTo &&\n                        (!windowInstance.containment || (that.containment && windowInstance.containment[0] === that.containment[0]))) {\n                            modals.push(windowInstance.wrapper[0]);\n                    }\n                }\n\n                modals.sort(function(a, b) {\n                    return a.style.zIndex - b.style.zIndex;\n                });\n\n                that = null;\n\n                return $(modals);\n            },\n\n            _object: function(element) {\n                var content = element.children(KWINDOWCONTENT);\n                var widget = kendo.widgetInstance(content);\n\n                if (widget) {\n                    return widget;\n                }\n\n                return undefined$1;\n            },\n\n            center: function() {\n                var that = this,\n                    position = that.options.position,\n                    wrapper = that.wrapper,\n                    documentWindow = $(window),\n                    scrollTop = 0,\n                    scrollLeft = 0,\n                    newTop, newLeft;\n\n                if (that.options.isMaximized) {\n                    return that;\n                }\n\n                if (that.options.pinned && !that._isPinned) {\n                    that.pin();\n                }\n\n                if (!that.options.pinned) {\n                    scrollTop = documentWindow.scrollTop();\n                    scrollLeft = documentWindow.scrollLeft();\n                }\n\n                if (this.containment && !that.options.pinned) {\n                    newTop = this.minTop + (this.maxTop - this.minTop) / 2;\n                    newLeft = this.minLeft + (this.maxLeft - this.minLeft) / 2;\n                } else {\n                    that._scrollIsAppended = true;\n                    newLeft = scrollLeft + Math.max(0, (documentWindow.width() - wrapper.outerWidth()) / 2);\n                    newTop = scrollTop + Math.max(0, (documentWindow.height() - wrapper.outerHeight() - toInt(wrapper, \"paddingTop\")) / 2);\n                }\n\n                wrapper.css({\n                    left: newLeft,\n                    top: newTop\n                });\n\n                position.top = newTop;\n                position.left = newLeft;\n\n                return that;\n            },\n\n            title: function(title) {\n                var that = this,\n                    value,\n                    encoded = true,\n                    wrapper = that.wrapper,\n                    titleBar = wrapper.children(KWINDOWTITLEBAR),\n                    titleElement = titleBar.children(KWINDOWTITLE);\n\n                if (!arguments.length) {\n                    return titleElement.html();\n                }\n\n                if ($.isPlainObject(title)) {\n                    value = typeof title.text !== \"undefined\" ? title.text : \"\";\n                    encoded = title.encoded !== false;\n                } else {\n                    value = title;\n                }\n\n                if (value === false) {\n                    wrapper.addClass(\"k-window-titleless\");\n                    wrapper.css(\"padding-top\", 0);\n                    titleBar.remove();\n                } else {\n                    if (!titleBar.length) {\n                        wrapper.prepend(templates.titlebar({\n                            title: encoded ? kendo.htmlEncode(value) : value\n                        }));\n                        that._actions();\n                        titleBar = wrapper.children(KWINDOWTITLEBAR);\n                    } else {\n                        titleElement.html(encoded ? kendo.htmlEncode(value) : value);\n                    }\n                }\n\n                that.options.title = value;\n\n                return that;\n            },\n\n            content: function(html, data) {\n                var content = this.wrapper.children(KWINDOWCONTENT),\n                    scrollContainer = content.children(\".km-scroll-container\");\n\n                content = scrollContainer[0] ? scrollContainer : content;\n\n                if (!defined(html)) {\n                    return content.html();\n                }\n\n                this.angular(\"cleanup\", function() {\n                    return { elements: content.children() };\n                });\n\n                kendo.destroy(this.element.children());\n\n                content.empty().html(html);\n\n                this.angular(\"compile\", function() {\n                    var a = [];\n                    for (var i = content.length; --i >= 0;) {\n                        a.push({ dataItem: data });\n                    }\n                    return {\n                        elements: content.children(),\n                        data: a\n                    };\n                });\n\n                return this;\n            },\n\n            open: function() {\n                var that = this,\n                    wrapper = that.wrapper,\n                    options = that.options,\n                    showOptions = this._animationOptions(\"open\"),\n                    contentElement = wrapper.children(KWINDOWCONTENT),\n                    overlay, otherModalsVisible,\n                    containmentContext = this.containment && !that._isPinned,\n                    doc = containmentContext ? this.containment : $(document);\n\n                if (!that.trigger(OPEN)) {\n                    if (that._closing) {\n                        wrapper.kendoStop(true, true);\n                    }\n\n                    that._closing = false;\n\n                    that.toFront();\n\n                    if (options.autoFocus) {\n                        that.wrapper.trigger(\"focus\");\n                    }\n\n                    options.visible = true;\n\n                    if (options.modal) {\n                        otherModalsVisible = !!that._modals().length;\n                        overlay = that._overlay(otherModalsVisible);\n\n                        overlay.kendoStop(true, true);\n\n                        if (showOptions.duration && kendo.effects.Fade && !otherModalsVisible) {\n                            var overlayFx = kendo.fx(overlay).fadeIn();\n                            overlayFx.duration(showOptions.duration || 0);\n                            overlayFx.endValue(0.5);\n                            overlayFx.play();\n                        } else {\n                            overlay.css(\"opacity\", 0.5);\n                        }\n\n                        overlay.show();\n\n                        $(window).on(\"focus\" + MODAL_NS, function() {\n                            if (wrapper.data(\"isFront\") && !$(document.activeElement).closest(wrapper).length) {\n                               that.wrapper.trigger(\"focus\");\n                            }\n                        });\n                    }\n\n                    if (!wrapper.is(VISIBLE)) {\n                        contentElement.css(OVERFLOW, HIDDEN);\n\n                        that.wrapper.find(TITLEBAR_BUTTONSSELECTOR).addClass(\"k-button-flat\");\n\n                        wrapper.css({ display: \"inline-flex\" });\n                        wrapper.kendoStop().kendoAnimate({\n                            effects: showOptions.effects,\n                            duration: showOptions.duration,\n                            complete: this._activate.bind(this)\n                        });\n                    }\n                }\n\n                if (options.isMaximized) {\n                    that._containerScrollTop = doc.scrollTop();\n                    that._containerScrollLeft = doc.scrollLeft();\n                    that._stopDocumentScrolling();\n                }\n\n                if (this.options.pinned && !this._isPinned) {\n                    this.pin();\n                }\n\n                return that;\n            },\n\n            _activate: function() {\n                var scrollable = this.options.scrollable !== false;\n\n                if (this.options.autoFocus) {\n                    this.wrapper.trigger(\"focus\");\n                }\n\n                this.element.css(OVERFLOW, scrollable ? \"\" : \"hidden\");\n                kendo.resize(this.element.children());\n\n                this.trigger(ACTIVATE);\n            },\n\n            _removeOverlay: function(suppressAnimation) {\n                var modals = this._modals();\n                var options = this.options;\n                var hideOverlay = options.modal && !modals.length;\n                var hideOptions = this._animationOptions(\"close\");\n\n                if (hideOverlay) {\n                    if (!suppressAnimation && hideOptions.duration && kendo.effects.Fade) {\n                        var overlayFx = kendo.fx(options.modal ? this._overlay(true) : $(undefined$1)).fadeOut();\n                        overlayFx.duration(hideOptions.duration || 0);\n                        overlayFx.startValue(0.5);\n                        overlayFx.play();\n                    } else {\n                        this._overlay(false).remove();\n                    }\n                    if (options.modal.preventScroll) {\n                        this._enableDocumentScrolling();\n                    }\n                } else if (modals.length) {\n                    this._object(modals.last())._overlay(true);\n\n                    if (options.modal.preventScroll) {\n                        this._stopDocumentScrolling();\n                    }\n                }\n            },\n\n            _close: function(systemTriggered) {\n                var that = this,\n                    wrapper = that.wrapper,\n                    options = that.options,\n                    showOptions = this._animationOptions(\"open\"),\n                    hideOptions = this._animationOptions(\"close\"),\n                    containmentContext = this.containment && !that._isPinned,\n                    doc = containmentContext ? this.containment : $(document),\n                    defaultPrevented;\n\n                if (that._closing) {\n                    return;\n                }\n\n                defaultPrevented = that.trigger(CLOSE, { userTriggered: !systemTriggered });\n                that._closing = !defaultPrevented;\n\n                if (wrapper.is(VISIBLE) && !defaultPrevented) {\n                    options.visible = false;\n\n                    $(KWINDOW).each(function(i, element) {\n                        var contentElement = $(element).children(KWINDOWCONTENT);\n\n                        // Remove overlay set by toFront\n                        if (element != wrapper && contentElement.find(\"> .\" + KCONTENTFRAME).length > 0) {\n                            contentElement.children(KOVERLAY).remove();\n                        }\n                    });\n\n                    this._removeOverlay();\n\n                    // Prevent close animation from stopping\n                    that.wrapper.find(TITLEBAR_BUTTONSSELECTOR).removeClass(\"k-button-flat\");\n\n                    wrapper.kendoStop().kendoAnimate({\n                        effects: hideOptions.effects || showOptions.effects,\n                        reverse: hideOptions.reverse === true,\n                        duration: hideOptions.duration,\n                        complete: this._deactivate.bind(this)\n                    });\n                    $(window).off(MODAL_NS);\n                }\n\n                if (that.options.isMaximized) {\n                    that._enableDocumentScrolling();\n                    if (that._containerScrollTop && that._containerScrollTop > 0) {\n                        doc.scrollTop(that._containerScrollTop);\n                    }\n                    if (that._containerScrollLeft && that._containerScrollLeft > 0) {\n                        doc.scrollLeft(that._containerScrollLeft);\n                    }\n                }\n\n                if (that.options.iframe) {\n                    that.wrapper.trigger(\"blur\");\n                }\n            },\n\n            _deactivate: function() {\n                var that = this;\n\n                that.wrapper\n                    .removeClass(INLINE_FLEX)\n                    .hide()\n                    .css(\"opacity\", \"\");\n\n                that.trigger(DEACTIVATE);\n\n                if (that.options.modal) {\n                    var lastModal = that._object(that._modals().last());\n                    if (lastModal) {\n                        lastModal.toFront();\n                    }\n                }\n            },\n\n            close: function() {\n                this._close(true);\n                return this;\n            },\n\n            _actionable: function(element) {\n                return $(element).is(`${TITLEBAR_BUTTONSSELECTOR}, :input, a, .k-input, .k-icon, .k-svg-icon, [role='gridcell'], .k-input-value-text`);\n            },\n\n            _shouldFocus: function(target) {\n                var active = activeElement(),\n                    element = this.wrapper;\n\n                return this.options.autoFocus &&\n                    !$(active).is(element) &&\n                    !this._actionable(target) &&\n                    (!element.find(active).length || !element.find(target).length);\n            },\n\n            toFront: function(e, avoidFocus) {\n                var that = this,\n                    wrapper = that.wrapper,\n                    currentWindow = wrapper[0],\n                    containmentContext = that.containment && !that._isPinned,\n                    openAnimation = this._animationOptions(\"open\"),\n                    zIndex = +wrapper.css(ZINDEX),\n                    originalZIndex = zIndex,\n                    target = (e && e.target) || null;\n\n                $(KWINDOW).each(function(i, element) {\n                    var windowObject = $(element),\n                        zIndexNew = windowObject.css(ZINDEX),\n                        contentElement = windowObject.children(KWINDOWCONTENT);\n\n                    if (!isNaN(zIndexNew)) {\n                        zIndex = Math.max(+zIndexNew, zIndex);\n                    }\n\n                    wrapper.data(\"isFront\", element == currentWindow);\n                    // Add overlay to windows with iframes and lower z-index to prevent\n                    // trapping of events when resizing / dragging\n\n                    if (element != currentWindow &&\n                        contentElement.find(\".\" + KCONTENTFRAME).length &&\n                        !contentElement.find(KOVERLAY).length) {\n                        contentElement.append(templates.overlay);\n                    }\n                });\n\n                if (!wrapper[0].style.zIndex || originalZIndex < zIndex) {\n                    wrapper.css(ZINDEX, zIndex + 2);\n                }\n                that.element.find(\"> .k-overlay\").remove();\n\n                if (that._shouldFocus(target)) {\n                    if (!avoidFocus) {\n                        setTimeout(function() {\n                            that.wrapper.focus();\n                        }, openAnimation ? openAnimation.duration : 0);\n                    }\n\n                    var scrollTop = containmentContext ? that.containment.scrollTop() : $(window).scrollTop(),\n                        windowTop = parseInt(wrapper.position().top, 10);\n\n                    if (!that.options.pinned && windowTop > 0 && windowTop < scrollTop) {\n                        if (scrollTop > 0) {\n                            $(window).scrollTop(windowTop);\n                        } else {\n                            wrapper.css(\"top\", scrollTop);\n                        }\n                    }\n                }\n\n                wrapper = null;\n\n                return that;\n            },\n\n            toggleMaximization: function() {\n                if (this._closing) {\n                    return this;\n                }\n\n                return this[this.options.isMaximized ? \"restore\" : \"maximize\"]();\n            },\n\n            restore: function() {\n                var that = this;\n                var options = that.options;\n                var minHeight = options.minHeight;\n                var restoreOptions = that.restoreOptions;\n                var shouldRestrictTop;\n                var container = that.containment && !that._isPinned ? that.containment : $(document);\n\n                if (!options.isMaximized && !options.isMinimized) {\n                    return that;\n                }\n\n                if (minHeight && minHeight != Infinity) {\n                    that.wrapper.css(\"min-height\", minHeight);\n                }\n\n                if (restoreOptions && !options.isMaximized) {\n                    restoreOptions.height = constrain(restoreOptions.height, that.options.minHeight, that.options.maxHeight);\n\n                    shouldRestrictTop = options.position.top + parseInt(restoreOptions.height, 10) > that.maxTop;\n\n                    if (shouldRestrictTop) {\n                        options.position.top = constrain(options.position.top, that.minTop, that.maxTop - parseInt(restoreOptions.height, 10));\n\n                        extend(restoreOptions, {\n                            left: options.position.left,\n                            top: options.position.top\n                        });\n                    }\n                }\n\n                that.wrapper\n                    .css({\n                        position: options.pinned ? \"fixed\" : \"absolute\",\n                        left: restoreOptions.left,\n                        top: restoreOptions.top,\n                        width: restoreOptions.width,\n                        height: restoreOptions.height\n                    })\n                    .removeClass(MAXIMIZEDSTATE)\n                    .removeClass(KWINDOWMINIMIZED)\n                    .find(\".k-window-content,.k-resize-handle\").show().end()\n                    .find(\".k-window-titlebar .k-i-window-restore,.k-window-titlebar .k-svg-i-window-restore\").parent().remove().end().end()\n                    .find(MINIMIZE_MAXIMIZEICONSELECTORS).parent().show().end().end()\n                    .find(PIN_UNPINICONCLASSSELECTOR).parent().show();\n\n                if (options.isMaximized) {\n                    that.wrapper.find(\".k-i-window,.k-svg-i-window\").parent().trigger(\"focus\");\n                } else if (options.isMinimized) {\n                    that.wrapper.find(\".k-i-window-minimize,.k-svg-i-window-minimize\").parent().trigger(\"focus\");\n                }\n\n                that.options.width = restoreOptions.width;\n                that.options.height = restoreOptions.height;\n\n                if (!that.options.modal.preventScroll) {\n                    that._enableDocumentScrolling();\n                }\n\n                if (that._containerScrollTop && that._containerScrollTop > 0) {\n                    container.scrollTop(that._containerScrollTop);\n                }\n                if (that._containerScrollLeft && that._containerScrollLeft > 0) {\n                    container.scrollLeft(that._containerScrollLeft);\n                }\n\n                options.isMaximized = options.isMinimized = false;\n\n                that.wrapper.removeAttr(\"aria-labelled-by\");\n\n                that.resize();\n\n                that.trigger(RESTORE);\n\n                return that;\n            },\n\n            _sizingAction: function(actionId, callback) {\n                var that = this,\n                    wrapper = that.wrapper,\n                    style = wrapper[0].style,\n                    options = that.options;\n\n                if (options.isMaximized || options.isMinimized) {\n                    return that;\n                }\n\n                that.restoreOptions = {\n                    width: style.width,\n                    height: style.height\n                };\n\n                wrapper\n                    .children(KWINDOWRESIZEHANDLES).hide().end()\n                    .children(KWINDOWTITLEBAR).find(MINIMIZE_MAXIMIZEICONSELECTORS).parent().hide()\n                    .eq(0).before(templates.action({ name: \"window-restore\" }));\n\n                callback.call(that);\n\n                that.wrapper.children(KWINDOWTITLEBAR).find(PIN_UNPINICONCLASSSELECTOR).parent().toggle(actionId !== \"maximize\");\n\n                that.trigger(actionId);\n\n                wrapper.find(\".k-i-window-restore,.k-svg-i-window-restore\").parent().trigger(\"focus\");\n\n                return that;\n            },\n\n            maximize: function() {\n                this._sizingAction(\"maximize\", function() {\n                    var that = this,\n                        wrapper = that.wrapper,\n                        containmentContext = this.containment && !that._isPinned,\n                        position = wrapper.position(),\n                        doc = $(document);\n\n                    extend(that.restoreOptions, {\n                        left: position.left + (containmentContext ? this.containment.scrollLeft() : 0),\n                        top: position.top + (containmentContext ? this.containment.scrollTop() : 0)\n                    });\n\n                    this._containerScrollTop = containmentContext ? this.containment.scrollTop() : doc.scrollTop();\n                    this._containerScrollLeft = containmentContext ? this.containment.scrollLeft() : doc.scrollLeft();\n\n                    that._stopDocumentScrolling();\n\n                    wrapper\n                        .css({\n                            top: containmentContext ? this.containment.scrollTop() : 0,\n                            left: containmentContext ? this.containment.scrollLeft() : 0,\n                            position: containmentContext ? \"absolute\" : \"fixed\"\n                        })\n                        .addClass(MAXIMIZEDSTATE);\n\n                    that.options.isMaximized = true;\n\n                    that._onDocumentResize();\n                });\n\n                return this;\n            },\n\n            _stopDocumentScrolling: function() {\n                var that = this;\n                var containment = that.containment;\n\n                if (containment && !that._isPinned) {\n                    that._storeOverflowRule(containment);\n                    containment.css(OVERFLOW, HIDDEN);\n                    that.wrapper.css({\n                        maxWidth: containment.innerWidth(),\n                        maxHeight: containment.innerHeight()\n                    });\n                    return;\n                }\n\n                var $body = $(\"body\");\n                that._storeOverflowRule($body);\n                $body.css(OVERFLOW, HIDDEN);\n\n                var $html = $(\"html\");\n                that._storeOverflowRule($html);\n                $html.css(OVERFLOW, HIDDEN);\n            },\n\n            _enableDocumentScrolling: function() {\n                var that = this;\n                var containment = that.containment;\n\n                if (containment && !that._isPinned) {\n                    that._restoreOverflowRule(containment);\n                    that.wrapper.css({\n                        maxWidth: containment.width,\n                        maxHeight: containment.height\n                    });\n                    return;\n                }\n\n                that._restoreOverflowRule($(document.body));\n                that._restoreOverflowRule($(\"html\"));\n            },\n\n            _storeOverflowRule: function($element) {\n                if (this._isOverflowStored($element)) {\n                    return;\n                }\n\n                var overflowRule = $element.get(0).style.overflow;\n\n                if (typeof overflowRule === \"string\") {\n                    $element.data(DATADOCOVERFLOWRULE, overflowRule);\n                }\n            },\n\n            _isOverflowStored: function($element) {\n                return typeof $element.data(DATADOCOVERFLOWRULE) === \"string\";\n            },\n\n            _restoreOverflowRule: function($element) {\n                var overflowRule = $element.data(DATADOCOVERFLOWRULE);\n\n                if (overflowRule !== null && overflowRule !== undefined$1) {\n                    $element.css(OVERFLOW, overflowRule);\n                    $element.removeData(DATADOCOVERFLOWRULE);\n                } else {\n                    $element.css(OVERFLOW, \"\");\n                }\n            },\n\n            isMaximized: function() {\n                return this.options.isMaximized;\n            },\n\n            minimize: function() {\n                this._sizingAction(\"minimize\", function() {\n                    var that = this;\n\n                    that.wrapper.css({\n                        height: \"\",\n                        minHeight: \"\"\n                    });\n\n                    that.element.hide();\n\n                    that.options.isMinimized = true;\n                });\n\n                this.wrapper.attr(\"aria-labelled-by\", this.element.attr(\"aria-labelled-by\"));\n                this.wrapper.addClass(KWINDOWMINIMIZED);\n\n                this._updateBoundaries();\n\n                return this;\n            },\n\n            isMinimized: function() {\n                return this.options.isMinimized;\n            },\n\n            pin: function() {\n                var that = this,\n                    win = $(window),\n                    wrapper = that.wrapper,\n                    options = that.options,\n                    position = options.position,\n                    top = this.containment ? getPosition(wrapper[0]).top + toInt(this.containment, \"borderTopWidth\") : toInt(wrapper, \"top\"),\n                    left = this.containment ? getPosition(wrapper[0]).left + toInt(this.containment, \"borderLeftWidth\") : toInt(wrapper, \"left\");\n\n                if (!that.options.isMaximized) {\n                    position.top = top;\n                    position.left = left;\n\n                    if (that._scrollIsAppended && (!this.containment || this.containment.css(\"position\") !== \"fixed\")) {\n\n                        position.top -= win.scrollTop();\n                        position.left -= win.scrollLeft();\n                        that._scrollIsAppended = false;\n                    }\n\n                    wrapper.css(extend(position, { position: \"fixed\" }));\n                    var pinIcon = wrapper.children(KWINDOWTITLEBAR).find(KPINICONCLASSSELECTOR).eq(0);\n                    if (pinIcon.length > 0) {\n                        kendo.ui.icon(pinIcon, { icon: \"unpin\" });\n                    }\n\n                    that._isPinned = true;\n                    that.options.pinned = true;\n\n                    if (this.containment) {\n                        options.maxWidth = options.maxHeight = Infinity;\n                        wrapper.css({\n                            maxWidth: \"\",\n                            maxHeight: \"\"\n                        });\n                    }\n                }\n            },\n\n            unpin: function() {\n                var that = this,\n                    win = $(window),\n                    wrapper = that.wrapper,\n                    options = that.options,\n                    position = that.options.position,\n                    containment = that.containment,\n                    top = parseInt(wrapper.css(\"top\"), 10) + win.scrollTop(),\n                    left = parseInt(wrapper.css(\"left\"), 10) + win.scrollLeft();\n\n                if (!that.options.isMaximized) {\n                    that._isPinned = false;\n                    that._scrollIsAppended = true;\n                    that.options.pinned = false;\n\n                    if (containment) {\n                        that._updateBoundaries();\n\n                        options.maxWidth = Math.min(containment.width, options.maxWidth);\n                        options.maxHeight = Math.min(containment.height - toInt(wrapper, \"padding-top\"), options.maxHeight);\n\n                        wrapper.css({\n                            maxWidth: options.maxWidth,\n                            maxHeight: options.maxHeight\n                        });\n\n                        if (top < containment.position.top) {\n                            top = that.minTop;\n                        } else if (top > containment.position.top + containment.height) {\n                            top = that.maxTop;\n                        } else {\n                            top = top + containment.scrollTop() - (containment.position.top + toInt(containment, \"border-top-width\"));\n                        }\n\n                        if (left < containment.position.left) {\n                            left = that.minLeft;\n                        } else if (left > containment.position.left + containment.width) {\n                            left = that.maxLeft;\n                        } else {\n                            left = left + containment.scrollLeft() - (containment.position.left + toInt(containment, \"border-left-width\"));\n                        }\n\n                    }\n\n                    position.top = constrain(top, that.minTop, that.maxTop);\n                    position.left = constrain(left, that.minLeft, that.maxLeft);\n\n                    wrapper.css(extend(position, { position: \"\" }));\n                    var pinIcon = wrapper.children(KWINDOWTITLEBAR).find(KUNPINICONCLASSSELECTOR).eq(0);\n                    if (pinIcon.length > 0) {\n                        kendo.ui.icon(pinIcon, { icon: \"pin\" });\n                    }\n                }\n            },\n\n            _onDocumentResize: function() {\n                var that = this,\n                    wrapper = that.wrapper,\n                    wnd = $(window),\n                    zoomLevel = kendo.support.zoomLevel(),\n                    contentBoxSizing = wrapper.css(\"box-sizing\") == \"content-box\",\n                    w, h;\n\n                if (!that.options.isMaximized) {\n                    return;\n                }\n\n                var lrBorderWidth = contentBoxSizing ? toInt(wrapper, \"border-left-width\") + toInt(wrapper, \"border-right-width\") : 0;\n                var tbBorderWidth = contentBoxSizing ? toInt(wrapper, \"border-top-width\") + toInt(wrapper, \"border-bottom-width\") : 0;\n                var paddingTop = contentBoxSizing ? toInt(wrapper, \"padding-top\") : 0;\n\n                if (that.containment && !that._isPinned) {\n                    w = that.containment.innerWidth() - lrBorderWidth;\n                    h = that.containment.innerHeight() - (tbBorderWidth + paddingTop);\n                } else {\n                    w = wnd.width() / zoomLevel - lrBorderWidth;\n                    h = wnd.height() / zoomLevel - (tbBorderWidth + paddingTop);\n                }\n\n                wrapper.css({\n                    width: w,\n                    height: h\n                });\n                that.options.width = w;\n                that.options.height = h;\n\n                that.resize();\n            },\n\n            refresh: function(options) {\n                var that = this,\n                    initOptions = that.options,\n                    element = $(that.element),\n                    iframe,\n                    showIframe,\n                    url;\n\n                if (!isPlainObject(options)) {\n                    options = { url: options };\n                }\n\n                options = extend(initOptions.content, options);\n\n                showIframe = defined(initOptions.iframe) ? initOptions.iframe : options.iframe;\n\n                url = options.url;\n\n                if (url) {\n                    if (!defined(showIframe)) {\n                        showIframe = !isLocalUrl(url);\n                    }\n\n                    if (!showIframe) {\n                        // perform AJAX request\n                        that._ajaxRequest(options);\n                    } else {\n                        iframe = element.find(\".\" + KCONTENTFRAME)[0];\n\n                        if (iframe) {\n                            // refresh existing iframe\n                            iframe.src = url || iframe.src;\n                        } else {\n                            // render new iframe\n                            element.html(templates.contentFrame(extend({}, initOptions, { content: options })));\n                        }\n\n                        element.find(\".\" + KCONTENTFRAME)\n                            .off(\"load\" + NS)\n                            .on(\"load\" + NS, this._triggerRefresh.bind(this));\n                    }\n                } else {\n                    if (options.template) {\n                        // refresh template\n                        that.content(template(options.template)({}));\n                    }\n\n                    that.trigger(REFRESH);\n                }\n\n                element.toggleClass(\"k-window-iframecontent\", !!showIframe);\n\n                return that;\n            },\n\n            _triggerRefresh: function() {\n                this.trigger(REFRESH);\n            },\n\n            _ajaxComplete: function() {\n                clearTimeout(this._loadingIconTimeout);\n                this.wrapper.find(REFRESHICONSELECTOR).removeClass(LOADINGICONCLASS);\n            },\n\n            _ajaxError: function(xhr, status) {\n                this.trigger(ERROR, { status: status, xhr: xhr });\n            },\n\n            _ajaxSuccess: function(contentTemplate) {\n                return function(data) {\n                    var html = data;\n                    if (contentTemplate) {\n                        html = template(contentTemplate)(data || {});\n                    }\n\n                    this.content(html, data);\n                    this.element.prop(\"scrollTop\", 0);\n\n                    this.trigger(REFRESH);\n                };\n            },\n\n            _showLoading: function() {\n                this.wrapper.find(REFRESHICONSELECTOR).addClass(LOADINGICONCLASS);\n            },\n\n            _ajaxRequest: function(options) {\n                this._loadingIconTimeout = setTimeout(this._showLoading.bind(this), 100);\n\n                $.ajax(extend({\n                    type: \"GET\",\n                    dataType: \"html\",\n                    cache: false,\n                    error: this._ajaxError.bind(this),\n                    complete: this._ajaxComplete.bind(this),\n                    success: this._ajaxSuccess(options.template).bind(this)\n                }, options));\n            },\n\n            _destroy: function() {\n                if (this.resizing) {\n                    this.resizing.destroy();\n                }\n\n                if (this.dragging) {\n                    this.dragging.destroy();\n                }\n\n                this.wrapper.off(NS)\n                    .children(KWINDOWCONTENT).off(NS).end()\n                    .find(\".k-resize-handle,.k-window-titlebar\").off(NS);\n\n                $(window).off(\"resize\" + NS + this._marker);\n                $(window).off(MODAL_NS);\n                $(window).off(NS);\n\n                clearTimeout(this._loadingIconTimeout);\n\n                Widget.fn.destroy.call(this);\n\n                this.unbind(undefined$1);\n\n                kendo.destroy(this.wrapper);\n            },\n\n            destroy: function() {\n                this._destroy();\n\n                if (this.options.modal) {\n                    this._removeOverlay(true);\n                }\n\n                this.wrapper.empty().remove();\n\n                this.wrapper = this.appendTo = this.element = $();\n            },\n\n            _createWindow: function() {\n                var contentHtml = this.element,\n                    options = this.options,\n                    iframeSrcAttributes,\n                    wrapper,\n                    isRtl = kendo.support.isRtl(contentHtml);\n\n                if (options.scrollable === false) {\n                    contentHtml.css(\"overflow\", \"hidden\");\n                }\n\n                wrapper = $(templates.wrapper(options));\n\n                // Collect the src attributes of all iframes and then set them to empty string.\n                // This seems to fix this IE9 \"feature\": http://msdn.microsoft.com/en-us/library/gg622929%28v=VS.85%29.aspx?ppud=4\n                iframeSrcAttributes = contentHtml.find(\"iframe:not(.k-content-frame)\").map(function() {\n                    var src = this.getAttribute(\"src\");\n                    this.src = \"\";\n                    return src;\n                });\n\n                // Make sure the wrapper is appended to the body only once. IE9+ will throw exceptions if you move iframes in DOM\n                wrapper\n                    .toggleClass(\"k-rtl\", isRtl)\n                    .attr(\"tabindex\", 0)\n                    .append(contentHtml)\n                    .find(\"iframe:not(.k-content-frame)\").each(function(index) {\n                    // Restore the src attribute of the iframes when they are part of the live DOM tree\n                    this.src = iframeSrcAttributes[index];\n                });\n\n                if (this.containment) {\n                    this.containment.prepend(wrapper);\n                } else if (this.appendTo) {\n                    wrapper.appendTo(this.appendTo);\n                }\n\n                wrapper.find(\".k-window-title\")\n                    .css(isRtl ? \"left\" : \"right\", outerWidth(wrapper.find(\".k-window-titlebar-actions\")) + 10);\n\n                contentHtml.css(\"visibility\", \"\").show();\n\n                contentHtml.find(\"[data-role=editor]\").each(function() {\n                    var editor = $(this).data(\"kendoEditor\");\n\n                    if (editor) {\n                        editor.refresh();\n                    }\n                });\n\n                wrapper = contentHtml = null;\n            }\n        });\n\n        templates = {\n            wrapper: template(() => \"<div class='k-window'></div>\"),\n            action: template(({ name, icon }) => {\n                let iconName = (icon || \"\").toLowerCase() || name.toLowerCase();\n                if (iconName == \"restore\") { iconName = \"window-restore\"; }\n\n                return kendo.html.renderButton(`<button role='button' class='k-window-titlebar-action' aria-label='${name}'></button>`, { icon: iconName, fillMode: \"flat\" });\n            }),\n            titlebar: template(({ title }) =>\n                \"<div class='k-window-titlebar k-hstack'>\" +\n                    `<span class='k-window-title'>${title}</span>` +\n                    \"<div class='k-window-titlebar-actions'></div>\" +\n                \"</div>\"\n            ),\n            overlay: \"<div class='k-overlay'></div>\",\n            contentFrame: template(({ title, content }) =>\n                `<iframe frameborder='0' title='${title}' class='${KCONTENTFRAME}' ` +\n                `src='${content.url}'>` +\n                \"This page requires frames in order to show content\" +\n                \"</iframe>\"\n            ),\n            resizeHandle: template((data) => `<div aria-hidden='true' class='k-resize-handle k-resize-${data}'></div>`)\n        };\n\n\n        function WindowResizing(wnd) {\n            var that = this;\n            that.owner = wnd;\n            that._preventDragging = false;\n            that._draggable = new Draggable(wnd.wrapper, {\n                filter: \">\" + KWINDOWRESIZEHANDLES,\n                group: wnd.wrapper.id + \"-resizing\",\n                dragstart: that.dragstart.bind(that),\n                drag: that.drag.bind(that),\n                dragend: that.dragend.bind(that)\n            });\n\n            that._draggable.userEvents.bind(\"press\", that.addOverlay.bind(that));\n            that._draggable.userEvents.bind(\"release\", that.removeOverlay.bind(that));\n        }\n\n        WindowResizing.prototype = {\n            addOverlay: function() {\n                this.owner.wrapper.append(templates.overlay);\n            },\n            removeOverlay: function() {\n                this.owner.wrapper.find(KOVERLAY).remove();\n            },\n            dragstart: function(e) {\n                var that = this;\n                var wnd = that.owner;\n                var wrapper = wnd.wrapper;\n\n                that._preventDragging = wnd.trigger(RESIZESTART);\n                if (that._preventDragging) {\n                    return;\n                }\n\n                that.elementPadding = parseInt(wrapper.css(\"padding-top\"), 10);\n                that.initialPosition = kendo.getOffset(wrapper, \"position\");\n\n                that.resizeDirection = e.currentTarget.prop(\"className\").replace(\"k-resize-handle k-resize-\", \"\");\n\n                that.initialSize = {\n                    width: wrapper.outerWidth(),\n                    height: wrapper.outerHeight()\n                };\n\n                wnd._updateBoundaries();\n\n                that.containerOffset = wnd.containment ? wnd.containment.position : kendo.getOffset(wnd.appendTo);\n\n                var offsetParent = wrapper.offsetParent();\n\n                if (offsetParent.is(\"html\")) {\n                    that.containerOffset.top = that.containerOffset.left = 0;\n                } else {\n                    var marginTop = offsetParent.css(\"margin-top\");\n                    var marginLeft = offsetParent.css(\"margin-left\");\n                    var hasMargin = !zero.test(marginTop) || !zero.test(marginLeft);\n                    if (hasMargin) {\n                        var wrapperPosition = getPosition(wrapper[0]);\n                        var relativeElMarginLeft = wrapperPosition.left - that.containerOffset.left - that.initialPosition.left;\n                        var relativeElMarginTop = wrapperPosition.top - that.containerOffset.top - that.initialPosition.top;\n\n                        that._relativeElMarginLeft = relativeElMarginLeft > 1 ? relativeElMarginLeft : 0;\n                        that._relativeElMarginTop = relativeElMarginTop > 1 ? relativeElMarginTop : 0;\n\n                        that.initialPosition.left += that._relativeElMarginLeft;\n                        that.initialPosition.top += that._relativeElMarginTop;\n                    }\n                }\n\n                wrapper\n                    .children(KWINDOWRESIZEHANDLES).not(e.currentTarget).hide();\n\n                $(BODY).css(CURSOR, e.currentTarget.css(CURSOR));\n            },\n            drag: function(e) {\n                if (this._preventDragging) {\n                    return;\n                }\n                var that = this,\n                    wnd = that.owner,\n                    wrapper = wnd.wrapper,\n                    options = wnd.options,\n                    position = options.position,\n                    direction = that.resizeDirection,\n                    containerOffset = that.containerOffset,\n                    initialPosition = that.initialPosition,\n                    initialSize = that.initialSize,\n                    containmentContext = wnd.containment && !wnd._isPinned,\n                    rtl = kendo.support.isRtl(wnd.containment),\n                    leftRtlOffset = containmentContext && rtl && wnd.containment.innerWidth() > wnd.containment.width ? kendo.support.scrollbar() : 0,\n                    scrollOffset = containmentContext ? { top: wnd.containment.scrollTop(), left: wnd.containment.scrollLeft() } : { top: 0, left: 0 },\n                    newWidth, newHeight,\n                    windowBottom, windowRight,\n                    x = Math.max(e.x.location, 0),\n                    y = Math.max(e.y.location, 0);\n\n                    if (direction.indexOf(\"e\") >= 0) {\n\n                        if (wnd.containment && x - initialSize.width >= wnd.maxLeft - scrollOffset.left + containerOffset.left + leftRtlOffset) {\n                            newWidth = wnd.maxLeft + leftRtlOffset - initialPosition.left + initialSize.width - scrollOffset.left;\n                        } else {\n                            newWidth = x - initialPosition.left - containerOffset.left;\n                        }\n\n                        wrapper.outerWidth(constrain(newWidth, options.minWidth, options.maxWidth));\n                    } else if (direction.indexOf(\"w\") >= 0) {\n                        windowRight = initialPosition.left + initialSize.width + containerOffset.left;\n                        newWidth = constrain(windowRight - x, options.minWidth, options.maxWidth);\n                        position.left = windowRight - newWidth - containerOffset.left - leftRtlOffset - (that._relativeElMarginLeft || 0) + scrollOffset.left;\n\n                        if (wnd.containment && position.left <= wnd.minLeft) {\n                            position.left = wnd.minLeft;\n                            newWidth = constrain(windowRight - leftRtlOffset - position.left - containerOffset.left + scrollOffset.left, options.minWidth, options.maxWidth);\n                        }\n\n                        wrapper.css({\n                            left: position.left,\n                            width: newWidth\n                        });\n                    }\n\n                    var newWindowTop = y;\n                    if (wnd.options.pinned) {\n                        newWindowTop -= $(window).scrollTop();\n                    }\n                    if (direction.indexOf(\"s\") >= 0) {\n                        newHeight = newWindowTop - initialPosition.top - that.elementPadding - containerOffset.top;\n\n                        if (newWindowTop - initialSize.height - that.elementPadding >= wnd.maxTop + containerOffset.top - scrollOffset.top) {\n                            newHeight = wnd.maxTop - initialPosition.top + initialSize.height - scrollOffset.top;\n                        }\n\n                        wrapper.outerHeight(constrain(newHeight, options.minHeight, options.maxHeight));\n                    } else if (direction.indexOf(\"n\") >= 0) {\n                        windowBottom = initialPosition.top + initialSize.height + containerOffset.top;\n                        newHeight = constrain(windowBottom - newWindowTop, options.minHeight, options.maxHeight);\n                        position.top = windowBottom - newHeight - containerOffset.top - (that._relativeElMarginTop || 0) + scrollOffset.top;\n\n                        if (position.top <= wnd.minTop && wnd.containment) {\n                            position.top = wnd.minTop;\n                            newHeight = constrain(windowBottom - position.top - containerOffset.top + scrollOffset.top, options.minHeight, options.maxHeight);\n                        }\n\n                        wrapper.css({\n                            top: position.top,\n                            height: newHeight\n                        });\n                    }\n\n                    if (newWidth) {\n                        wnd.options.width = newWidth + \"px\";\n                    }\n                    if (newHeight) {\n                        wnd.options.height = newHeight + \"px\";\n                    }\n\n                    wnd.resize();\n            },\n            dragend: function(e) {\n                if (this._preventDragging) {\n                    return;\n                }\n\n                var that = this,\n                    wnd = that.owner,\n                    wrapper = wnd.wrapper;\n\n                wrapper\n                    .children(KWINDOWRESIZEHANDLES).not(e.currentTarget).show();\n\n                $(BODY).css(CURSOR, \"\");\n\n                if (wnd.touchScroller) {\n                    wnd.touchScroller.reset();\n                }\n\n                if (e.keyCode == 27) {\n                    wrapper.css(that.initialPosition)\n                        .css(that.initialSize);\n                }\n\n                wnd.trigger(RESIZEEND);\n\n                return false;\n            },\n            destroy: function() {\n                if (this._draggable) {\n                    this._draggable.destroy();\n                }\n\n                this._draggable = this.owner = null;\n            }\n        };\n\n        function WindowDragging(wnd, dragHandle, clickMoveClick) {\n            var that = this,\n                filter = dragHandle;\n\n            if (clickMoveClick) {\n                filter += \",.k-overlay\";\n            }\n\n            that.owner = wnd;\n            that._preventDragging = false;\n            that._draggable = new Draggable(wnd.wrapper, {\n                filter: dragHandle,\n                group: wnd.wrapper.id + \"-moving\",\n                clickMoveClick: clickMoveClick,\n                dragstart: that.dragstart.bind(that),\n                drag: that.drag.bind(that),\n                dragend: that.dragend.bind(that),\n                dragcancel: that.dragcancel.bind(that)\n            });\n\n            that._draggable.userEvents.stopPropagation = false;\n        }\n\n        WindowDragging.prototype = {\n            dragstart: function(e) {\n                var wnd = this.owner,\n                    draggable = wnd.options.draggable,\n                    element = wnd.element,\n                    actions = element.find(\".k-window-titlebar-actions\"),\n                    containerOffset = kendo.getOffset(wnd.appendTo);\n\n                this._preventDragging = wnd.trigger(DRAGSTART) || !draggable;\n                if (this._preventDragging || wnd.isMaximized()) {\n                    return;\n                }\n\n                wnd.initialWindowPosition = kendo.getOffset(wnd.wrapper, \"position\");\n\n                wnd.initialPointerPosition = {\n                    left: wnd.options.position.left,\n                    top: wnd.options.position.top\n                };\n\n                wnd.startPosition = {\n                    left: e.x.client - wnd.initialWindowPosition.left,\n                    top: e.y.client - wnd.initialWindowPosition.top\n                };\n\n                wnd._updateBoundaries();\n                if (!wnd.containment) {\n                    if (actions.length > 0) {\n                        wnd.minLeft = outerWidth(actions) + parseInt(actions.css(\"right\"), 10) - outerWidth(element);\n                    } else {\n                        wnd.minLeft = 20 - outerWidth(element); // at least 20px remain visible\n                    }\n\n                    wnd.minLeft -= containerOffset.left;\n                    wnd.minTop = -containerOffset.top;\n                }\n\n                $(templates.overlay).appendTo(wnd.wrapper).css({ opacity: 0 });\n\n                wnd.wrapper.children(KWINDOWRESIZEHANDLES).hide();\n\n                $(BODY).css(CURSOR, e.currentTarget.css(CURSOR));\n            },\n\n            drag: function(e) {\n                var wnd = this.owner;\n                var position = wnd.options.position;\n                var axis = wnd.options.draggable.axis;\n                var left;\n                var top;\n\n                if (this._preventDragging || wnd.isMaximized()) {\n                    return;\n                }\n\n                if (!axis || axis.toLowerCase() === \"x\") {\n                    left = e.x.client - wnd.startPosition.left;\n\n                    if (wnd.containment && !wnd._isPinned) {\n                        left += wnd.containment.scrollLeft();\n                    }\n\n                    position.left = constrain(left, wnd.minLeft, wnd.maxLeft);\n                }\n\n                if (!axis || axis.toLowerCase() === \"y\") {\n                    top = e.y.client - wnd.startPosition.top;\n\n                    if (wnd.containment && !wnd._isPinned) {\n                        top += wnd.containment.scrollTop();\n                    }\n\n                    position.top = constrain(top, wnd.minTop, wnd.maxTop);\n                }\n\n                if (kendo.support.transforms) {\n                    $(wnd.wrapper).css(\n                        \"transform\", \"translate(\" +\n                        (position.left - wnd.initialPointerPosition.left) + \"px, \" +\n                        (position.top - wnd.initialPointerPosition.top) + \"px)\"\n                    );\n                } else {\n                    $(wnd.wrapper).css(position);\n                }\n\n            },\n\n            _finishDrag: function() {\n                var wnd = this.owner;\n\n                wnd.wrapper\n                    .children(KWINDOWRESIZEHANDLES).toggle(!wnd.options.isMinimized).end()\n                    .find(KOVERLAY).remove();\n\n                $(BODY).css(CURSOR, \"\");\n            },\n\n            dragcancel: function(e) {\n                if (this._preventDragging) {\n                    return;\n                }\n                this._finishDrag();\n\n                e.currentTarget.closest(KWINDOW).css(this.owner.initialWindowPosition);\n            },\n\n            dragend: function() {\n                var wnd = this.owner;\n\n                if (this._preventDragging || wnd.isMaximized()) {\n                    return;\n                }\n\n                $(wnd.wrapper)\n                    .css(wnd.options.position)\n                    .css(\"transform\", \"\");\n\n                this._finishDrag();\n\n                wnd.trigger(DRAGEND);\n\n                return false;\n            },\n            destroy: function() {\n                if (this._draggable) {\n                    this._draggable.destroy();\n                }\n\n                this._draggable = this.owner = null;\n            }\n        };\n\n        kendo.ui.plugin(Window);\n\n    })(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { kendo$1 as default };\n"]}